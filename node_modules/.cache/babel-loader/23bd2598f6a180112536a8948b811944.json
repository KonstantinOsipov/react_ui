{"ast":null,"code":"var _jsxFileName = \"/home/ivan/MEGAsync/metatx-standard-playground/example/react-ui/src/components/Ethers_Forward_AllTokens.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { ethers, providers } from \"ethers\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\n\nlet sigUtil = require(\"eth-sig-util\");\n\nlet config = {\n  contract: {\n    address: \"0x6ec90770285D545B9872795b7D9f833025F4dF9F\",\n    abi: [{\n      \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"newQuote\",\n        \"type\": \"string\"\n      }],\n      \"name\": \"setQuote\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"_forwarder\",\n        \"type\": \"address\"\n      }],\n      \"name\": \"setTrustedForwarder\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"getQuote\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"currentQuote\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"address\",\n        \"name\": \"currentOwner\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }],\n      \"name\": \"isTrustedForwarder\",\n      \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"quote\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"trustedForwarder\",\n      \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }, {\n      \"inputs\": [],\n      \"name\": \"versionRecipient\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }]\n  },\n  apiKey: {\n    test: \"m60yDrUs7.5c3b23fa-0b93-46ac-86f9-79e998d8f361\",\n    prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n  }\n};\nconfig.erc20ForwarderAddress = \"0x9A60349561E0489faB15A6cc5ad9F75061db0F52\";\nconfig.daiAddress = \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\";\nconfig.usdtAddress = \"0x8e1084f3599ba90991C3b2f9e25D920738C1496D\";\nconfig.usdc = {\n  address: \"0x6043fD7126e4229d6FcaC388c9E1C8d333CCb8fA\",\n  abi: [{\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"name\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"symbol\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"initialBalance\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"authorizer\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"AuthorizationCanceled\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"authorizer\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"AuthorizationUsed\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"_account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"Blacklisted\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"newBlacklister\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"BlacklisterChanged\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"burner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Burn\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"newMasterMinter\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"MasterMinterChanged\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"minter\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"to\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"minter\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"minterAllowedAmount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"MinterConfigured\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"oldMinter\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"MinterRemoved\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": false,\n      \"internalType\": \"address\",\n      \"name\": \"previousOwner\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"Pause\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"newAddress\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"PauserChanged\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"newRescuer\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"RescuerChanged\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"from\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"to\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"_account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"UnBlacklisted\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [],\n    \"name\": \"Unpause\",\n    \"type\": \"event\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"APPROVE_WITH_AUTHORIZATION_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"CANCEL_AUTHORIZATION_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"DECREASE_ALLOWANCE_WITH_AUTHORIZATION_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"DOMAIN_SEPARATOR\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"INCREASE_ALLOWANCE_WITH_AUTHORIZATION_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"PERMIT_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"TRANSFER_WITH_AUTHORIZATION_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"allowance\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"approve\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validAfter\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validBefore\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"approveWithAuthorization\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"authorizer\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"authorizationState\",\n    \"outputs\": [{\n      \"internalType\": \"enumGasAbstraction.AuthorizationState\",\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"blacklist\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"blacklister\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"burn\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"authorizer\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"cancelAuthorization\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"minter\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"minterAllowedAmount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"configureMinter\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"currency\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\n      \"internalType\": \"uint8\",\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"decrement\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"decrement\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validAfter\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validBefore\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"decreaseAllowanceWithAuthorization\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"increment\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"increment\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validAfter\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validBefore\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"increaseAllowanceWithAuthorization\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"tokenName\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"tokenSymbol\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"tokenCurrency\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"tokenDecimals\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"newMasterMinter\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"newPauser\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"newBlacklister\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"initialize\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"newName\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"initializeV2\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"isBlacklisted\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"isMinter\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"masterMinter\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_to\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"mint\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"minter\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"minterAllowance\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"nonces\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"pause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"paused\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"pauser\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"owner\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"deadline\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"permit\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"minter\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"removeMinter\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"contractIERC20\",\n      \"name\": \"tokenContract\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"to\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"amount\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"rescueERC20\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"rescuer\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"to\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"transfer\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"from\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"to\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"newOwner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"from\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"to\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"value\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validAfter\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"validBefore\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"nonce\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"transferWithAuthorization\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_account\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"unBlacklist\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"unpause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_newBlacklister\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"updateBlacklister\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_newMasterMinter\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"updateMasterMinter\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"_newPauser\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"updatePauser\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"newRescuer\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"updateRescuer\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }]\n};\nconfig.dai = {\n  address: \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\",\n  abi: [{\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"chainId_\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"src\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"guy\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": true,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"bytes4\",\n      \"name\": \"sig\",\n      \"type\": \"bytes4\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"usr\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"bytes32\",\n      \"name\": \"arg1\",\n      \"type\": \"bytes32\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"bytes32\",\n      \"name\": \"arg2\",\n      \"type\": \"bytes32\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"bytes\",\n      \"name\": \"data\",\n      \"type\": \"bytes\"\n    }],\n    \"name\": \"LogNote\",\n    \"type\": \"event\"\n  }, {\n    \"anonymous\": false,\n    \"inputs\": [{\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"src\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": true,\n      \"internalType\": \"address\",\n      \"name\": \"dst\",\n      \"type\": \"address\"\n    }, {\n      \"indexed\": false,\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"DOMAIN_SEPARATOR\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"PERMIT_TYPEHASH\",\n    \"outputs\": [{\n      \"internalType\": \"bytes32\",\n      \"name\": \"\",\n      \"type\": \"bytes32\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"allowance\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"usr\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"approve\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"usr\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"burn\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\n      \"internalType\": \"uint8\",\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"guy\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"deny\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"usr\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"src\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"dst\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"move\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"nonces\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"holder\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"spender\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"nonce\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"expiry\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"bool\",\n      \"name\": \"allowed\",\n      \"type\": \"bool\"\n    }, {\n      \"internalType\": \"uint8\",\n      \"name\": \"v\",\n      \"type\": \"uint8\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"r\",\n      \"type\": \"bytes32\"\n    }, {\n      \"internalType\": \"bytes32\",\n      \"name\": \"s\",\n      \"type\": \"bytes32\"\n    }],\n    \"name\": \"permit\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"usr\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"pull\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"usr\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"push\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"guy\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"rely\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"dst\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"transfer\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": false,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"src\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"dst\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"wad\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"transferFrom\",\n    \"outputs\": [{\n      \"internalType\": \"bool\",\n      \"name\": \"\",\n      \"type\": \"bool\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"version\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"constant\": true,\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"wards\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }]\n};\nlet usdcDomainData = {\n  name: \"USDC Coin\",\n  version: \"1\",\n  chainId: 42,\n  verifyingContract: config.usdc.address\n};\nlet daiDomainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nlet daiPermitType = [{\n  name: \"holder\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"expiry\",\n  type: \"uint256\"\n}, {\n  name: \"allowed\",\n  type: \"bool\"\n}];\nlet daiDomainData = {\n  name: \"Dai Stablecoin\",\n  version: \"1\",\n  chainId: 42,\n  verifyingContract: config.daiAddress\n};\nlet domainType = [{\n  name: \"name\",\n  type: \"string\"\n}, {\n  name: \"version\",\n  type: \"string\"\n}, {\n  name: \"chainId\",\n  type: \"uint256\"\n}, {\n  name: \"verifyingContract\",\n  type: \"address\"\n}];\nlet eip2612PermitType = [{\n  name: \"owner\",\n  type: \"address\"\n}, {\n  name: \"spender\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"deadline\",\n  type: \"uint256\"\n}];\nlet walletProvider, walletSigner, ethersProvider;\nlet contract, contractInterface;\nlet ercForwarderClient, permitClient;\nlet usdcToken, daiToken;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  link: {\n    marginLeft: \"5px\"\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n    opacity: '.85!important',\n    background: '#000'\n  }\n}));\nlet biconomy, userAddress;\n\nfunction App() {\n  const classes = useStyles();\n  const [backdropOpen, setBackdropOpen] = React.useState(true);\n  const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n  const [quote, setQuote] = useState(\"This is a default quote\");\n  const [owner, setOwner] = useState(\"Default Owner Address\");\n  const [newQuote, setNewQuote] = useState(\"\");\n  const [newToken, setNewToken] = useState(\"\");\n  const [selectedAddress, setSelectedAddress] = useState(\"\");\n  const [metaTxEnabled] = useState(true);\n  const [transactionHash, setTransactionHash] = useState(\"\");\n\n  const handleClose = () => {\n    setBackdropOpen(false);\n  };\n\n  useEffect(() => {\n    async function init() {\n      if (typeof window.ethereum !== \"undefined\" && window.ethereum.isMetaMask) {\n        // Ethereum user detected. You can now use the provider.\n        debugger;\n        const provider = window[\"ethereum\"];\n        await provider.enable();\n        setLoadingMessage(\"Initializing Biconomy ...\"); // We're creating biconomy provider linked to your network of choice where your contract is deployed\n\n        let jsonRpcProvider = new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n        biconomy = new Biconomy(provider, {\n          walletProvider: window.ethereum,\n          apiKey: config.apiKey.prod,\n          debug: true\n        });\n        /*\n          This provider is linked to your wallet.\n          If needed, substitute your wallet solution in place of window.ethereum \n        */\n\n        ethersProvider = new ethers.providers.Web3Provider(biconomy);\n        walletProvider = new ethers.providers.Web3Provider(window.ethereum);\n        walletSigner = walletProvider.getSigner();\n        userAddress = await walletSigner.getAddress();\n        setSelectedAddress(userAddress);\n        biconomy.onEvent(biconomy.READY, async () => {\n          // Initialize your dapp here like getting user accounts etc\n          contract = new ethers.Contract(config.contract.address, config.contract.abi, biconomy.getSignerByAddress(userAddress));\n          usdcToken = new ethers.Contract(config.usdc.address, config.usdc.abi, biconomy.getSignerByAddress(userAddress));\n          daiToken = new ethers.Contract(config.dai.address, config.dai.abi, biconomy.getSignerByAddress(userAddress));\n          ercForwarderClient = biconomy.erc20ForwarderClient;\n          permitClient = biconomy.permitClient;\n          contractInterface = new ethers.utils.Interface(config.contract.abi);\n          getQuoteFromNetwork();\n        }).onEvent(biconomy.ERROR, (error, message) => {\n          // Handle error while initializing mexa\n          console.log(message);\n          console.log(error);\n        });\n      } else {\n        showErrorMessage(\"Metamask not installed\");\n      }\n    }\n\n    init();\n  }, []);\n\n  const onQuoteChange = event => {\n    setNewQuote(event.target.value);\n  };\n\n  const onTokenChange = event => {\n    setNewToken(event.target.value);\n  }; //EIP712 only\n\n\n  const onSubmitWithUSDC = async () => {\n    if (newQuote != \"\" && contract) {\n      setTransactionHash(\"\");\n\n      if (metaTxEnabled) {\n        let userAddress = selectedAddress;\n        console.log(usdcDomainData); //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n\n        const usdcPermitOptions = {\n          domainData: usdcDomainData,\n          value: \"100000000000000000000\",\n          userAddress: userAddress,\n          deadline: Number(Math.floor(Date.now() / 1000 + 3600))\n        };\n        console.log(usdcPermitOptions);\n        console.log(\"getting permit to spend usdc tokens\");\n        showInfoMessage(`Getting signature and permit transaction to spend usdc token by ERC20 Forwarder contract`); //If you're not using biconomy's permit client as biconomy's member you can create your own without importing Biconomy.\n        //Users need to pass provider object from window, spender address (erc20 forwarder OR the fee proxy address) and DAI's address for your network\n        //OR use biconomy's permitclient member as below!  \n        // This step only needs to be done once and is valid during the given deadline\n\n        let permitTx = await permitClient.eip2612Permit(usdcPermitOptions);\n        await permitTx.wait(1);\n        console.log(\"Sending meta transaction\");\n        showInfoMessage(\"Building transaction to forward\"); // txGas should be calculated and passed here or calculate within the method\n\n        let {\n          data\n        } = await contract.populateTransaction.setQuote(newQuote);\n        let gasPrice = await ethersProvider.getGasPrice();\n        let gasLimit = await ethersProvider.estimateGas({\n          to: config.contract.address,\n          from: userAddress,\n          data: data\n        });\n        console.log(gasLimit.toString());\n        console.log(gasPrice.toString());\n        console.log(data);\n        const builtTx = await ercForwarderClient.buildTx({\n          to: config.contract.address,\n          token: config.usdc.address,\n          txGas: Number(gasLimit),\n          data\n        });\n        const tx = builtTx.request;\n        const fee = builtTx.cost;\n        console.log(tx);\n        console.log(fee);\n        showInfoMessage(`Signing message for meta transaction`); //signature of this method is sendTxEIP712({req, signature = null, userAddress})\n        //signature param is optional. check network agnostics section for more details about this\n        //userAddress is must when your provider does not have a signer with accounts\n\n        let transaction = await ercForwarderClient.sendTxEIP712({\n          req: tx\n        }); //returns an object containing code, log, message, txHash\n\n        console.log('here ' + transaction.txHash);\n\n        if (transaction && transaction.code == 200 && transaction.txHash) {\n          //event emitter methods\n          ethersProvider.once(transaction.txHash, result => {\n            // Emitted when the transaction has been mined\n            console.log(result);\n            setTransactionHash(transaction.txHash);\n            getQuoteFromNetwork();\n          });\n        } else {\n          showErrorMessage(transaction.message);\n        }\n      } else {\n        console.log(\"Sending normal transaction\");\n        let tx = await contract.setQuote(newQuote);\n        console.log(\"Transaction hash : \", tx.hash);\n        showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n        let confirmation = await tx.wait();\n        console.log(confirmation);\n        setTransactionHash(tx.hash);\n        showSuccessMessage(\"Transaction confirmed on chain\");\n        getQuoteFromNetwork();\n      }\n    } else {\n      showErrorMessage(\"Please enter the quote\");\n    }\n  }; // EIP712 only!\n\n\n  const onSubmitWithDAI = async () => {\n    if (newQuote != \"\" && contract) {\n      setTransactionHash(\"\");\n\n      if (metaTxEnabled) {\n        let userAddress = selectedAddress;\n        console.log(usdcDomainData); //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n\n        const daiPermitOptions = {\n          spender: config.erc20ForwarderAddress,\n          expiry: Math.floor(Date.now() / 1000 + 3600),\n          allowed: true\n        };\n        console.log(daiPermitOptions);\n        console.log(\"getting permit to spend DAI tokens\");\n        showInfoMessage(`Getting signature and permit transaction to spend DAI token by ERC20 Forwarder contract`); //If you're not using biconomy's permit client as biconomy's member you can create your own without importing Biconomy.\n        //Users need to pass provider object from window, spender address (erc20 forwarder OR the fee proxy address) and DAI's address for your network\n        //OR use biconomy's permitclient member as below!  \n        // This step only needs to be done once and is valid during the given deadline\n\n        let permitTx = await permitClient.daiPermit(daiPermitOptions);\n        await permitTx.wait(1);\n        console.log(\"Sending meta transaction\");\n        showInfoMessage(\"Building transaction to forward\"); // txGas should be calculated and passed here or calculate within the method\n\n        let {\n          data\n        } = await contract.populateTransaction.setQuote(newQuote);\n        let gasPrice = await ethersProvider.getGasPrice();\n        let gasLimit = await ethersProvider.estimateGas({\n          to: config.contract.address,\n          from: userAddress,\n          data: data\n        });\n        console.log(gasLimit.toString());\n        console.log(gasPrice.toString());\n        console.log(data);\n        const builtTx = await ercForwarderClient.buildTx({\n          to: config.contract.address,\n          token: config.dai.address,\n          txGas: Number(gasLimit),\n          data\n        });\n        const tx = builtTx.request;\n        const fee = builtTx.cost;\n        console.log(tx);\n        console.log(fee);\n        alert(`You will be charged ${fee} amount of DAI ${biconomy.daiTokenAddress} for this transaction`);\n        showInfoMessage(`Signing message for meta transaction`); //signature of this method is sendTxEIP712({req, signature = null, userAddress})\n        //signature param is optional. check network agnostics section for more details about this\n        //userAddress is must when your provider does not have a signer with accounts\n\n        let transaction = await ercForwarderClient.sendTxEIP712({\n          req: tx\n        }); //returns an object containing code, log, message, txHash\n\n        console.log(transaction);\n\n        if (transaction && transaction.code == 200 && transaction.txHash) {\n          //event emitter methods\n          ethersProvider.once(transaction.txHash, result => {\n            // Emitted when the transaction has been mined\n            console.log(result);\n            console.log('this works!');\n            console.log(transaction.txHash);\n            setTransactionHash(transaction.txHash);\n            getQuoteFromNetwork();\n          });\n        } else {\n          showErrorMessage(transaction.message);\n        }\n      } else {\n        console.log(\"Sending normal transaction\");\n        let tx = await contract.setQuote(newQuote);\n        console.log(\"Transaction hash : \", tx.hash);\n        showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n        let confirmation = await tx.wait();\n        console.log(confirmation);\n        setTransactionHash(tx.hash);\n        showSuccessMessage(\"Transaction confirmed on chain\");\n        getQuoteFromNetwork();\n      }\n    } else {\n      showErrorMessage(\"Please enter the quote\");\n    }\n  }; // EIP712 only\n\n\n  const onSubmitWithUSDT = async () => {\n    if (newQuote != \"\" && contract) {\n      setTransactionHash(\"\");\n\n      if (metaTxEnabled) {\n        let userAddress = selectedAddress;\n        console.log(usdcDomainData); //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n        // user must approve USDT once to give allowance to erc20ForwarderAddress\n        // assuming we already have allowance\n\n        console.log(\"Sending meta transaction\");\n        showInfoMessage(\"Building transaction to forward\"); // txGas should be calculated and passed here or calculate within the method\n\n        let {\n          data\n        } = await contract.populateTransaction.setQuote(newQuote);\n        let gasPrice = await ethersProvider.getGasPrice();\n        let gasLimit = await ethersProvider.estimateGas({\n          to: config.contract.address,\n          from: userAddress,\n          data: data\n        });\n        console.log(gasLimit.toString());\n        console.log(gasPrice.toString());\n        console.log(data);\n        const builtTx = await ercForwarderClient.buildTx({\n          to: config.contract.address,\n          token: config.usdtAddress,\n          txGas: Number(gasLimit),\n          data\n        });\n        const tx = builtTx.request;\n        const fee = builtTx.cost;\n        console.log(tx);\n        console.log(fee);\n        alert(`You will be charged ${fee} amount of USDT ${config.usdtAddress} for this transaction`);\n        showInfoMessage(`Signing message for meta transaction`); //signature of this method is sendTxEIP712({req, signature = null, userAddress})\n        //signature param is optional. check network agnostics section for more details about this\n        //userAddress is must when your provider does not have a signer with accounts\n\n        let transaction = await ercForwarderClient.sendTxEIP712({\n          req: tx\n        }); //returns an object containing code, log, message, txHash\n\n        console.log(transaction);\n        console.log(transaction.txHash);\n\n        if (transaction && transaction.code == 200 && transaction.txHash) {\n          //event emitter methods\n          ethersProvider.once(transaction.txHash, result => {\n            // Emitted when the transaction has been mined\n            console.log(result);\n            setTransactionHash(transaction.txHash);\n            getQuoteFromNetwork();\n          });\n        } else {\n          showErrorMessage(transaction.message);\n        }\n      } else {\n        console.log(\"Sending normal transaction\");\n        let tx = await contract.setQuote(newQuote);\n        console.log(\"Transaction hash : \", tx.hash);\n        showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n        let confirmation = await tx.wait();\n        console.log(confirmation);\n        setTransactionHash(tx.hash);\n        showSuccessMessage(\"Transaction confirmed on chain\");\n        getQuoteFromNetwork();\n      }\n    } else {\n      showErrorMessage(\"Please enter the quote\");\n    }\n  }; // can make two of these for DAI and for USDC\n\n\n  const onPermitAndSubmitWithEIP712Sign = async () => {\n    if (newQuote != \"\" && contract) {\n      setTransactionHash(\"\");\n\n      if (metaTxEnabled) {\n        let userAddress = selectedAddress;\n        console.log(usdcDomainData); //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n\n        const usdcPermitOptions = {\n          spender: config.erc20ForwarderAddress,\n          domainData: usdcDomainData,\n          value: \"100000000000000000000\",\n          userAddress: userAddress,\n          deadline: Number(Math.floor(Date.now() / 1000 + 3600))\n        };\n        console.log(usdcPermitOptions);\n        const daiPermitOptions = {\n          // spender: config.erc20ForwarderAddress,\n          expiry: Math.floor(Date.now() / 1000 + 3600),\n          allowed: true\n        };\n        console.log(\"getting permit to spend usdc tokens\");\n        showInfoMessage(`Getting signature and permit transaction to spend usdc token by ERC20 Forwarder contract`);\n        console.log(\"Sending meta transaction\");\n        showInfoMessage(\"Building transaction to forward\"); // txGas should be calculated and passed here or calculate within the method\n\n        let {\n          data\n        } = await contract.populateTransaction.setQuote(newQuote);\n        let gasPrice = await ethersProvider.getGasPrice();\n        let gasLimit = await ethersProvider.estimateGas({\n          to: config.contract.address,\n          from: userAddress,\n          data: data\n        });\n        console.log(gasLimit.toString());\n        console.log(gasPrice.toString());\n        console.log(data);\n        const builtTx = await ercForwarderClient.buildTx({\n          to: config.contract.address,\n          token: config.usdc.address,\n          txGas: Number(gasLimit),\n          data,\n          permitType: \"EIP2612_Permit\"\n        });\n        const tx = builtTx.request;\n        const fee = builtTx.cost;\n        console.log(tx);\n        console.log(fee);\n        showInfoMessage(`Signing message for meta transaction`);\n        alert(`You will be charged maximum ${fee} amount of USDC ${config.usdc.address} for this transaction`);\n        showInfoMessage(`Signing message for meta transaction`);\n        const nonce = await usdcToken.nonces(userAddress);\n        console.log(`nonce is : ${nonce}`);\n        const permitDataToSign = {\n          types: {\n            EIP712Domain: domainType,\n            Permit: eip2612PermitType\n          },\n          domain: usdcDomainData,\n          primaryType: \"Permit\",\n          message: {\n            owner: userAddress,\n            spender: usdcPermitOptions.spender,\n            nonce: parseInt(nonce),\n            value: usdcPermitOptions.value,\n            deadline: parseInt(usdcPermitOptions.deadline)\n          }\n        };\n        let result = await ethersProvider.send(\"eth_signTypedData_v3\", [userAddress, JSON.stringify(permitDataToSign)]);\n        console.log(result);\n        let metaInfo = {};\n        let permitOptions = {};\n        const signature = result.substring(2);\n        const r = \"0x\" + signature.substring(0, 64);\n        const s = \"0x\" + signature.substring(64, 128);\n        const v = parseInt(signature.substring(128, 130), 16);\n        permitOptions.holder = userAddress;\n        permitOptions.spender = usdcPermitOptions.spender;\n        permitOptions.value = usdcPermitOptions.value;\n        permitOptions.nonce = parseInt(nonce.toString());\n        permitOptions.expiry = parseInt(usdcPermitOptions.deadline);\n        permitOptions.allowed = true;\n        permitOptions.v = v;\n        permitOptions.r = r;\n        permitOptions.s = s; // validations of permit Type is needed for meta info and within buildTx\n\n        metaInfo.permitType = \"EIP2612_Permit\";\n        metaInfo.permitData = permitOptions; //signature of this method is permitAndSendTxEIP712({req, signature = null, userAddress, metaInfo})\n        //signature param is optional. check network agnostics section for more details about this\n        //userAddress is must when your provider does not have a signer with accounts\n\n        let transaction = await ercForwarderClient.permitAndSendTxEIP712({\n          req: tx,\n          metaInfo: metaInfo\n        }); //returns an object containing code, log, message, txHash\n\n        console.log(transaction);\n\n        if (transaction && transaction.code == 200 && transaction.txHash) {\n          //event emitter methods\n          ethersProvider.once(transaction.txHash, result => {\n            // Emitted when the transaction has been mined\n            console.log(result);\n            setTransactionHash(transaction.txHash);\n            getQuoteFromNetwork();\n          });\n        } else {\n          showErrorMessage(transaction.message);\n        }\n      } else {\n        console.log(\"Sending normal transaction\");\n        let tx = await contract.setQuote(newQuote);\n        console.log(\"Transaction hash : \", tx.hash);\n        showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n        let confirmation = await tx.wait();\n        console.log(confirmation);\n        setTransactionHash(tx.hash);\n        showSuccessMessage(\"Transaction confirmed on chain\");\n        getQuoteFromNetwork();\n      }\n    } else {\n      showErrorMessage(\"Please enter the quote\");\n    }\n  };\n\n  const getDaiPermitSignature = async (holder, spender, nonce, expiry) => {\n    const domain = [{\n      name: \"name\",\n      type: \"string\"\n    }, {\n      name: \"version\",\n      type: \"string\"\n    }, {\n      name: \"chainId\",\n      type: \"uint256\"\n    }, {\n      name: \"verifyingContract\",\n      type: \"address\"\n    }];\n    const permit = [{\n      name: \"holder\",\n      type: \"address\"\n    }, {\n      name: \"spender\",\n      type: \"address\"\n    }, {\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      name: \"expiry\",\n      type: \"uint256\"\n    }, {\n      name: \"allowed\",\n      type: \"bool\"\n    }];\n    const domainData = {\n      name: \"Dai Stablecoin\",\n      version: \"1\",\n      chainId: 42,\n      verifyingContract: config.daiAddress\n    };\n    const message = {\n      holder,\n      spender,\n      nonce,\n      expiry,\n      allowed: true\n    };\n    const data = {\n      types: {\n        EIP712Domain: domain,\n        Permit: permit\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    };\n    const result = await ethersProvider.send(\"eth_signTypedData_v4\", [holder, JSON.stringify(data)]);\n    console.log(\"success\", result);\n    return result;\n  };\n\n  const getQuoteFromNetwork = async () => {\n    setLoadingMessage(\"Getting Quote from contact ...\");\n    let result = await contract.getQuote();\n\n    if (result && result.currentQuote != undefined && result.currentOwner != undefined) {\n      if (result.currentQuote == \"\") {\n        showErrorMessage(\"No quotes set on blockchain yet\");\n      } else {\n        setQuote(result.currentQuote);\n        setOwner(result.currentOwner);\n      }\n    } else {\n      showErrorMessage(\"Not able to get quote information from Network\");\n    }\n\n    handleClose();\n  };\n\n  const showErrorMessage = message => {\n    NotificationManager.error(message, \"Error\", 5000);\n  };\n\n  const showSuccessMessage = message => {\n    NotificationManager.success(message, \"Message\", 3000);\n  };\n\n  const showInfoMessage = message => {\n    NotificationManager.info(message, \"Info\", 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"top-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-row-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 13\n    }\n  }, \"Library \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 13\n    }\n  }, \"ethers.js\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-row-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 13\n    }\n  }, \"Meta Transaction\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 13\n    }\n  }, \"EIP-2771\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-row-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 13\n    }\n  }, \"Signature Type\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }\n  }, \"EIP-712 Signature\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-wrap mb-style-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"blockquote\", {\n    cite: \"http://www.gutenberg.org/ebboks/11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 15\n    }\n  }, quote))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-attribution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 13\n    }\n  }, owner), selectedAddress.toLowerCase() === owner.toLowerCase() && /*#__PURE__*/React.createElement(\"cite\", {\n    className: \"owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 15\n    }\n  }, \"You are the owner of the quote\"), selectedAddress.toLowerCase() !== owner.toLowerCase() && /*#__PURE__*/React.createElement(\"cite\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 15\n    }\n  }, \"You are not the owner of the quote\"))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 9\n    }\n  }, transactionHash !== \"\" && /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    mt: 2,\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 15\n    }\n  }, \"Check your transaction hash\", /*#__PURE__*/React.createElement(Link, {\n    href: `https://kovan.etherscan.io/tx/${transactionHash}`,\n    target: \"_blank\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 17\n    }\n  }, \"here\")))), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your quote\",\n    onChange: onQuoteChange,\n    value: newQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onSubmitWithUSDC,\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 15\n    }\n  }, \"Pay with USDC\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onSubmitWithDAI,\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 15\n    }\n  }, \"Pay with DAI\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: onSubmitWithUSDT,\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 15\n    }\n  }, \"Pay with USDT\")))), /*#__PURE__*/React.createElement(Backdrop, {\n    className: classes.backdrop,\n    open: backdropOpen,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 11\n    }\n  }, loadingMessage)), /*#__PURE__*/React.createElement(NotificationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ivan/MEGAsync/metatx-standard-playground/example/react-ui/src/components/Ethers_Forward_AllTokens.js"],"names":["React","useState","useEffect","Button","NotificationContainer","NotificationManager","Backdrop","CircularProgress","ethers","providers","Biconomy","makeStyles","Link","Typography","Box","sigUtil","require","config","contract","address","abi","apiKey","test","prod","erc20ForwarderAddress","daiAddress","usdtAddress","usdc","dai","usdcDomainData","name","version","chainId","verifyingContract","daiDomainType","type","daiPermitType","daiDomainData","domainType","eip2612PermitType","walletProvider","walletSigner","ethersProvider","contractInterface","ercForwarderClient","permitClient","usdcToken","daiToken","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","biconomy","userAddress","App","classes","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","newToken","setNewToken","selectedAddress","setSelectedAddress","metaTxEnabled","transactionHash","setTransactionHash","handleClose","init","window","ethereum","isMetaMask","provider","enable","jsonRpcProvider","JsonRpcProvider","debug","Web3Provider","getSigner","getAddress","onEvent","READY","Contract","getSignerByAddress","erc20ForwarderClient","utils","Interface","getQuoteFromNetwork","ERROR","error","message","console","log","showErrorMessage","onQuoteChange","event","target","value","onTokenChange","onSubmitWithUSDC","usdcPermitOptions","domainData","deadline","Number","Math","floor","Date","now","showInfoMessage","permitTx","eip2612Permit","wait","data","populateTransaction","gasPrice","getGasPrice","gasLimit","estimateGas","to","from","toString","builtTx","buildTx","token","txGas","tx","request","fee","cost","transaction","sendTxEIP712","req","txHash","code","once","result","hash","confirmation","showSuccessMessage","onSubmitWithDAI","daiPermitOptions","spender","expiry","allowed","daiPermit","alert","daiTokenAddress","onSubmitWithUSDT","onPermitAndSubmitWithEIP712Sign","permitType","nonce","nonces","permitDataToSign","types","EIP712Domain","Permit","domain","primaryType","parseInt","send","JSON","stringify","metaInfo","permitOptions","signature","substring","r","s","v","holder","permitData","permitAndSendTxEIP712","getDaiPermitSignature","permit","getQuote","currentQuote","undefined","currentOwner","success","info","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { ethers, providers } from \"ethers\";\nimport { Biconomy } from \"@biconomy/mexa\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nlet sigUtil = require(\"eth-sig-util\");\n\nlet config = {\n    contract: {\n        address: \"0x6ec90770285D545B9872795b7D9f833025F4dF9F\",\n        abi: [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n    },\n    apiKey: {\n        test: \"m60yDrUs7.5c3b23fa-0b93-46ac-86f9-79e998d8f361\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    }\n}\n\nconfig.erc20ForwarderAddress = \"0x9A60349561E0489faB15A6cc5ad9F75061db0F52\";\nconfig.daiAddress = \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\";\nconfig.usdtAddress = \"0x8e1084f3599ba90991C3b2f9e25D920738C1496D\";\n\nconfig.usdc = {\n    address: \"0x6043fD7126e4229d6FcaC388c9E1C8d333CCb8fA\",\n    abi: [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"AuthorizationUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"}],\"name\":\"BlacklisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"}],\"name\":\"MasterMinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"MinterConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"RescuerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"UnBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APPROVE_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CANCEL_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DECREASE_ALLOWANCE_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INCREASE_ALLOWANCE_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_WITH_AUTHORIZATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"approveWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"authorizationState\",\"outputs\":[{\"internalType\":\"enumGasAbstraction.AuthorizationState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},\n  {\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"cancelAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"configureMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decrement\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"decrement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"decreaseAllowanceWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"increment\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"increment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"increaseAllowanceWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenCurrency\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newName\",\"type\":\"string\"}],\"name\":\"initializeV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"minterAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},\n  {\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validAfter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validBefore\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlacklister\",\"type\":\"address\"}],\"name\":\"updateBlacklister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMasterMinter\",\"type\":\"address\"}],\"name\":\"updateMasterMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPauser\",\"type\":\"address\"}],\"name\":\"updatePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"updateRescuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}] \n  };\n\nconfig.dai = {\n    address: \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\",\n    abi: [{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg1\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"arg2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]\n  };  \n\nlet usdcDomainData = {\n  name: \"USDC Coin\",\n  version: \"1\",\n  chainId: 42,\n  verifyingContract: config.usdc.address,\n};\n\nlet daiDomainType = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nlet daiPermitType = [\n  { name: \"holder\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"expiry\", type: \"uint256\" },\n  { name: \"allowed\", type: \"bool\" },\n];\n\nlet daiDomainData = {\n  name: \"Dai Stablecoin\",\n  version: \"1\",\n  chainId: 42,\n  verifyingContract: config.daiAddress,\n};\n\nlet domainType = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nlet eip2612PermitType = [\n  { name: \"owner\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"deadline\", type: \"uint256\" },\n];\n\nlet walletProvider, walletSigner, ethersProvider;\nlet contract, contractInterface;\nlet ercForwarderClient, permitClient;\nlet usdcToken, daiToken;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nlet biconomy, userAddress;\n\nfunction App() {\n    const classes = useStyles();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [newToken, setNewToken] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                debugger;\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                // We're creating biconomy provider linked to your network of choice where your contract is deployed\n                let jsonRpcProvider = new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                biconomy = new Biconomy(provider, {\n                    walletProvider: window.ethereum,\n                    apiKey: config.apiKey.prod,\n                    debug: true\n                });\n\n                /*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */\n                ethersProvider = new ethers.providers.Web3Provider(biconomy);\n                walletProvider = new ethers.providers.Web3Provider(window.ethereum);\n                walletSigner = walletProvider.getSigner();\n\n                userAddress = await walletSigner.getAddress()\n                setSelectedAddress(userAddress);\n\n                biconomy.onEvent(biconomy.READY, async () => {\n\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new ethers.Contract(\n                        config.contract.address,\n                        config.contract.abi,\n                        biconomy.getSignerByAddress(userAddress)\n                    );\n\n                    usdcToken = new ethers.Contract(\n                      config.usdc.address,\n                      config.usdc.abi,\n                      biconomy.getSignerByAddress(userAddress)\n                    );\n\n                    daiToken = new ethers.Contract(\n                      config.dai.address,\n                      config.dai.abi,\n                      biconomy.getSignerByAddress(userAddress)\n                    );\n          \n                    ercForwarderClient = biconomy.erc20ForwarderClient;\n                    permitClient = biconomy.permitClient;\n\n                    contractInterface = new ethers.utils.Interface(config.contract.abi);\n                    getQuoteFromNetwork();\n                }).onEvent(biconomy.ERROR, (error, message) => {\n                    // Handle error while initializing mexa\n                    console.log(message);\n                    console.log(error);\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onTokenChange = event => {\n      setNewToken(event.target.value);\n  };\n\n    //EIP712 only\n    const onSubmitWithUSDC = async () => {\n      if (newQuote != \"\" && contract) {\n        setTransactionHash(\"\");\n        if (metaTxEnabled) {\n          let userAddress = selectedAddress;\n\n          console.log(usdcDomainData);\n\n          //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n\n          const usdcPermitOptions = {\n            domainData: usdcDomainData,\n            value: \"100000000000000000000\",\n            userAddress: userAddress,\n            deadline: Number(Math.floor(Date.now() / 1000 + 3600)),\n          };\n\n          console.log(usdcPermitOptions);\n\n          console.log(\"getting permit to spend usdc tokens\");\n          showInfoMessage(\n            `Getting signature and permit transaction to spend usdc token by ERC20 Forwarder contract`\n          );\n\n          //If you're not using biconomy's permit client as biconomy's member you can create your own without importing Biconomy.\n          //Users need to pass provider object from window, spender address (erc20 forwarder OR the fee proxy address) and DAI's address for your network\n\n          //OR use biconomy's permitclient member as below!  \n\n          // This step only needs to be done once and is valid during the given deadline\n          let permitTx = await permitClient.eip2612Permit(usdcPermitOptions);\n          await permitTx.wait(1);\n\n          console.log(\"Sending meta transaction\");\n          showInfoMessage(\"Building transaction to forward\");\n          // txGas should be calculated and passed here or calculate within the method\n\n          let { data } = await contract.populateTransaction.setQuote(newQuote);\n          let gasPrice = await ethersProvider.getGasPrice();\n          let gasLimit = await ethersProvider.estimateGas({\n            to: config.contract.address,\n            from: userAddress,\n            data: data,\n          });\n          console.log(gasLimit.toString());\n          console.log(gasPrice.toString());\n          console.log(data);\n\n          const builtTx = await ercForwarderClient.buildTx({\n            to: config.contract.address,\n            token: config.usdc.address,\n            txGas: Number(gasLimit),\n            data,\n          });\n          const tx = builtTx.request;\n          const fee = builtTx.cost;\n          console.log(tx);\n          console.log(fee);\n          showInfoMessage(`Signing message for meta transaction`);\n\n          //signature of this method is sendTxEIP712({req, signature = null, userAddress})\n          //signature param is optional. check network agnostics section for more details about this\n          //userAddress is must when your provider does not have a signer with accounts\n          let transaction = await ercForwarderClient.sendTxEIP712({ req: tx });\n          //returns an object containing code, log, message, txHash\n          console.log('here ' + transaction.txHash);\n\n          if (transaction && transaction.code == 200 && transaction.txHash) {\n            //event emitter methods\n            ethersProvider.once(transaction.txHash, (result) => {\n              // Emitted when the transaction has been mined\n              console.log(result);\n              setTransactionHash(transaction.txHash);\n              getQuoteFromNetwork();\n            });\n          } else {\n            showErrorMessage(transaction.message);\n          }\n        } else {\n          console.log(\"Sending normal transaction\");\n          let tx = await contract.setQuote(newQuote);\n          console.log(\"Transaction hash : \", tx.hash);\n          showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n          let confirmation = await tx.wait();\n          console.log(confirmation);\n          setTransactionHash(tx.hash);\n\n          showSuccessMessage(\"Transaction confirmed on chain\");\n          getQuoteFromNetwork();\n        }\n      } else {\n        showErrorMessage(\"Please enter the quote\");\n      }\n    };\n    \n    // EIP712 only!\n    const onSubmitWithDAI = async () => {\n        if (newQuote != \"\" && contract) {\n          setTransactionHash(\"\");\n          if (metaTxEnabled) {\n            let userAddress = selectedAddress;\n  \n            console.log(usdcDomainData);\n  \n            //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n  \n            const daiPermitOptions = {\n                spender: config.erc20ForwarderAddress,\n                expiry: Math.floor(Date.now() / 1000 + 3600),\n                allowed: true,\n              };\n  \n            console.log(daiPermitOptions);\n  \n            console.log(\"getting permit to spend DAI tokens\");\n            showInfoMessage(\n              `Getting signature and permit transaction to spend DAI token by ERC20 Forwarder contract`\n            );\n  \n            //If you're not using biconomy's permit client as biconomy's member you can create your own without importing Biconomy.\n            //Users need to pass provider object from window, spender address (erc20 forwarder OR the fee proxy address) and DAI's address for your network\n  \n            //OR use biconomy's permitclient member as below!  \n  \n            // This step only needs to be done once and is valid during the given deadline\n            let permitTx = await permitClient.daiPermit(daiPermitOptions);\n            await permitTx.wait(1);\n  \n            console.log(\"Sending meta transaction\");\n            showInfoMessage(\"Building transaction to forward\");\n            // txGas should be calculated and passed here or calculate within the method\n  \n            let { data } = await contract.populateTransaction.setQuote(newQuote);\n            let gasPrice = await ethersProvider.getGasPrice();\n            let gasLimit = await ethersProvider.estimateGas({\n              to: config.contract.address,\n              from: userAddress,\n              data: data,\n            });\n            console.log(gasLimit.toString());\n            console.log(gasPrice.toString());\n            console.log(data);\n  \n            const builtTx = await ercForwarderClient.buildTx({\n              to: config.contract.address,\n              token: config.dai.address,\n              txGas: Number(gasLimit),\n              data,\n            });\n            const tx = builtTx.request;\n            const fee = builtTx.cost;\n            console.log(tx);\n            console.log(fee);\n            alert(`You will be charged ${fee} amount of DAI ${biconomy.daiTokenAddress} for this transaction`);\n            showInfoMessage(`Signing message for meta transaction`);\n  \n            //signature of this method is sendTxEIP712({req, signature = null, userAddress})\n            //signature param is optional. check network agnostics section for more details about this\n            //userAddress is must when your provider does not have a signer with accounts\n            let transaction = await ercForwarderClient.sendTxEIP712({ req: tx });\n            //returns an object containing code, log, message, txHash\n            console.log(transaction);\n  \n            if (transaction && transaction.code == 200 && transaction.txHash) {\n              //event emitter methods\n              ethersProvider.once(transaction.txHash, (result) => {\n                // Emitted when the transaction has been mined\n                console.log(result);\n                console.log('this works!');\n                console.log(transaction.txHash);\n                setTransactionHash(transaction.txHash);\n                getQuoteFromNetwork();\n              });\n            } else {\n              showErrorMessage(transaction.message);\n            }\n          } else {\n            console.log(\"Sending normal transaction\");\n            let tx = await contract.setQuote(newQuote);\n            console.log(\"Transaction hash : \", tx.hash);\n            showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n            let confirmation = await tx.wait();\n            console.log(confirmation);\n            setTransactionHash(tx.hash);\n  \n            showSuccessMessage(\"Transaction confirmed on chain\");\n            getQuoteFromNetwork();\n          }\n        } else {\n          showErrorMessage(\"Please enter the quote\");\n        }\n      };\n\n      // EIP712 only\n      const onSubmitWithUSDT = async () => {\n        if (newQuote != \"\" && contract) {\n          setTransactionHash(\"\");\n          if (metaTxEnabled) {\n            let userAddress = selectedAddress;\n  \n            console.log(usdcDomainData);\n  \n            //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n  \n            // user must approve USDT once to give allowance to erc20ForwarderAddress\n           \n            // assuming we already have allowance\n            console.log(\"Sending meta transaction\");\n            showInfoMessage(\"Building transaction to forward\");\n            // txGas should be calculated and passed here or calculate within the method\n  \n            let { data } = await contract.populateTransaction.setQuote(newQuote);\n            let gasPrice = await ethersProvider.getGasPrice();\n            let gasLimit = await ethersProvider.estimateGas({\n              to: config.contract.address,\n              from: userAddress,\n              data: data,\n            });\n            console.log(gasLimit.toString());\n            console.log(gasPrice.toString());\n            console.log(data);\n  \n            const builtTx = await ercForwarderClient.buildTx({\n              to: config.contract.address,\n              token: config.usdtAddress,\n              txGas: Number(gasLimit),\n              data,\n            });\n            const tx = builtTx.request;\n            const fee = builtTx.cost;\n            console.log(tx);\n            console.log(fee);\n            alert(`You will be charged ${fee} amount of USDT ${config.usdtAddress} for this transaction`);\n            showInfoMessage(`Signing message for meta transaction`);\n\n  \n            //signature of this method is sendTxEIP712({req, signature = null, userAddress})\n            //signature param is optional. check network agnostics section for more details about this\n            //userAddress is must when your provider does not have a signer with accounts\n            let transaction = await ercForwarderClient.sendTxEIP712({ req: tx });\n            //returns an object containing code, log, message, txHash\n            console.log(transaction);\n            console.log(transaction.txHash);\n  \n            if (transaction && transaction.code == 200 && transaction.txHash) {\n              //event emitter methods\n              ethersProvider.once(transaction.txHash, (result) => {\n                // Emitted when the transaction has been mined\n                console.log(result);\n                setTransactionHash(transaction.txHash);\n                getQuoteFromNetwork();\n              });\n            } else {\n              showErrorMessage(transaction.message);\n            }\n          } else {\n            console.log(\"Sending normal transaction\");\n            let tx = await contract.setQuote(newQuote);\n            console.log(\"Transaction hash : \", tx.hash);\n            showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n            let confirmation = await tx.wait();\n            console.log(confirmation);\n            setTransactionHash(tx.hash);\n  \n            showSuccessMessage(\"Transaction confirmed on chain\");\n            getQuoteFromNetwork();\n          }\n        } else {\n          showErrorMessage(\"Please enter the quote\");\n        }\n      };\n\n    // can make two of these for DAI and for USDC\n    const onPermitAndSubmitWithEIP712Sign = async () => {\n      if (newQuote != \"\" && contract) {\n        setTransactionHash(\"\");\n        if (metaTxEnabled) {\n          let userAddress = selectedAddress;\n\n          console.log(usdcDomainData);\n\n          //If your provider is not a signer with accounts then you must pass userAddress in the permit options\n\n          const usdcPermitOptions = {\n            spender: config.erc20ForwarderAddress,\n            domainData: usdcDomainData,\n            value: \"100000000000000000000\",\n            userAddress: userAddress,\n            deadline: Number(Math.floor(Date.now() / 1000 + 3600)),\n          };\n\n          console.log(usdcPermitOptions);\n\n          const daiPermitOptions = {\n            // spender: config.erc20ForwarderAddress,\n            expiry: Math.floor(Date.now() / 1000 + 3600),\n            allowed: true,\n          };\n\n          console.log(\"getting permit to spend usdc tokens\");\n          showInfoMessage(\n            `Getting signature and permit transaction to spend usdc token by ERC20 Forwarder contract`\n          );\n\n          console.log(\"Sending meta transaction\");\n          showInfoMessage(\"Building transaction to forward\");\n          // txGas should be calculated and passed here or calculate within the method\n\n          let { data } = await contract.populateTransaction.setQuote(newQuote);\n          let gasPrice = await ethersProvider.getGasPrice();\n          let gasLimit = await ethersProvider.estimateGas({\n            to: config.contract.address,\n            from: userAddress,\n            data: data,\n          });\n          console.log(gasLimit.toString());\n          console.log(gasPrice.toString());\n          console.log(data);\n\n          const builtTx = await ercForwarderClient.buildTx({\n            to: config.contract.address,\n            token: config.usdc.address,\n            txGas: Number(gasLimit),\n            data,\n            permitType: \"EIP2612_Permit\",\n          });\n          const tx = builtTx.request;\n          const fee = builtTx.cost;\n          console.log(tx);\n          console.log(fee);\n          showInfoMessage(`Signing message for meta transaction`);\n\n          alert(\n            `You will be charged maximum ${fee} amount of USDC ${config.usdc.address} for this transaction`\n          );\n          showInfoMessage(`Signing message for meta transaction`);\n\n          const nonce = await usdcToken.nonces(userAddress);\n          console.log(`nonce is : ${nonce}`);\n\n          const permitDataToSign = {\n            types: {\n              EIP712Domain: domainType,\n              Permit: eip2612PermitType,\n            },\n            domain: usdcDomainData,\n            primaryType: \"Permit\",\n            message: {\n              owner: userAddress,\n              spender: usdcPermitOptions.spender,\n              nonce: parseInt(nonce),\n              value: usdcPermitOptions.value,\n              deadline: parseInt(usdcPermitOptions.deadline),\n            },\n          };\n\n          let result = await ethersProvider.send(\"eth_signTypedData_v3\", [\n            userAddress,\n            JSON.stringify(permitDataToSign),\n          ]);\n\n          console.log(result);\n\n          let metaInfo = {};\n          let permitOptions = {};\n\n          const signature = result.substring(2);\n          const r = \"0x\" + signature.substring(0, 64);\n          const s = \"0x\" + signature.substring(64, 128);\n          const v = parseInt(signature.substring(128, 130), 16);\n\n          permitOptions.holder = userAddress;\n          permitOptions.spender = usdcPermitOptions.spender;\n          permitOptions.value = usdcPermitOptions.value;\n          permitOptions.nonce = parseInt(nonce.toString());\n          permitOptions.expiry = parseInt(usdcPermitOptions.deadline);\n          permitOptions.allowed = true;\n          permitOptions.v = v;\n          permitOptions.r = r;\n          permitOptions.s = s;\n\n          // validations of permit Type is needed for meta info and within buildTx\n\n          metaInfo.permitType = \"EIP2612_Permit\";\n          metaInfo.permitData = permitOptions;\n\n          //signature of this method is permitAndSendTxEIP712({req, signature = null, userAddress, metaInfo})\n          //signature param is optional. check network agnostics section for more details about this\n          //userAddress is must when your provider does not have a signer with accounts\n          let transaction = await ercForwarderClient.permitAndSendTxEIP712({\n            req: tx,\n            metaInfo: metaInfo,\n          });\n          //returns an object containing code, log, message, txHash\n          console.log(transaction);\n\n          if (transaction && transaction.code == 200 && transaction.txHash) {\n            //event emitter methods\n            ethersProvider.once(transaction.txHash, (result) => {\n              // Emitted when the transaction has been mined\n              console.log(result);\n              setTransactionHash(transaction.txHash);\n              getQuoteFromNetwork();\n            });\n          } else {\n            showErrorMessage(transaction.message);\n          }\n        } else {\n          console.log(\"Sending normal transaction\");\n          let tx = await contract.setQuote(newQuote);\n          console.log(\"Transaction hash : \", tx.hash);\n          showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n          let confirmation = await tx.wait();\n          console.log(confirmation);\n          setTransactionHash(tx.hash);\n\n          showSuccessMessage(\"Transaction confirmed on chain\");\n          getQuoteFromNetwork();\n        }\n      } else {\n        showErrorMessage(\"Please enter the quote\");\n      }\n    };\n\n    const getDaiPermitSignature = async (holder, spender, nonce, expiry) => {\n     \n      const domain = [\n        { name: \"name\", type: \"string\" },\n        { name: \"version\", type: \"string\" },\n        { name: \"chainId\", type: \"uint256\" },\n        { name: \"verifyingContract\", type: \"address\" }\n      ];\n    \n      const permit = [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ];\n    \n      const domainData = {\n        name: \"Dai Stablecoin\",\n        version: \"1\",\n        chainId: 42,\n        verifyingContract: config.daiAddress,\n      };\n    \n      const message = {\n        holder,\n        spender,\n        nonce,\n        expiry,\n        allowed: true,\n      };\n    \n      const data = {\n        types: {\n          EIP712Domain: domain,\n          Permit: permit,\n        },\n        primaryType: \"Permit\",\n        domain: domainData,\n        message: message\n      };\n\n      const result = await ethersProvider.send(\"eth_signTypedData_v4\", [\n        holder,\n        JSON.stringify(data),\n      ]);\n      console.log(\"success\", result);\n\n      return result;\n    }\n\n    const getQuoteFromNetwork = async () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        let result = await contract.getQuote();\n        if (\n            result &&\n            result.currentQuote != undefined &&\n            result.currentOwner != undefined\n        ) {\n            if (result.currentQuote == \"\") {\n                showErrorMessage(\"No quotes set on blockchain yet\");\n            } else {\n                setQuote(result.currentQuote);\n                setOwner(result.currentOwner);\n            }\n        } else {\n            showErrorMessage(\"Not able to get quote information from Network\");\n        }\n        handleClose();\n    };\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    return (\n      <div className=\"App\">\n        <section className=\"top-row\">\n          <div className=\"top-row-item\">\n            <span className=\"label\">Library </span>\n            <span className=\"label-value\">ethers.js</span>\n          </div>\n          <div className=\"top-row-item\">\n            <span className=\"label\">Meta Transaction</span>\n            <span className=\"label-value\">EIP-2771</span>\n          </div>\n          <div className=\"top-row-item\">\n            <span className=\"label\">Signature Type</span>\n            <span className=\"label-value\">EIP-712 Signature</span>\n          </div>\n        </section>\n        <section className=\"main\">\n          <div className=\"mb-wrap mb-style-2\">\n            <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n              <p>{quote}</p>\n            </blockquote>\n          </div>\n\n          <div className=\"mb-attribution\">\n            <p className=\"mb-author\">{owner}</p>\n            {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n              <cite className=\"owner\">You are the owner of the quote</cite>\n            )}\n            {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n              <cite>You are not the owner of the quote</cite>\n            )}\n          </div>\n        </section>\n        <section>\n          {transactionHash !== \"\" && (\n            <Box className={classes.root} mt={2} p={2}>\n              <Typography>\n                Check your transaction hash\n                <Link\n                  href={`https://kovan.etherscan.io/tx/${transactionHash}`}\n                  target=\"_blank\"\n                  className={classes.link}\n                >\n                  here\n                </Link>\n              </Typography>\n            </Box>\n          )}\n        </section>\n        <section>\n          <div className=\"submit-container\">\n            <div className=\"submit-row\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter your quote\"\n                onChange={onQuoteChange}\n                value={newQuote}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmitWithUSDC}\n                style={{ marginLeft: \"10px\" }}\n              >\n                Pay with USDC\n              </Button>\n\n              {/*<Button variant=\"contained\" color=\"primary\" onClick={onPermitAndSubmitWithEIP712Sign} style={{ marginLeft: \"10px\" }}>\n                            Permit And Submit EIP712\n                    </Button>*/}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmitWithDAI}\n                style={{ marginLeft: \"10px\" }}\n              >\n                Pay with DAI\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmitWithUSDT}\n                style={{ marginLeft: \"10px\" }}\n              >\n                Pay with USDT\n              </Button>\n            </div>\n          </div>\n        </section>\n        <Backdrop\n          className={classes.backdrop}\n          open={backdropOpen}\n          onClick={handleClose}\n        >\n          <CircularProgress color=\"inherit\" />\n          <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n        </Backdrop>\n        <NotificationContainer />\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}