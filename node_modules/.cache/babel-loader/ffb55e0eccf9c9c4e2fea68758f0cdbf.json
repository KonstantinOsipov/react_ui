{"ast":null,"code":"import _regeneratorRuntime from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../App.css\";import Button from\"@material-ui/core/Button\";import{helperAttributes,getDomainSeperator,getDataToSignForPersonalSign,getDataToSignForEIP712,buildForwardTxRequest,getBiconomyForwarderConfig}from'../api-helpers/biconomyForwarderHelpers';import{NotificationContainer,NotificationManager}from\"react-notifications\";import\"react-notifications/lib/notifications.css\";import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import{ethers}from\"ethers\";import{Biconomy}from\"@biconomy/mexa\";import{makeStyles}from'@material-ui/core/styles';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";var sigUtil=require(\"eth-sig-util\");var config={contract:{address:\"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",abi:[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true}]},apiKey:{test:\"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",prod:\"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"},api:{test:\"https://test-api.biconomy.io\",prod:\"https://api.biconomy.io\"}};var ethersProvider,walletProvider,walletSigner;var contract,contractInterface;var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginLeft:theme.spacing(2)}},link:{marginLeft:\"5px\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:'#fff',opacity:'.85!important',background:'#000'}};});var biconomy,userAddress;function App(){var classes=useStyles();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),backdropOpen=_React$useState2[0],setBackdropOpen=_React$useState2[1];var _React$useState3=React.useState(\" Loading Application ...\"),_React$useState4=_slicedToArray(_React$useState3,2),loadingMessage=_React$useState4[0],setLoadingMessage=_React$useState4[1];var _useState=useState(\"This is a default quote\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"Default Owner Address\"),_useState4=_slicedToArray(_useState3,2),owner=_useState4[0],setOwner=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newQuote=_useState6[0],setNewQuote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedAddress=_useState8[0],setSelectedAddress=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,1),metaTxEnabled=_useState10[0];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),transactionHash=_useState12[0],setTransactionHash=_useState12[1];var handleClose=function handleClose(){setBackdropOpen(false);};useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider,jsonRpcProvider;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof window.ethereum!==\"undefined\"&&window.ethereum.isMetaMask)){_context2.next=17;break;}// Ethereum user detected. You can now use the provider.\nprovider=window[\"ethereum\"];_context2.next=4;return provider.enable();case 4:setLoadingMessage(\"Initializing Biconomy ...\");// We're creating biconomy provider linked to your network of choice where your contract is deployed\njsonRpcProvider=new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");biconomy=new Biconomy(jsonRpcProvider,{walletProvider:window.ethereum,apiKey:config.apiKey.prod,debug:true});/*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */ethersProvider=new ethers.providers.Web3Provider(biconomy);walletProvider=new ethers.providers.Web3Provider(window.ethereum);walletSigner=walletProvider.getSigner();_context2.next=12;return walletSigner.getAddress();case 12:userAddress=_context2.sent;setSelectedAddress(userAddress);biconomy.onEvent(biconomy.READY,/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Initialize your dapp here like getting user accounts etc\ncontract=new ethers.Contract(config.contract.address,config.contract.abi,biconomy.getSignerByAddress(userAddress));contractInterface=new ethers.utils.Interface(config.contract.abi);getQuoteFromNetwork();case 3:case\"end\":return _context.stop();}}},_callee);}))).onEvent(biconomy.ERROR,function(error,message){// Handle error while initializing mexa\nconsole.log(message);console.log(error);});_context2.next=18;break;case 17:showErrorMessage(\"Metamask not installed\");case 18:case\"end\":return _context2.stop();}}},_callee2);}));return _init.apply(this,arguments);}init();},[]);var onQuoteChange=function onQuoteChange(event){setNewQuote(event.target.value);};var onSubmitWithEIP712Sign=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _userAddress,_yield$contract$popul,data,gasPrice,gasLimit,forwarder,forwarderContract,batchNonce,to,gasLimitNum,batchId,req,domainSeparator,dataToSign,tx,confirmation;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(newQuote!=\"\"&&contract)){_context3.next=58;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context3.next=43;break;}console.log(\"Sending meta transaction\");_userAddress=selectedAddress;_context3.next=7;return contract.populateTransaction.setQuote(newQuote);case 7:_yield$contract$popul=_context3.sent;data=_yield$contract$popul.data;_context3.next=11;return ethersProvider.getGasPrice();case 11:gasPrice=_context3.sent;_context3.next=14;return ethersProvider.estimateGas({to:config.contract.address,from:_userAddress,data:data});case 14:gasLimit=_context3.sent;console.log(gasLimit.toString());console.log(gasPrice.toString());_context3.next=19;return getBiconomyForwarderConfig(42);case 19:forwarder=_context3.sent;forwarderContract=new ethers.Contract(forwarder.address,forwarder.abi,biconomy.getSignerByAddress(_userAddress));_context3.next=23;return forwarderContract.getNonce(_userAddress,0);case 23:batchNonce=_context3.sent;//const batchId = await forwarderContract.getBatch(userAddress);\nconsole.log(batchNonce);to=config.contract.address;gasLimitNum=Number(gasLimit.toNumber().toString());console.log(gasLimitNum);batchId=0;_context3.next=31;return buildForwardTxRequest({account:_userAddress,to:to,gasLimitNum:gasLimitNum,batchId:batchId,batchNonce:batchNonce,data:data});case 31:req=_context3.sent;console.log(req);_context3.next=35;return getDomainSeperator(42);case 35:domainSeparator=_context3.sent;console.log(domainSeparator);_context3.next=39;return getDataToSignForEIP712(req,42);case 39:dataToSign=_context3.sent;walletProvider.send(\"eth_signTypedData_v3\",[_userAddress,dataToSign]).then(function(sig){sendTransaction({userAddress:_userAddress,request:req,domainSeparator:domainSeparator,sig:sig,signatureType:\"EIP712_SIGN\"});}).catch(function(error){console.log(error);});_context3.next=56;break;case 43:console.log(\"Sending normal transaction\");_context3.next=46;return contract.setQuote(newQuote);case 46:tx=_context3.sent;console.log(\"Transaction hash : \",tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(tx.hash));_context3.next=51;return tx.wait();case 51:confirmation=_context3.sent;console.log(confirmation);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 56:_context3.next=59;break;case 58:showErrorMessage(\"Please enter the quote\");case 59:case\"end\":return _context3.stop();}}},_callee3);}));return function onSubmitWithEIP712Sign(){return _ref2.apply(this,arguments);};}();var onSubmitWithPersonalSign=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _userAddress2,_yield$contract$popul2,data,gasPrice,gasLimit,forwarder,forwarderContract,batchNonce,to,gasLimitNum,batchId,req,hashToSign,tx,confirmation;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(newQuote!=\"\"&&contract)){_context4.next=52;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context4.next=37;break;}console.log(\"Sending meta transaction\");_userAddress2=selectedAddress;_context4.next=7;return contract.populateTransaction.setQuote(newQuote);case 7:_yield$contract$popul2=_context4.sent;data=_yield$contract$popul2.data;_context4.next=11;return ethersProvider.getGasPrice();case 11:gasPrice=_context4.sent;_context4.next=14;return ethersProvider.estimateGas({to:config.contract.address,from:_userAddress2,data:data});case 14:gasLimit=_context4.sent;console.log(gasLimit.toString());console.log(gasPrice.toString());_context4.next=19;return getBiconomyForwarderConfig(42);case 19:forwarder=_context4.sent;forwarderContract=new ethers.Contract(forwarder.address,forwarder.abi,biconomy.getSignerByAddress(_userAddress2));_context4.next=23;return forwarderContract.getNonce(_userAddress2,0);case 23:batchNonce=_context4.sent;//const batchId = await forwarderContract.getBatch(userAddress);\nconsole.log(batchNonce);to=config.contract.address;gasLimitNum=Number(gasLimit.toNumber().toString());console.log(gasLimitNum);batchId=0;_context4.next=31;return buildForwardTxRequest({account:_userAddress2,to:to,gasLimitNum:gasLimitNum,batchId:batchId,batchNonce:batchNonce,data:data});case 31:req=_context4.sent;console.log(req);hashToSign=getDataToSignForPersonalSign(req);walletSigner.signMessage(hashToSign).then(function(sig){console.log('signature '+sig);sendTransaction({userAddress:_userAddress2,request:req,sig:sig,signatureType:\"PERSONAL_SIGN\"});}).catch(function(error){console.log(error);});_context4.next=50;break;case 37:console.log(\"Sending normal transaction\");_context4.next=40;return contract.setQuote(newQuote);case 40:tx=_context4.sent;console.log(\"Transaction hash : \",tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(tx.hash));_context4.next=45;return tx.wait();case 45:confirmation=_context4.sent;console.log(confirmation);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 50:_context4.next=53;break;case 52:showErrorMessage(\"Please enter the quote\");case 53:case\"end\":return _context4.stop();}}},_callee4);}));return function onSubmitWithPersonalSign(){return _ref3.apply(this,arguments);};}();var onSubmitWithPrivateKey=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var privateKey,_userAddress3,userSigner,_yield$contract$popul3,data,gasPrice,gasLimit,forwarder,forwarderContract,batchNonce,to,gasLimitNum,batchId,req,hashToSign,signature,tx,confirmation;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!(newQuote!=\"\"&&contract)){_context5.next=63;break;}setTransactionHash(\"\");_context5.prev=2;if(!metaTxEnabled){_context5.next=42;break;}privateKey=\"bf096e6fb9754860c4c99eb336c0579db994a3ef7fb3f7db869ad2f1972fc755\";_userAddress3=\"0xf7AB2d00f379167c339691c23B23111eB598B3fb\";userSigner=new ethers.Wallet(privateKey);_context5.next=9;return contract.populateTransaction.setQuote(newQuote);case 9:_yield$contract$popul3=_context5.sent;data=_yield$contract$popul3.data;_context5.next=13;return ethersProvider.getGasPrice();case 13:gasPrice=_context5.sent;_context5.next=16;return ethersProvider.estimateGas({to:config.contract.address,from:_userAddress3,data:data});case 16:gasLimit=_context5.sent;console.log(gasLimit.toString());console.log(gasPrice.toString());_context5.next=21;return getBiconomyForwarderConfig(42);case 21:forwarder=_context5.sent;forwarderContract=new ethers.Contract(forwarder.address,forwarder.abi,biconomy.getSignerByAddress(_userAddress3));_context5.next=25;return forwarderContract.getNonce(_userAddress3,0);case 25:batchNonce=_context5.sent;//const batchId = await forwarderContract.getBatch(userAddress);\nconsole.log(batchNonce);to=config.contract.address;gasLimitNum=Number(gasLimit.toNumber().toString());console.log(gasLimitNum);batchId=0;_context5.next=33;return buildForwardTxRequest({account:_userAddress3,to:to,gasLimitNum:gasLimitNum,batchId:batchId,batchNonce:batchNonce,data:data});case 33:req=_context5.sent;console.log(req);hashToSign=getDataToSignForPersonalSign(req);_context5.next=38;return userSigner.signMessage(hashToSign);case 38:signature=_context5.sent;sendTransaction({userAddress:_userAddress3,request:req,sig:signature,signatureType:\"PERSONAL_SIGN\"});_context5.next=55;break;case 42:console.log(\"Sending normal transaction\");_context5.next=45;return contract.setQuote(newQuote);case 45:tx=_context5.sent;console.log(\"Transaction hash : \",tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(tx.hash));_context5.next=50;return tx.wait();case 50:confirmation=_context5.sent;console.log(confirmation);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 55:_context5.next=61;break;case 57:_context5.prev=57;_context5.t0=_context5[\"catch\"](2);console.log(_context5.t0);handleClose();case 61:_context5.next=64;break;case 63:showErrorMessage(\"Please enter the quote\");case 64:case\"end\":return _context5.stop();}}},_callee5,null,[[2,57]]);}));return function onSubmitWithPrivateKey(){return _ref4.apply(this,arguments);};}();var getQuoteFromNetwork=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:setLoadingMessage(\"Getting Quote from contact ...\");_context6.next=3;return contract.getQuote();case 3:result=_context6.sent;if(result&&result.currentQuote!=undefined&&result.currentOwner!=undefined){if(result.currentQuote==\"\"){showErrorMessage(\"No quotes set on blockchain yet\");}else{setQuote(result.currentQuote);setOwner(result.currentOwner);}}else{showErrorMessage(\"Not able to get quote information from Network\");}handleClose();case 6:case\"end\":return _context6.stop();}}},_callee6);}));return function getQuoteFromNetwork(){return _ref5.apply(this,arguments);};}();var showErrorMessage=function showErrorMessage(message){NotificationManager.error(message,\"Error\",5000);};var showSuccessMessage=function showSuccessMessage(message){NotificationManager.success(message,\"Message\",3000);};var showInfoMessage=function showInfoMessage(message){NotificationManager.info(message,\"Info\",3000);};var sendTransaction=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref6){var userAddress,request,sig,domainSeparator,signatureType,params;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:userAddress=_ref6.userAddress,request=_ref6.request,sig=_ref6.sig,domainSeparator=_ref6.domainSeparator,signatureType=_ref6.signatureType;if(ethersProvider&&contract){if(domainSeparator){params=[request,domainSeparator,sig];}else{params=[request,sig];}try{fetch(\"\".concat(config.api.prod,\"/api/v2/meta-tx/native\"),{method:\"POST\",headers:{\"x-api-key\":config.apiKey.prod,\"Content-Type\":\"application/json;charset=utf-8\"},body:JSON.stringify({to:config.contract.address,apiId:\"34bfa8b9-57e7-4d32-b983-63c3f698cddd\",//apiId: \"ca45b2dc-0279-4952-87cd-bbc584427538\",\nparams:params,from:userAddress,signatureType:signatureType})}).then(function(response){return response.json();}).then(function(result){console.log(result);showInfoMessage(\"Transaction sent by relayer with hash \".concat(result.txHash));return result.txHash;// todo - fetch mined transaction receipt, show tx confirmed and update quotes\n}).then(function(hash){//event emitter methods\nethersProvider.once(hash,function(transaction){// Emitted when the transaction has been mined\nconsole.log(transaction);setTransactionHash(hash);getQuoteFromNetwork();});}).catch(function(error){console.log(error);});}catch(error){console.log(error);}}case 2:case\"end\":return _context7.stop();}}},_callee7);}));return function sendTransaction(_x){return _ref7.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"section\",{className:\"top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Library \"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"ethers.js\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Meta Transaction\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP-2771\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Signature Type\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP-712 Signature\"))),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-wrap mb-style-2\"},/*#__PURE__*/React.createElement(\"blockquote\",{cite:\"http://www.gutenberg.org/ebboks/11\"},/*#__PURE__*/React.createElement(\"p\",null,quote))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-attribution\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-author\"},owner),selectedAddress.toLowerCase()===owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",{className:\"owner\"},\"You are the owner of the quote\"),selectedAddress.toLowerCase()!==owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",null,\"You are not the owner of the quote\"))),/*#__PURE__*/React.createElement(\"section\",null,transactionHash!==\"\"&&/*#__PURE__*/React.createElement(Box,{className:classes.root,mt:2,p:2},/*#__PURE__*/React.createElement(Typography,null,\"Check your transaction hash\",/*#__PURE__*/React.createElement(Link,{href:\"https://kovan.etherscan.io/tx/\".concat(transactionHash),target:\"_blank\",className:classes.link},\"here\")))),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"submit-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"submit-row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your quote\",onChange:onQuoteChange,value:newQuote}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithEIP712Sign,style:{marginLeft:\"10px\"}},\"Submit With EIP712 Sign\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithPersonalSign,style:{marginLeft:\"10px\"}},\"Submit With Personal Sign\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:onSubmitWithPrivateKey,style:{marginLeft:\"10px\"}},\"Submit (Private Key)\")))),/*#__PURE__*/React.createElement(Backdrop,{className:classes.backdrop,open:backdropOpen,onClick:handleClose},/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\"}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingLeft:\"10px\"}},loadingMessage)),/*#__PURE__*/React.createElement(NotificationContainer,null));}export default App;","map":{"version":3,"sources":["/home/konstantin/Документы/react-ui-biconomy/react-ui/src/components/Ethers_EIP2771_API.js"],"names":["React","useState","useEffect","Button","helperAttributes","getDomainSeperator","getDataToSignForPersonalSign","getDataToSignForEIP712","buildForwardTxRequest","getBiconomyForwarderConfig","NotificationContainer","NotificationManager","Backdrop","CircularProgress","ethers","Biconomy","makeStyles","Link","Typography","Box","sigUtil","require","config","contract","address","abi","apiKey","test","prod","api","ethersProvider","walletProvider","walletSigner","contractInterface","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","biconomy","userAddress","App","classes","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","selectedAddress","setSelectedAddress","metaTxEnabled","transactionHash","setTransactionHash","handleClose","init","window","ethereum","isMetaMask","provider","enable","jsonRpcProvider","providers","JsonRpcProvider","debug","Web3Provider","getSigner","getAddress","onEvent","READY","Contract","getSignerByAddress","utils","Interface","getQuoteFromNetwork","ERROR","error","message","console","log","showErrorMessage","onQuoteChange","event","target","value","onSubmitWithEIP712Sign","populateTransaction","data","getGasPrice","gasPrice","estimateGas","to","from","gasLimit","toString","forwarder","forwarderContract","getNonce","batchNonce","gasLimitNum","Number","toNumber","batchId","account","req","domainSeparator","dataToSign","send","then","sig","sendTransaction","request","signatureType","catch","tx","hash","showInfoMessage","wait","confirmation","showSuccessMessage","onSubmitWithPersonalSign","hashToSign","signMessage","onSubmitWithPrivateKey","privateKey","userSigner","Wallet","signature","getQuote","result","currentQuote","undefined","currentOwner","success","info","params","fetch","method","headers","body","JSON","stringify","apiId","response","json","txHash","once","transaction","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    helperAttributes,\n    getDomainSeperator,\n    getDataToSignForPersonalSign,\n    getDataToSignForEIP712,\n    buildForwardTxRequest,\n    getBiconomyForwarderConfig\n  } from '../api-helpers/biconomyForwarderHelpers';\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { ethers } from \"ethers\";\nimport { Biconomy } from \"@biconomy/mexa\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nlet sigUtil = require(\"eth-sig-util\");\n\n\nlet config = {\n    contract: {\n        address: \"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",\n        abi: [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"forwarder\", \"type\": \"address\" }], \"name\": \"isTrustedForwarder\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"quote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"trustedForwarder\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [{ \"internalType\": \"string\", \"name\": \"newQuote\", \"type\": \"string\" }], \"name\": \"setQuote\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getQuote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"currentQuote\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"currentOwner\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"versionRecipient\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }]\n    },\n    apiKey: {\n        test: \"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    },\n    api: {\n        test: \"https://test-api.biconomy.io\",\n        prod: \"https://api.biconomy.io\"\n    }\n}\n\nlet ethersProvider,walletProvider, walletSigner;\nlet contract, contractInterface;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nlet biconomy, userAddress;\n\nfunction App() {\n    const classes = useStyles();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                // We're creating biconomy provider linked to your network of choice where your contract is deployed\n                let jsonRpcProvider = new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                biconomy = new Biconomy(jsonRpcProvider, {\n                    walletProvider: window.ethereum,\n                    apiKey: config.apiKey.prod,\n                    debug: true\n                });\n\n                /*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */\n                ethersProvider = new ethers.providers.Web3Provider(biconomy);\n                walletProvider = new ethers.providers.Web3Provider(window.ethereum);\n                walletSigner = walletProvider.getSigner();\n\n                userAddress = await walletSigner.getAddress()\n                setSelectedAddress(userAddress);\n\n                biconomy.onEvent(biconomy.READY, async () => {\n\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new ethers.Contract(\n                        config.contract.address,\n                        config.contract.abi,\n                        biconomy.getSignerByAddress(userAddress)\n                    );\n\n                    contractInterface = new ethers.utils.Interface(config.contract.abi);\n                    getQuoteFromNetwork();\n                }).onEvent(biconomy.ERROR, (error, message) => {\n                    // Handle error while initializing mexa\n                    console.log(message);\n                    console.log(error);\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onSubmitWithEIP712Sign = async () => {\n      if (newQuote != \"\" && contract) {\n        setTransactionHash(\"\");\n        if (metaTxEnabled) {\n          console.log(\"Sending meta transaction\");\n          let userAddress = selectedAddress;\n\n          let { data } = await contract.populateTransaction.setQuote(newQuote);\n          let gasPrice = await ethersProvider.getGasPrice();\n          let gasLimit = await ethersProvider.estimateGas({\n            to: config.contract.address,\n            from: userAddress,\n            data: data,\n          });\n          console.log(gasLimit.toString());\n          console.log(gasPrice.toString());\n\n          let forwarder = await getBiconomyForwarderConfig(42);\n          let forwarderContract = new ethers.Contract(\n            forwarder.address,\n            forwarder.abi,\n            biconomy.getSignerByAddress(userAddress)\n          );\n\n          const batchNonce = await forwarderContract.getNonce(userAddress, 0);\n          //const batchId = await forwarderContract.getBatch(userAddress);\n\n          console.log(batchNonce);\n          const to = config.contract.address;\n          const gasLimitNum = Number(gasLimit.toNumber().toString());\n          console.log(gasLimitNum);\n          const batchId = 0;\n          const req = await buildForwardTxRequest({\n            account: userAddress,\n            to,\n            gasLimitNum,\n            batchId,\n            batchNonce,\n            data,\n          });\n          console.log(req);\n\n          const domainSeparator = await getDomainSeperator(42);\n          console.log(domainSeparator);\n\n          const dataToSign = await getDataToSignForEIP712(req, 42);\n          walletProvider\n            .send(\"eth_signTypedData_v3\", [userAddress, dataToSign])\n            .then(function (sig) {\n              sendTransaction({\n                userAddress,\n                request:req,\n                domainSeparator,\n                sig,\n                signatureType: \"EIP712_SIGN\",\n              });\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        } else {\n          console.log(\"Sending normal transaction\");\n          let tx = await contract.setQuote(newQuote);\n          console.log(\"Transaction hash : \", tx.hash);\n          showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n          let confirmation = await tx.wait();\n          console.log(confirmation);\n          setTransactionHash(tx.hash);\n\n          showSuccessMessage(\"Transaction confirmed on chain\");\n          getQuoteFromNetwork();\n        }\n      } else {\n        showErrorMessage(\"Please enter the quote\");\n      }\n    };\n\n    const onSubmitWithPersonalSign = async () => {\n        if (newQuote != \"\" && contract) {\n          setTransactionHash(\"\");\n          if (metaTxEnabled) {\n            console.log(\"Sending meta transaction\");\n            let userAddress = selectedAddress;\n  \n            let { data } = await contract.populateTransaction.setQuote(newQuote);\n            let gasPrice = await ethersProvider.getGasPrice();\n            let gasLimit = await ethersProvider.estimateGas({\n              to: config.contract.address,\n              from: userAddress,\n              data: data,\n            });\n            console.log(gasLimit.toString());\n            console.log(gasPrice.toString());\n  \n            let forwarder = await getBiconomyForwarderConfig(42);\n            let forwarderContract = new ethers.Contract(\n              forwarder.address,\n              forwarder.abi,\n              biconomy.getSignerByAddress(userAddress)\n            );\n  \n            const batchNonce = await forwarderContract.getNonce(userAddress, 0);\n            //const batchId = await forwarderContract.getBatch(userAddress);\n  \n            console.log(batchNonce);\n            const to = config.contract.address;\n            const gasLimitNum = Number(gasLimit.toNumber().toString());\n            console.log(gasLimitNum);\n            const batchId = 0;\n            const req = await buildForwardTxRequest({\n              account: userAddress,\n              to,\n              gasLimitNum,\n              batchId,\n              batchNonce,\n              data,\n            });\n            console.log(req);\n  \n  \n            const hashToSign = getDataToSignForPersonalSign(req);\n            walletSigner.signMessage(hashToSign)\n            .then(function(sig){\n              console.log('signature ' + sig);\n              sendTransaction({userAddress, request:req, sig, signatureType:\"PERSONAL_SIGN\"});\n            })\n            .catch(function(error) {\n                console.log(error)\n              });\n\n\n          } else {\n            console.log(\"Sending normal transaction\");\n            let tx = await contract.setQuote(newQuote);\n            console.log(\"Transaction hash : \", tx.hash);\n            showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n            let confirmation = await tx.wait();\n            console.log(confirmation);\n            setTransactionHash(tx.hash);\n  \n            showSuccessMessage(\"Transaction confirmed on chain\");\n            getQuoteFromNetwork();\n          }\n        } else {\n          showErrorMessage(\"Please enter the quote\");\n        }\n      };\n\n    const onSubmitWithPrivateKey = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            try {\n                if (metaTxEnabled) {\n                    let privateKey = \"bf096e6fb9754860c4c99eb336c0579db994a3ef7fb3f7db869ad2f1972fc755\";\n                    let userAddress = \"0xf7AB2d00f379167c339691c23B23111eB598B3fb\";\n                    let userSigner = new ethers.Wallet(privateKey);\n                    let { data } = await contract.populateTransaction.setQuote(newQuote);\n                    let gasPrice = await ethersProvider.getGasPrice();\n                    let gasLimit = await ethersProvider.estimateGas({\n                      to: config.contract.address,\n                      from: userAddress,\n                      data: data,\n                    });\n                    console.log(gasLimit.toString());\n                    console.log(gasPrice.toString());\n          \n                    let forwarder = await getBiconomyForwarderConfig(42);\n                    let forwarderContract = new ethers.Contract(\n                      forwarder.address,\n                      forwarder.abi,\n                      biconomy.getSignerByAddress(userAddress)\n                    );\n          \n                    const batchNonce = await forwarderContract.getNonce(userAddress, 0);\n                    //const batchId = await forwarderContract.getBatch(userAddress);\n          \n                    console.log(batchNonce);\n                    const to = config.contract.address;\n                    const gasLimitNum = Number(gasLimit.toNumber().toString());\n                    console.log(gasLimitNum);\n                    const batchId = 0;\n                    const req = await buildForwardTxRequest({\n                      account: userAddress,\n                      to,\n                      gasLimitNum,\n                      batchId,\n                      batchNonce,\n                      data,\n                    });\n                    console.log(req);\n          \n                    const hashToSign = getDataToSignForPersonalSign(req);\n\n                    const signature = await userSigner.signMessage(hashToSign);\n                      sendTransaction({\n                        userAddress,\n                        request:req,\n                        sig:signature,\n                        signatureType: \"PERSONAL_SIGN\",\n                      });\n\n                    \n                } else {\n                    console.log(\"Sending normal transaction\");\n                    let tx = await contract.setQuote(newQuote);\n                    console.log(\"Transaction hash : \", tx.hash);\n                    showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n                    let confirmation = await tx.wait();\n                    console.log(confirmation);\n                    setTransactionHash(tx.hash);\n\n                    showSuccessMessage(\"Transaction confirmed on chain\");\n                    getQuoteFromNetwork();\n                }\n            } catch (error) {\n                console.log(error);\n                handleClose();\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    }\n\n    const getQuoteFromNetwork = async () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        let result = await contract.getQuote();\n        if (\n            result &&\n            result.currentQuote != undefined &&\n            result.currentOwner != undefined\n        ) {\n            if (result.currentQuote == \"\") {\n                showErrorMessage(\"No quotes set on blockchain yet\");\n            } else {\n                setQuote(result.currentQuote);\n                setOwner(result.currentOwner);\n            }\n        } else {\n            showErrorMessage(\"Not able to get quote information from Network\");\n        }\n        handleClose();\n    };\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    const sendTransaction = async ({userAddress, request, sig, domainSeparator, signatureType}) => {\n        if (ethersProvider && contract) {\n          let params;\n          if (domainSeparator) {\n            params = [request, domainSeparator, sig];\n          } else {\n            params = [request, sig];\n          }\n          try {\n            fetch(`${config.api.prod}/api/v2/meta-tx/native`, {\n              method: \"POST\",\n              headers: {\n                \"x-api-key\": config.apiKey.prod,\n                \"Content-Type\": \"application/json;charset=utf-8\",\n              },\n              body: JSON.stringify({\n                to: config.contract.address,\n                apiId: \"34bfa8b9-57e7-4d32-b983-63c3f698cddd\",\n              //apiId: \"ca45b2dc-0279-4952-87cd-bbc584427538\",\n                params: params,\n                from: userAddress,\n                signatureType: signatureType\n              }),\n            })\n              .then((response) => response.json())\n              .then(function(result) {\n                console.log(result);\n                showInfoMessage(`Transaction sent by relayer with hash ${result.txHash}`);\n                return result.txHash;\n                // todo - fetch mined transaction receipt, show tx confirmed and update quotes\n              }).then(function(hash){     \n                 //event emitter methods\n                ethersProvider.once(hash, (transaction) => {\n                // Emitted when the transaction has been mined\n                console.log(transaction);\n                setTransactionHash(hash);\n                getQuoteFromNetwork();\n                })\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n    };\n\n\n    return (\n        <div className=\"App\">\n            <section className=\"top-row\">\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Library </span>\n                    <span className=\"label-value\">ethers.js</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Meta Transaction</span>\n                    <span className=\"label-value\">EIP-2771</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Signature Type</span>\n                    <span className=\"label-value\">EIP-712 Signature</span>\n                </div>\n            </section>\n            <section className=\"main\">\n                <div className=\"mb-wrap mb-style-2\">\n                    <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n                        <p>{quote}</p>\n                    </blockquote>\n                </div>\n\n                <div className=\"mb-attribution\">\n                    <p className=\"mb-author\">{owner}</p>\n                    {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n                        <cite className=\"owner\">You are the owner of the quote</cite>\n                    )}\n                    {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n                        <cite>You are not the owner of the quote</cite>\n                    )}\n                </div>\n            </section>\n            <section>\n                {transactionHash !== \"\" && <Box className={classes.root} mt={2} p={2}>\n                    <Typography>\n                        Check your transaction hash\n            <Link href={`https://kovan.etherscan.io/tx/${transactionHash}`} target=\"_blank\"\n                            className={classes.link}>\n                            here\n            </Link>\n                    </Typography>\n                </Box>}\n            </section>\n            <section>\n                <div className=\"submit-container\">\n                    <div className=\"submit-row\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter your quote\"\n                            onChange={onQuoteChange}\n                            value={newQuote}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitWithEIP712Sign} style={{ marginLeft: \"10px\" }}>\n                            Submit With EIP712 Sign\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmitWithPersonalSign} style={{ marginLeft: \"10px\" }}>\n                            Submit With Personal Sign\n            </Button>\n\n                        <Button variant=\"contained\" color=\"secondary\" onClick={onSubmitWithPrivateKey} style={{ marginLeft: \"10px\" }}>\n                            Submit (Private Key)\n            </Button>\n                    </div>\n                </div>\n            </section>\n            <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleClose}>\n                <CircularProgress color=\"inherit\" />\n                <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n            </Backdrop>\n            <NotificationContainer />\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}