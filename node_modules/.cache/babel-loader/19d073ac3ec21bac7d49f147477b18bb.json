{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar Promise = require(\"promise\");\n\nvar ethers = require(\"ethers\");\n\nvar txDecoder = require(\"ethereum-tx-decoder\");\n\nvar abi = require(\"ethereumjs-abi\");\n\nvar _require = require(\"./util\"),\n    toJSONRPCPayload = _require.toJSONRPCPayload;\n\nvar _require2 = require(\"./config\"),\n    config = _require2.config,\n    RESPONSE_CODES = _require2.RESPONSE_CODES,\n    EVENTS = _require2.EVENTS,\n    BICONOMY_RESPONSE_CODES = _require2.BICONOMY_RESPONSE_CODES,\n    STATUS = _require2.STATUS;\n\nvar DEFAULT_PAYLOAD_ID = \"99999999\";\nvar baseURL = config.baseURL;\nvar JSON_RPC_VERSION = config.JSON_RPC_VERSION;\nvar NATIVE_META_TX_URL = config.nativeMetaTxUrl;\n\nvar PermitClient = require(\"./PermitClient\");\n\nvar ERC20ForwarderClient = require(\"./ERC20ForwarderClient\");\n\nvar _require3 = require(\"./biconomyforwarder\"),\n    buildForwardTxRequest = _require3.buildForwardTxRequest,\n    getDomainSeperator = _require3.getDomainSeperator;\n\nvar _require4 = require(\"./abis\"),\n    erc20ForwarderAbi = _require4.erc20ForwarderAbi,\n    oracleAggregatorAbi = _require4.oracleAggregatorAbi,\n    feeManagerAbi = _require4.feeManagerAbi,\n    biconomyForwarderAbi = _require4.biconomyForwarderAbi,\n    transferHandlerAbi = _require4.transferHandlerAbi;\n\nvar fetch = require(\"node-fetch\");\n\nvar decoderMap = {},\n    smartContractMap = {},\n    // contract addresss -> contract attributes(metaTransactionType)\n// could be contract address -> contract object\nsmartContractMetaTransactionMap = {};\nvar biconomyForwarder;\n\nvar events = require(\"events\");\n\nvar eventEmitter = new events.EventEmitter();\nvar trustedForwarderOverhead;\nvar daiPermitOverhead;\nvar eip2612PermitOverhead;\nvar domainType, forwarderDomainType, metaInfoType, relayerPaymentType, metaTransactionType, forwardRequestType;\nvar domainData = {\n  name: config.eip712DomainName,\n  version: config.eip712SigVersion,\n  verifyingContract: config.eip712VerifyingContract\n};\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\nvar forwarderDomainData; // EIP712 format data for login\n\nvar loginDomainType, loginMessageType, loginDomainData;\n\nfunction Biconomy(provider, options) {\n  _validate(options);\n\n  this.isBiconomy = true;\n  this.status = STATUS.INIT;\n  this.options = options;\n  this.apiKey = options.apiKey;\n  this.isLogin = false;\n  this.dappAPIMap = {};\n  this.strictMode = options.strictMode || false;\n  this.providerId = options.providerId || 0;\n  this.readViaContract = options.readViaContract || false;\n  this.READY = STATUS.BICONOMY_READY;\n  this.LOGIN_CONFIRMATION = EVENTS.LOGIN_CONFIRMATION;\n  this.ERROR = EVENTS.BICONOMY_ERROR;\n  this.pendingLoginTransactions = {};\n  this.jsonRPC = {\n    messageId: 0\n  };\n  this.originalProvider = provider;\n  this.isEthersProviderPresent = false;\n  this.canSignMessages = false;\n\n  if (options.debug) {\n    config.logsEnabled = true;\n  }\n\n  if (options.walletProvider) {\n    if (isEthersProvider(options.walletProvider)) {\n      throw new Error(\"Wallet Provider in options can't be an ethers provider. Please pass the provider you get from your wallet directly.\");\n    }\n\n    this.walletProvider = new ethers.providers.Web3Provider(options.walletProvider);\n  }\n\n  if (provider) {\n    if (isEthersProvider(provider)) {\n      this.ethersProvider = provider;\n      this.isEthersProviderPresent = true;\n    } else {\n      this.ethersProvider = new ethers.providers.Web3Provider(provider);\n    }\n\n    _init(this.apiKey, this);\n\n    var proto = Object.getPrototypeOf(provider);\n    var keys = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0; i < keys.length; i++) {\n      this[keys[i]] = provider[keys[i]];\n    }\n\n    for (var key in provider) {\n      if (!this[key]) {\n        this[key] = provider[key];\n      }\n    }\n\n    var self = this;\n\n    this.send = function (payload, cb) {\n      var _this = this;\n\n      if (typeof payload === \"string\") {\n        // Ethers provider is being used to call methods, so payload is actually method, and cb is params\n        payload = {\n          id: 1,\n          jsonrpc: \"2.0\",\n          method: payload,\n          params: cb\n        };\n      }\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else {\n        if (self.isEthersProviderPresent) {\n          return self.originalProvider.send(payload.method, payload.params);\n        } else {\n          self.originalProvider.send(payload, cb);\n        }\n      }\n    };\n\n    this.request = function (args, cb) {\n      var payload = {\n        method: args.method,\n        params: args.params\n      };\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else {\n        if (self.originalProvider.request) {\n          return self.originalProvider.request(args, cb);\n        } else if (self.originalProvider.send) {\n          return new Promise( /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(resolve, reject) {\n              var jsonRPCPaylod, localResult;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      jsonRPCPaylod = toJSONRPCPayload(self, payload.method, payload.params);\n\n                      if (!self.isEthersProviderPresent) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      _context.prev = 2;\n                      _context.next = 5;\n                      return self.originalProvider.send(jsonRPCPaylod.method, jsonRPCPaylod.params);\n\n                    case 5:\n                      localResult = _context.sent;\n                      resolve(localResult);\n                      _context.next = 12;\n                      break;\n\n                    case 9:\n                      _context.prev = 9;\n                      _context.t0 = _context[\"catch\"](2);\n                      reject(_context.t0);\n\n                    case 12:\n                      _context.next = 15;\n                      break;\n\n                    case 14:\n                      self.originalProvider.send(jsonRPCPaylod, function (err, response) {\n                        if (err) {\n                          return reject(err);\n                        }\n\n                        if (response.result) {\n                          resolve(response.result);\n                        } else {\n                          resolve(response);\n                        }\n                      });\n\n                    case 15:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[2, 9]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        } else {\n          return Promise.reject(\"Invalid provider object passed to Biconomy as it doesn't support request or send method\");\n        }\n      }\n    };\n\n    this.sendAsync = this.send;\n  } else {\n    throw new Error(\"Please pass a provider to Biconomy.\");\n  }\n}\n\nBiconomy.prototype.getSignerByAddress = function (userAddress) {\n  var provider = this.getEthersProvider();\n  var signer = provider.getSigner();\n  signer = signer.connectUnchecked();\n  signer.getAddress = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", userAddress);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return signer;\n};\n\nBiconomy.prototype.getEthersProvider = function () {\n  return new ethers.providers.Web3Provider(this);\n};\n\nBiconomy.prototype.getForwardRequestAndMessageToSign = function (rawTransaction, tokenAddress, cb) {\n  var engine = this;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(resolve, reject) {\n      var decodedTx, to, methodInfo, error, methodName, token, api, metaTxApproach, contractAddr, _error, params, paramArray, i, parsedTransaction, account, gasLimit, gasLimitNum, contractABI, _contract$estimateGas, contract, _error2, request, cost, buildTxResponse, _error3, eip712DataToSign, hashToSign, dataToSign, _error4;\n\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!rawTransaction) {\n                _context3.next = 70;\n                break;\n              }\n\n              decodedTx = txDecoder.decodeTx(rawTransaction);\n\n              if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n                _context3.next = 67;\n                break;\n              }\n\n              to = decodedTx.to.toLowerCase();\n              methodInfo = decodeMethod(to, decodedTx.data);\n\n              if (methodInfo) {\n                _context3.next = 9;\n                break;\n              }\n\n              error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"Smart Contract address registered on dashboard is different than what is sent(\".concat(decodedTx.to, \") in current transaction\"));\n              if (cb) cb(error);\n              return _context3.abrupt(\"return\", reject(error));\n\n            case 9:\n              methodName = methodInfo.name; //token address needs to be passed otherwise fees will be charged in DAI by default, given DAI permit is given\n\n              token = tokenAddress ? tokenAddress : engine.daiTokenAddress;\n\n              _logMessage(tokenAddress);\n\n              api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n              if (!api) {\n                api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n                metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n              } else {\n                contractAddr = api.contractAddress.toLowerCase();\n                metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n              }\n\n              if (api) {\n                _context3.next = 19;\n                break;\n              }\n\n              _logMessage(\"API not found for method \".concat(methodName));\n\n              _error = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"No API found on dashboard for called method \".concat(methodName));\n              if (cb) cb(_error);\n              return _context3.abrupt(\"return\", reject(_error));\n\n            case 19:\n              _logMessage(\"API found\");\n\n              params = methodInfo.params;\n              paramArray = [];\n\n              for (i = 0; i < params.length; i++) {\n                paramArray.push(_getParamValue(params[i]));\n              }\n\n              parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n              account = parsedTransaction.from;\n\n              _logMessage(\"Signer is \".concat(account));\n\n              gasLimit = decodedTx.gasLimit;\n\n              if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n                _context3.next = 38;\n                break;\n              }\n\n              contractABI = smartContractMap[to];\n\n              if (!contractABI) {\n                _context3.next = 36;\n                break;\n              }\n\n              contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n              _context3.next = 33;\n              return (_contract$estimateGas = contract.estimateGas)[methodName].apply(_contract$estimateGas, paramArray.concat([{\n                from: account\n              }]));\n\n            case 33:\n              gasLimit = _context3.sent; // Do not send this value in API call. only meant for txGas\n\n              gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n              _logMessage(\"Gas limit number \".concat(gasLimitNum));\n\n            case 36:\n              _context3.next = 39;\n              break;\n\n            case 38:\n              gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n            case 39:\n              if (account) {\n                _context3.next = 42;\n                break;\n              }\n\n              _error2 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n              return _context3.abrupt(\"return\", end(_error2));\n\n            case 42:\n              if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n                _context3.next = 48;\n                break;\n              }\n\n              _context3.next = 45;\n              return buildForwardTxRequest(account, to, gasLimitNum, decodedTx.data, biconomyForwarder);\n\n            case 45:\n              request = _context3.sent.request;\n              _context3.next = 58;\n              break;\n\n            case 48:\n              if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n                _context3.next = 55;\n                break;\n              }\n\n              _context3.next = 51;\n              return engine.erc20ForwarderClient.buildTx({\n                userAddress: account,\n                to: to,\n                txGas: gasLimitNum,\n                data: decodedTx.data,\n                token: token\n              });\n\n            case 51:\n              buildTxResponse = _context3.sent;\n\n              if (buildTxResponse) {\n                request = buildTxResponse.request;\n                cost = buildTxResponse.cost;\n              } else {\n                reject(formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Unable to build forwarder request\"));\n              }\n\n              _context3.next = 58;\n              break;\n\n            case 55:\n              _error3 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Smart contract is not registered in the dashboard for this meta transaction approach. Kindly use biconomy.getUserMessageToSign\");\n              if (cb) cb(_error3);\n              return _context3.abrupt(\"return\", reject(_error3));\n\n            case 58:\n              _logMessage(\"Forward Request is: \");\n\n              _logMessage(request);\n\n              eip712DataToSign = {\n                types: {\n                  EIP712Domain: forwarderDomainType,\n                  ERC20ForwardRequest: forwardRequestType\n                },\n                domain: forwarderDomainData,\n                primaryType: \"ERC20ForwardRequest\",\n                message: request\n              };\n              hashToSign = abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n              dataToSign = {\n                eip712Format: eip712DataToSign,\n                personalSignatureFormat: hashToSign,\n                request: request,\n                cost: cost\n              };\n              if (cb) cb(null, dataToSign);\n              return _context3.abrupt(\"return\", resolve(dataToSign));\n\n            case 67:\n              _error4 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n              if (cb) cb(_error4);\n              return _context3.abrupt(\"return\", reject(_error4));\n\n            case 70:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n};\n/**\n * Method used to listen to events emitted from the SDK\n */\n\n\nBiconomy.prototype.onEvent = function (type, callback) {\n  if (type == this.READY || type == this.ERROR || type == this.LOGIN_CONFIRMATION) {\n    eventEmitter.on(type, callback);\n    return this;\n  } else {\n    throw formatMessage(RESPONSE_CODES.EVENT_NOT_SUPPORTED, \"\".concat(type, \" event is not supported.\"));\n  }\n};\n/**\n * Create a JSON RPC response from the given error and result parameter.\n **/\n\n\nBiconomy.prototype._createJsonRpcResponse = function (payload, error, result) {\n  var response = {};\n  response.id = payload.id;\n  response.jsonrpc = JSON_RPC_VERSION;\n\n  if ((!error || error == null) && !result) {\n    response.error = \"Unexpected error has occured. Please contact Biconomy Team\";\n    return response;\n  }\n\n  if (error) {\n    response.error = error;\n  } else if (result && result.error) {\n    response.error = result.error;\n  } else if (ethers.utils.isHexString(result)) {\n    response.result = result;\n  } else {\n    response = result;\n  }\n\n  return response;\n};\n\nfunction decodeMethod(to, data) {\n  if (to && data && decoderMap[to]) {\n    return decoderMap[to].decodeMethod(data);\n  }\n\n  return;\n}\n/**\n * Method used to handle transaction initiated using web3.eth.sendSignedTransaction method\n * It extracts rawTransaction from payload and decode it to get required information like from, to,\n * data, gasLimit to create the payload for biconomy meta transaction API.\n * In case of Native meta transaction, payload just contains rawTransaction\n * In case of contract based meta transaction, payload contains rawTransaction and signature wrapped\n * in a json object.\n *\n * @param {Object} engine Reference to this SDK instance\n * @param {Object} payload Payload data\n * @param {Function} end Callback function with error as first argument\n */\n\n\nfunction sendSignedTransaction(_x5, _x6, _x7) {\n  return _sendSignedTransaction.apply(this, arguments);\n}\n/**\n * Function decodes the parameter in payload and gets the user signature using eth_signTypedData_v3\n * method and send the request to biconomy for processing and call the callback method 'end'\n * with transaction hash.\n *\n * This is an internal function that is called while intercepting eth_sendTransaction RPC method call.\n **/\n\n\nfunction _sendSignedTransaction() {\n  _sendSignedTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(engine, payload, end) {\n    var data, rawTransaction, signature, request, signatureType, decodedTx, to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, _error5, params, paramArray, parsedTransaction, account, _error6, forwardedData, gasLimitNum, gasLimit, paramArrayForGasCalculation, i, contractABI, _contract$estimateGas2, contract, domainSeparator, _data, _i, _data2, relayerPayment, _data3, _error7, _error8, _error9, _error10;\n\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(payload && payload.params[0])) {\n              _context7.next = 98;\n              break;\n            }\n\n            data = payload.params[0]; // user would need to pass token address as well!\n            // OR they could pass the symbol and engine will provide the address for you..\n            // default is DAI\n\n            if (typeof data == \"string\") {\n              // Here user send the rawTransaction in the payload directly. Probably the case of native meta transaction\n              // Handle this scenario differently?\n              rawTransaction = data;\n            } else if ((0, _typeof2[\"default\"])(data) == \"object\") {\n              // Here user wrapped raw Transaction in json object along with signature\n              signature = data.signature;\n              rawTransaction = data.rawTransaction;\n              signatureType = data.signatureType;\n              request = data.forwardRequest;\n            }\n\n            if (!rawTransaction) {\n              _context7.next = 93;\n              break;\n            }\n\n            decodedTx = txDecoder.decodeTx(rawTransaction);\n\n            if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n              _context7.next = 88;\n              break;\n            }\n\n            to = decodedTx.to.toLowerCase();\n            methodInfo = decodeMethod(to, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            methodInfo = decodeMethod(config.SCW, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            if (!engine.strictMode) {\n              _context7.next = 16;\n              break;\n            }\n\n            error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\"));\n            return _context7.abrupt(\"return\", end(error));\n\n          case 16:\n            _logMessage(\"Strict mode is off so falling back to default provider for handling transaction\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\")));\n\n          case 19:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            if (api) {\n              _context7.next = 33;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context7.next = 30;\n              break;\n            }\n\n            _error5 = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\"));\n            return _context7.abrupt(\"return\", end(_error5, null));\n\n          case 30:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can not sign transactions. Make sure to register method \".concat(methodName, \" on Biconomy Dashboard\")));\n\n          case 33:\n            _logMessage(\"API found\");\n\n            params = methodInfo.params;\n            paramArray = [];\n            parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n            account = parsedTransaction ? parsedTransaction.from : undefined;\n\n            _logMessage(\"signer is \".concat(account));\n\n            if (account) {\n              _context7.next = 42;\n              break;\n            }\n\n            _error6 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n            return _context7.abrupt(\"return\", end(_error6));\n\n          case 42:\n            gasLimit = decodedTx.gasLimit;\n\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context7.next = 85;\n              break;\n            }\n\n            if (!(metaTxApproach != engine.DEFAULT)) {\n              _context7.next = 74;\n              break;\n            } // forwardedData = payload.params[0].data;\n\n\n            forwardedData = decodedTx.data;\n            paramArrayForGasCalculation = [];\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n            }\n\n            if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n              _context7.next = 59;\n              break;\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context7.next = 57;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            _context7.next = 54;\n            return (_contract$estimateGas2 = contract.estimateGas)[methodName].apply(_contract$estimateGas2, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 54:\n            gasLimit = _context7.sent; // do not send this value in API call. only meant for txGas\n\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n            _logMessage(\"gas limit number\" + gasLimitNum);\n\n          case 57:\n            _context7.next = 60;\n            break;\n\n          case 59:\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n          case 60:\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              domainSeparator = getDomainSeperator(forwarderDomainData);\n\n              _logMessage(domainSeparator);\n\n              paramArray.push(domainSeparator);\n            }\n\n            paramArray.push(signature);\n            _data = {};\n            _data.from = account;\n            _data.apiId = api.id;\n            _data.params = paramArray;\n            _data.to = to;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              _data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context7.next = 72;\n            return _sendTransaction(engine, account, api, _data, end);\n\n          case 72:\n            _context7.next = 83;\n            break;\n\n          case 74:\n            for (_i = 0; _i < params.length; _i++) {\n              paramArray.push(_getParamValue(params[_i]));\n            }\n\n            _data2 = {};\n            _data2.from = account;\n            _data2.apiId = api.id;\n            _data2.params = paramArray;\n            _data2.gasLimit = decodedTx.gasLimit.toString(); //verify\n\n            _data2.to = decodedTx.to.toLowerCase();\n            _context7.next = 83;\n            return _sendTransaction(engine, account, api, _data2, end);\n\n          case 83:\n            _context7.next = 86;\n            break;\n\n          case 85:\n            if (signature) {\n              relayerPayment = {};\n              relayerPayment.token = config.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS;\n              relayerPayment.amount = config.DEFAULT_RELAYER_PAYMENT_AMOUNT;\n              _data3 = {};\n              _data3.rawTx = rawTransaction;\n              _data3.signature = signature;\n              _data3.to = to;\n              _data3.from = account;\n              _data3.apiId = api.id;\n              _data3.data = decodedTx.data;\n              _data3.value = ethers.utils.hexValue(decodedTx.value);\n              _data3.gasLimit = decodedTx.gasLimit.toString();\n              _data3.nonceBatchId = config.NONCE_BATCH_ID;\n              _data3.expiry = config.EXPIRY;\n              _data3.baseGas = config.BASE_GAS;\n              _data3.relayerPayment = {\n                token: relayerPayment.token,\n                amount: relayerPayment.amount\n              };\n\n              _sendTransaction(engine, account, api, _data3, end);\n            } else {\n              _error7 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". message and signature are required in param object\"));\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error7);\n              end(_error7);\n            }\n\n          case 86:\n            _context7.next = 91;\n            break;\n\n          case 88:\n            _error8 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Not able to deode the data in rawTransaction using ethereum-tx-decoder. Please check the data sent.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error8);\n            end(_error8);\n\n          case 91:\n            _context7.next = 96;\n            break;\n\n          case 93:\n            _error9 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \".rawTransaction is required in param object\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error9);\n            end(_error9);\n\n          case 96:\n            _context7.next = 101;\n            break;\n\n          case 98:\n            _error10 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". Non empty Array expected in params key\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error10);\n            end(_error10);\n\n          case 101:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _sendSignedTransaction.apply(this, arguments);\n}\n\nfunction handleSendTransaction(_x8, _x9, _x10) {\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction _handleSendTransaction() {\n  _handleSendTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(engine, payload, end) {\n    var to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, gasLimit, signatureType, _error11, account, params, paramArray, _error12, forwardedData, gasLimitNum, signatureFromPayload, paramArrayForGasCalculation, i, contractABI, _contract$estimateGas3, contract, _error13, request, domainSeparator, signatureEIP712, signaturePersonal, data, _i2, _data4, _error14, _error15, _error16;\n\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n\n            _logMessage(\"Handle transaction with payload\");\n\n            _logMessage(payload);\n\n            if (!(payload.params && payload.params[0] && payload.params[0].to)) {\n              _context8.next = 137;\n              break;\n            }\n\n            to = payload.params[0].to.toLowerCase();\n\n            if (!(decoderMap[to] || decoderMap[config.SCW])) {\n              _context8.next = 127;\n              break;\n            }\n\n            methodInfo = decodeMethod(to, payload.params[0].data); // Check if the Smart Contract Wallet is registered on dashboard\n\n            if (!methodInfo) {\n              methodInfo = decodeMethod(config.SCW, payload.params[0].data);\n            }\n\n            if (methodInfo) {\n              _context8.next = 13;\n              break;\n            }\n\n            error = {};\n            error.code = RESPONSE_CODES.WRONG_ABI;\n            error.message = \"Can't decode method information from payload. Make sure you have uploaded correct ABI on Biconomy Dashboard\";\n            return _context8.abrupt(\"return\", end(error, null));\n\n          case 13:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined; // Information we get here is contractAddress, methodName, methodType, ApiId\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            gasLimit = payload.params[0].gas;\n            signatureType = payload.params[0].signatureType;\n\n            _logMessage(payload.params[0]);\n\n            _logMessage(api);\n\n            _logMessage(\"gas limit : \".concat(gasLimit));\n\n            if (api) {\n              _context8.next = 33;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context8.next = 31;\n              break;\n            }\n\n            _error11 = {};\n            _error11.code = RESPONSE_CODES.API_NOT_FOUND;\n            _error11.message = \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\");\n            return _context8.abrupt(\"return\", end(_error11, null));\n\n          case 31:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\")));\n\n          case 33:\n            _logMessage(\"API found\");\n\n            _logMessage(\"Getting user account\");\n\n            account = payload.params[0].from;\n\n            if (account) {\n              _context8.next = 38;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", end(\"Not able to get user account\"));\n\n          case 38:\n            _logMessage(\"User account fetched\");\n\n            params = methodInfo.params;\n\n            _logMessage(params);\n\n            paramArray = [];\n\n            if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n              _context8.next = 46;\n              break;\n            }\n\n            _error12 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"This operation is not allowed for contracts registered on dashboard as \\\"ERC20Forwarder\\\". Use ERC20Forwarder client instead!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error12);\n            return _context8.abrupt(\"return\", end(_error12));\n\n          case 46:\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context8.next = 122;\n              break;\n            }\n\n            if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n              _context8.next = 112;\n              break;\n            }\n\n            _logMessage(\"Smart contract is configured to use Trusted Forwarder as meta transaction type\");\n\n            forwardedData = payload.params[0].data;\n            signatureFromPayload = payload.params[0].signature; // Check if gas limit is present, it not calculate gas limit\n\n            paramArrayForGasCalculation = [];\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context8.next = 62;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            _context8.next = 58;\n            return (_contract$estimateGas3 = contract.estimateGas)[methodName].apply(_contract$estimateGas3, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 58:\n            gasLimitNum = _context8.sent;\n\n            _logMessage(\"Gas limit calculated for method \".concat(methodName, \" in SDK: \").concat(gasLimitNum));\n\n            _context8.next = 65;\n            break;\n\n          case 62:\n            _error13 = formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Smart contract ABI not found!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error13);\n            end(_error13);\n\n          case 65:\n            _context8.next = 67;\n            return buildForwardTxRequest(account, to, parseInt(gasLimitNum), //txGas\n            forwardedData, biconomyForwarder);\n\n          case 67:\n            request = _context8.sent.request;\n\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (!(signatureType && signatureType == engine.EIP712_SIGN)) {\n              _context8.next = 87;\n              break;\n            }\n\n            domainSeparator = getDomainSeperator(forwarderDomainData);\n\n            _logMessage(\"Domain separator to be used:\");\n\n            _logMessage(domainSeparator);\n\n            paramArray.push(domainSeparator);\n\n            if (!signatureFromPayload) {\n              _context8.next = 80;\n              break;\n            }\n\n            signatureEIP712 = signatureFromPayload;\n\n            _logMessage(\"EIP712 signature from payload is \".concat(signatureEIP712));\n\n            _context8.next = 84;\n            break;\n\n          case 80:\n            _context8.next = 82;\n            return getSignatureEIP712(engine, account, request);\n\n          case 82:\n            signatureEIP712 = _context8.sent;\n\n            _logMessage(\"EIP712 signature is \".concat(signatureEIP712));\n\n          case 84:\n            paramArray.push(signatureEIP712);\n            _context8.next = 101;\n            break;\n\n          case 87:\n            if (!signatureFromPayload) {\n              _context8.next = 92;\n              break;\n            }\n\n            signaturePersonal = signatureFromPayload;\n\n            _logMessage(\"Personal signature from payload is \".concat(signaturePersonal));\n\n            _context8.next = 96;\n            break;\n\n          case 92:\n            _context8.next = 94;\n            return getSignaturePersonal(engine, request);\n\n          case 94:\n            signaturePersonal = _context8.sent;\n\n            _logMessage(\"Personal signature is \".concat(signaturePersonal));\n\n          case 96:\n            if (!signaturePersonal) {\n              _context8.next = 100;\n              break;\n            }\n\n            paramArray.push(signaturePersonal);\n            _context8.next = 101;\n            break;\n\n          case 100:\n            throw new Error(\"Could not get personal signature while processing transaction in Mexa SDK. Please check the providers you have passed to Biconomy\");\n\n          case 101:\n            data = {};\n            data.from = account;\n            data.apiId = api.id;\n            data.params = paramArray;\n            data.to = to;\n            data.gasLimit = gasLimit;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context8.next = 110;\n            return _sendTransaction(engine, account, api, data, end);\n\n          case 110:\n            _context8.next = 120;\n            break;\n\n          case 112:\n            for (_i2 = 0; _i2 < params.length; _i2++) {\n              paramArray.push(_getParamValue(params[_i2]));\n            }\n\n            _data4 = {};\n            _data4.from = account;\n            _data4.apiId = api.id;\n            _data4.params = paramArray;\n            _data4.gasLimit = gasLimit;\n            _data4.to = to;\n\n            _sendTransaction(engine, account, api, _data4, end);\n\n          case 120:\n            _context8.next = 125;\n            break;\n\n          case 122:\n            _error14 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Biconomy smart contract wallets are not supported now. On dashboard, re-register your smart contract methods with \\\"native meta tx\\\" checkbox selected.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error14);\n            return _context8.abrupt(\"return\", end(_error14));\n\n          case 125:\n            _context8.next = 135;\n            break;\n\n          case 127:\n            if (!engine.strictMode) {\n              _context8.next = 133;\n              break;\n            }\n\n            _error15 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error15);\n            end(_error15);\n            _context8.next = 135;\n            break;\n\n          case 133:\n            _logMessage(\"Smart contract not found on dashbaord. Strict mode is off, so falling back to normal transaction mode\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can't send transactions and smart contract \".concat(to, \" not found on Biconomy Dashbaord\")));\n\n          case 135:\n            _context8.next = 140;\n            break;\n\n          case 137:\n            _error16 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload), \". Expecting params key to be an array with first element having a 'to' property\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error16);\n            end(_error16);\n\n          case 140:\n            _context8.next = 145;\n            break;\n\n          case 142:\n            _context8.prev = 142;\n            _context8.t0 = _context8[\"catch\"](0);\n            return _context8.abrupt(\"return\", end(_context8.t0));\n\n          case 145:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 142]]);\n  }));\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction callDefaultProvider(engine, payload, callback, errorMessage) {\n  var targetProvider = engine.originalProvider;\n\n  if (targetProvider) {\n    if (!engine.canSignMessages) {\n      throw new Error(errorMessage);\n    } else {\n      if (engine.isEthersProviderPresent) {\n        return engine.originalProvider.send(payload.method, payload.params);\n      } else {\n        return engine.originalProvider.send(payload, callback);\n      }\n    }\n  } else {\n    throw new Error(\"Original provider not present in Biconomy\");\n  }\n}\n\nfunction _getEIP712ForwardMessageToSign(request) {\n  if (!forwarderDomainType || !forwardRequestType || !forwarderDomainData) {\n    throw new Error(\"Biconomy is not properly initialized\");\n  }\n\n  var dataToSign = JSON.stringify({\n    types: {\n      EIP712Domain: forwarderDomainType,\n      ERC20ForwardRequest: forwardRequestType\n    },\n    domain: forwarderDomainData,\n    primaryType: \"ERC20ForwardRequest\",\n    message: request\n  });\n  return dataToSign;\n}\n\nfunction _getPersonalForwardMessageToSign(request) {\n  return abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n}\n\nfunction getTargetProvider(engine) {\n  var provider;\n\n  if (engine) {\n    provider = engine.originalProvider;\n\n    if (!engine.canSignMessages) {\n      if (!engine.walletProvider) {\n        throw new Error(\"Please pass a provider connected to a wallet that can sign messages in Biconomy options.\");\n      }\n\n      provider = engine.walletProvider;\n    }\n  }\n\n  return provider;\n}\n\nfunction getSignatureEIP712(engine, account, request) {\n  var dataToSign = _getEIP712ForwardMessageToSign(request);\n\n  var targetProvider = getTargetProvider(engine);\n\n  if (!targetProvider) {\n    throw new Error(\"Unable to get provider information passed to Biconomy\");\n  }\n\n  var promise = new Promise( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(resolve, reject) {\n      var signature;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!targetProvider) {\n                _context4.next = 18;\n                break;\n              }\n\n              if (!isEthersProvider(targetProvider)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.prev = 2;\n              _context4.next = 5;\n              return targetProvider.send(\"eth_signTypedData_v3\", [account, dataToSign]);\n\n            case 5:\n              signature = _context4.sent;\n              resolve(signature);\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](2);\n              reject(_context4.t0);\n\n            case 12:\n              _context4.next = 16;\n              break;\n\n            case 14:\n              _context4.next = 16;\n              return targetProvider.send({\n                jsonrpc: \"2.0\",\n                id: 999999999999,\n                method: \"eth_signTypedData_v3\",\n                params: [account, dataToSign]\n              }, function (error, res) {\n                if (error) {\n                  reject(error);\n                } else {\n                  resolve(res.result);\n                }\n              });\n\n            case 16:\n              _context4.next = 19;\n              break;\n\n            case 18:\n              reject(\"Could not get signature from the provider passed to Biconomy. Check if you have passed a walletProvider in Biconomy Options.\");\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 9]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n  return promise;\n}\n\nfunction getSignaturePersonal(_x13, _x14) {\n  return _getSignaturePersonal.apply(this, arguments);\n} // On getting smart contract data get the API data also\n\n\nfunction _getSignaturePersonal() {\n  _getSignaturePersonal = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(engine, req) {\n    var hashToSign, signature, targetProvider, signer, promise;\n    return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            hashToSign = _getPersonalForwardMessageToSign(req);\n\n            if (!(!engine.signer && !engine.walletProvider)) {\n              _context10.next = 3;\n              break;\n            }\n\n            throw new Error(\"Can't sign messages with current provider. Did you forget to pass walletProvider in Biconomy options?\");\n\n          case 3:\n            targetProvider = getTargetProvider(engine);\n\n            if (targetProvider) {\n              _context10.next = 6;\n              break;\n            }\n\n            throw new Error(\"Unable to get provider information passed to Biconomy\");\n\n          case 6:\n            signer = targetProvider.getSigner();\n            promise = new Promise( /*#__PURE__*/function () {\n              var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(resolve, reject) {\n                return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.prev = 0;\n                        _context9.next = 3;\n                        return signer.signMessage(ethers.utils.arrayify(hashToSign));\n\n                      case 3:\n                        signature = _context9.sent;\n                        resolve(signature);\n                        _context9.next = 10;\n                        break;\n\n                      case 7:\n                        _context9.prev = 7;\n                        _context9.t0 = _context9[\"catch\"](0);\n                        reject(_context9.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[0, 7]]);\n              }));\n\n              return function (_x27, _x28) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n            return _context10.abrupt(\"return\", promise);\n\n          case 9:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getSignaturePersonal.apply(this, arguments);\n}\n\neventEmitter.on(EVENTS.SMART_CONTRACT_DATA_READY, function (dappId, engine) {\n  // Get DApp API information from Database\n  var getAPIInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/meta-api\");\n  fetch(getAPIInfoAPI, getFetchOptions(\"GET\", engine.apiKey)).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response && response.listApis) {\n      var apiList = response.listApis;\n\n      for (var i = 0; i < apiList.length; i++) {\n        var contractAddress = apiList[i].contractAddress; // TODO: In case of SCW(Smart Contract Wallet) there'll be no contract address. Save SCW as key in that case.\n\n        if (contractAddress) {\n          if (!engine.dappAPIMap[contractAddress]) {\n            engine.dappAPIMap[contractAddress] = {};\n          }\n\n          engine.dappAPIMap[contractAddress][apiList[i].method] = apiList[i];\n        } else {\n          if (!engine.dappAPIMap[config.SCW]) {\n            engine.dappAPIMap[config.SCW] = {};\n          }\n\n          engine.dappAPIMap[config.SCW][apiList[i].method] = apiList[i];\n        }\n      }\n\n      eventEmitter.emit(EVENTS.DAPP_API_DATA_READY, engine);\n    }\n  })[\"catch\"](function (error) {\n    _logMessage(error);\n  });\n});\neventEmitter.on(EVENTS.HELPER_CLENTS_READY, /*#__PURE__*/function () {\n  var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(engine) {\n    var biconomyAttributes, ethersProvider, signer, signerOrProvider, isSignerWithAccounts, erc20ForwarderAddress, transferHandlerAddress, erc20Forwarder, oracleAggregatorAddress, feeManagerAddress, forwarderAddress, oracleAggregator, feeManager, forwarder, transferHandler, tokenGasPriceV1SupportedNetworks;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            biconomyAttributes = {\n              apiKey: engine.apiKey,\n              dappAPIMap: engine.dappAPIMap,\n              decoderMap: decoderMap,\n              signType: {\n                EIP712_SIGN: engine.EIP712_SIGN,\n                PERSONAL_SIGN: engine.PERSONAL_SIGN\n              }\n            };\n\n            if (engine.isEthersProviderPresent) {\n              ethersProvider = engine.originalProvider;\n            } else {\n              ethersProvider = new ethers.providers.Web3Provider(engine.originalProvider);\n            }\n\n            signer = ethersProvider.getSigner();\n            signerOrProvider = signer;\n            isSignerWithAccounts = true;\n            _context5.prev = 6;\n            _context5.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            engine.canSignMessages = true;\n            _context5.next = 18;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](6);\n\n            _logMessage(\"Given provider does not have accounts information\");\n\n            signerOrProvider = ethersProvider;\n            isSignerWithAccounts = false;\n            engine.canSignMessages = false;\n\n          case 18:\n            erc20ForwarderAddress = engine.options.erc20ForwarderAddress || engine.erc20ForwarderAddress;\n            transferHandlerAddress = engine.options.transferHandlerAddress || engine.transferHandlerAddress;\n\n            if (!erc20ForwarderAddress) {\n              _context5.next = 42;\n              break;\n            }\n\n            erc20Forwarder = new ethers.Contract(erc20ForwarderAddress, erc20ForwarderAbi, signerOrProvider);\n            _context5.next = 24;\n            return erc20Forwarder.oracleAggregator();\n\n          case 24:\n            oracleAggregatorAddress = _context5.sent;\n            _context5.next = 27;\n            return erc20Forwarder.feeManager();\n\n          case 27:\n            feeManagerAddress = _context5.sent;\n            _context5.next = 30;\n            return erc20Forwarder.forwarder();\n\n          case 30:\n            forwarderAddress = _context5.sent;\n            oracleAggregator = new ethers.Contract(oracleAggregatorAddress, oracleAggregatorAbi, signerOrProvider);\n            feeManager = new ethers.Contract(feeManagerAddress, feeManagerAbi, signerOrProvider); //If ERC20 Forwarder Address exits then it would have configured Forwarder \n\n            forwarder = new ethers.Contract(forwarderAddress, biconomyForwarderAbi, signerOrProvider);\n            transferHandler = new ethers.Contract(transferHandlerAddress, transferHandlerAbi, signerOrProvider);\n            tokenGasPriceV1SupportedNetworks = engine.tokenGasPriceV1SupportedNetworks;\n            engine.permitClient = new PermitClient(engine, erc20ForwarderAddress, engine.daiTokenAddress);\n            engine.erc20ForwarderClient = new ERC20ForwarderClient({\n              forwarderClientOptions: biconomyAttributes,\n              networkId: engine.networkId,\n              provider: ethersProvider,\n              forwarderDomainData: forwarderDomainData,\n              forwarderDomainType: forwarderDomainType,\n              erc20Forwarder: erc20Forwarder,\n              transferHandler: transferHandler,\n              forwarder: forwarder,\n              oracleAggregator: oracleAggregator,\n              feeManager: feeManager,\n              isSignerWithAccounts: isSignerWithAccounts,\n              tokenGasPriceV1SupportedNetworks: tokenGasPriceV1SupportedNetworks,\n              trustedForwarderOverhead: trustedForwarderOverhead,\n              daiPermitOverhead: daiPermitOverhead,\n              eip2612PermitOverhead: eip2612PermitOverhead\n            });\n\n            _logMessage(engine.permitClient);\n\n            _logMessage(engine.erc20ForwarderClient);\n\n            _context5.next = 43;\n            break;\n\n          case 42:\n            _logMessage(\"ERC20 Forwarder is not supported for this network\");\n\n          //Warning : you would not be able to use ERC20ForwarderClient and PermitClient \n\n          case 43:\n            engine.status = STATUS.BICONOMY_READY;\n            eventEmitter.emit(STATUS.BICONOMY_READY);\n            _context5.next = 50;\n            break;\n\n          case 47:\n            _context5.prev = 47;\n            _context5.t1 = _context5[\"catch\"](0);\n\n            _logMessage(_context5.t1);\n\n          case 50:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 47], [6, 12]]);\n  }));\n\n  return function (_x15) {\n    return _ref5.apply(this, arguments);\n  };\n}());\neventEmitter.on(EVENTS.DAPP_API_DATA_READY, function (engine) {\n  eventEmitter.emit(EVENTS.HELPER_CLENTS_READY, engine);\n});\n/**\n * Get user account from current provider using eth_accounts method.\n **/\n\nfunction _getUserAccount(engine, payload, cb) {\n  if (engine) {\n    var id = DEFAULT_PAYLOAD_ID;\n\n    if (payload) {\n      id = payload.id;\n    }\n\n    if (cb) {\n      engine.originalProvider.send({\n        jsonrpc: JSON_RPC_VERSION,\n        id: id,\n        method: \"eth_accounts\",\n        params: []\n      }, function (error, response) {\n        cb(error, response);\n      });\n    } else {\n      return new Promise(function (resolve, reject) {\n        engine.originalProvider.send({\n          jsonrpc: JSON_RPC_VERSION,\n          id: id,\n          method: \"eth_accounts\",\n          params: []\n        }, function (error, res) {\n          if (error) {\n            reject(error);\n          } else if (!res.result) {\n            reject(\"Invalid response \".concat(res));\n          } else {\n            resolve(res.result[0]);\n          }\n        });\n      });\n    }\n  }\n}\n/**\n * Validate parameters passed to biconomy object. Dapp id and api key are mandatory.\n **/\n\n\nfunction _validate(options) {\n  if (!options) {\n    throw new Error(\"Options object needs to be passed to Biconomy Object with apiKey as mandatory key\");\n  }\n\n  if (!options.apiKey) {\n    throw new Error(\"apiKey is required in options object when creating Biconomy object\");\n  }\n}\n/**\n * Get paramter value from param object based on its type.\n **/\n\n\nfunction _getParamValue(paramObj) {\n  var value;\n\n  try {\n    if (paramObj && paramObj.value) {\n      var type = paramObj.type;\n\n      switch (type) {\n        case (type.match(/^uint.*\\[\\]$/) || type.match(/^int.*\\[\\]$/) || {}).input:\n          var val = paramObj.value;\n          value = [];\n\n          for (var j = 0; j < val.length; j++) {\n            value[j] = scientificToDecimal(val[j]);\n            if (value[j]) value[j] = ethers.BigNumber.from(value[j]).toHexString();\n          }\n\n          break;\n\n        case (type.match(/^uint[0-9]*$/) || type.match(/^int[0-9]*$/) || {}).input:\n          value = scientificToDecimal(paramObj.value); //https://docs.ethers.io/v5/api/utils/bignumber/#BigNumber--notes\n\n          if (value) value = ethers.BigNumber.from(value).toHexString();\n          break;\n\n        case \"string\":\n          if ((0, _typeof2[\"default\"])(paramObj.value) === \"object\") {\n            value = paramObj.value.toString();\n          } else {\n            value = paramObj.value;\n          }\n\n          break;\n\n        default:\n          value = paramObj.value;\n          break;\n      }\n    }\n\n    return value;\n  } catch (error) {\n    _logMessage(error);\n\n    throw new Error(\"Error occured while sanitizing paramters. Please verify your method parameters or contact support\");\n  }\n}\n/**\n * Method to send the transaction to biconomy server and call the callback method\n * to pass the result of meta transaction to web3 function call.\n * @param engine Object representing biconomy provider engine\n * @param account User selected account on current wallet\n * @param api API object got from biconomy server\n * @param data Data to be sent to biconomy server having transaction data\n * @param cb Callback method to be called to pass result or send error\n **/\n\n\nfunction _sendTransaction(_x16, _x17, _x18, _x19, _x20) {\n  return _sendTransaction2.apply(this, arguments);\n}\n/**\n * Function to initialize the biconomy object with DApp information.\n * It fetches the dapp's smart contract from biconomy database and initialize the decoders for each smart\n * contract which will be used to decode information during function calls.\n * @param dappId Id for dapp whos information is to be fetched\n * @param apiKey API key used to authenticate the request at biconomy server\n * @param _this object representing biconomy provider\n **/\n\n\nfunction _sendTransaction2() {\n  _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(engine, account, api, data, cb) {\n    var url, fetchOption;\n    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            if (engine && account && api && data) {\n              url = api.url;\n              fetchOption = getFetchOptions(\"POST\", engine.apiKey);\n              fetchOption.body = JSON.stringify(data);\n              fetch(\"\".concat(baseURL).concat(url), fetchOption).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                _logMessage(result);\n\n                if (!result.txHash && result.flag != BICONOMY_RESPONSE_CODES.ACTION_COMPLETE && result.flag != BICONOMY_RESPONSE_CODES.SUCCESS) {\n                  var error = {};\n                  error.code = result.flag || result.code;\n\n                  if (result.flag == BICONOMY_RESPONSE_CODES.USER_CONTRACT_NOT_FOUND) {\n                    error.code = RESPONSE_CODES.USER_CONTRACT_NOT_FOUND;\n                  }\n\n                  error.message = result.log || result.message;\n                  if (cb) cb(error);\n                } else {\n                  if (cb) cb(null, result.txHash);\n                }\n              })[\"catch\"](function (error) {\n                _logMessage(error);\n\n                if (cb) cb(error);\n              });\n            } else {\n              _logMessage(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data));\n\n              if (cb) cb(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data), null);\n            }\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _sendTransaction2.apply(this, arguments);\n}\n\nfunction _init(_x21, _x22) {\n  return _init2.apply(this, arguments);\n}\n\nfunction _init2() {\n  _init2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(apiKey, engine) {\n    var getDappAPI;\n    return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return engine.ethersProvider.getSigner();\n\n          case 3:\n            engine.signer = _context13.sent; // Check current network id and dapp network id registered on dashboard\n\n            getDappAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/dapp\");\n            fetch(getDappAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n              return response.json();\n            }).then( /*#__PURE__*/function () {\n              var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(dappResponse) {\n                var dappNetworkId, dappId, getNetworkIdOption, providerNetworkId;\n                return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _logMessage(dappResponse);\n\n                        if (!(dappResponse && dappResponse.dapp)) {\n                          _context12.next = 20;\n                          break;\n                        }\n\n                        dappNetworkId = dappResponse.dapp.networkId;\n                        dappId = dappResponse.dapp._id;\n\n                        _logMessage(\"Network id corresponding to dapp id \".concat(dappId, \" is \").concat(dappNetworkId));\n\n                        getNetworkIdOption = {\n                          jsonrpc: JSON_RPC_VERSION,\n                          id: \"102\",\n                          method: \"net_version\",\n                          params: []\n                        };\n\n                        if (!isEthersProvider(engine.originalProvider)) {\n                          _context12.next = 17;\n                          break;\n                        }\n\n                        _context12.next = 9;\n                        return engine.originalProvider.send(\"net_version\", []);\n\n                      case 9:\n                        providerNetworkId = _context12.sent;\n\n                        if (!providerNetworkId) {\n                          _context12.next = 14;\n                          break;\n                        }\n\n                        onNetworkId(engine, {\n                          providerNetworkId: providerNetworkId,\n                          dappNetworkId: dappNetworkId,\n                          apiKey: apiKey,\n                          dappId: dappId\n                        });\n                        _context12.next = 15;\n                        break;\n\n                      case 14:\n                        return _context12.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), \"Could not get network version\"));\n\n                      case 15:\n                        _context12.next = 18;\n                        break;\n\n                      case 17:\n                        engine.originalProvider.send(getNetworkIdOption, function (error, networkResponse) {\n                          if (error || networkResponse && networkResponse.error) {\n                            return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), error || networkResponse.error);\n                          } else {\n                            var _providerNetworkId = networkResponse.result;\n                            onNetworkId(engine, {\n                              providerNetworkId: _providerNetworkId,\n                              dappNetworkId: dappNetworkId,\n                              apiKey: apiKey,\n                              dappId: dappId\n                            });\n                          }\n                        });\n\n                      case 18:\n                        _context12.next = 21;\n                        break;\n\n                      case 20:\n                        if (dappResponse.log) {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, dappResponse.log));\n                        } else {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.DAPP_NOT_FOUND, \"No Dapp Registered with apikey \".concat(apiKey)));\n                        }\n\n                      case 21:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n\n              return function (_x29) {\n                return _ref9.apply(this, arguments);\n              };\n            }())[\"catch\"](function (error) {\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n            });\n            _context13.next = 11;\n            break;\n\n          case 8:\n            _context13.prev = 8;\n            _context13.t0 = _context13[\"catch\"](0);\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), _context13.t0);\n\n          case 11:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 8]]);\n  }));\n  return _init2.apply(this, arguments);\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n\nfunction onNetworkId(_x23, _x24) {\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _onNetworkId() {\n  _onNetworkId = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(engine, _ref6) {\n    var providerNetworkId, dappNetworkId, apiKey, dappId;\n    return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            providerNetworkId = _ref6.providerNetworkId, dappNetworkId = _ref6.dappNetworkId, apiKey = _ref6.apiKey, dappId = _ref6.dappId;\n            engine.networkId = providerNetworkId;\n\n            _logMessage(\"Current provider network id: \".concat(providerNetworkId));\n\n            if (!(providerNetworkId != dappNetworkId)) {\n              _context14.next = 7;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_MISMATCH, \"Current networkId \".concat(providerNetworkId, \" is different from dapp network id registered on mexa dashboard \").concat(dappNetworkId))));\n\n          case 7:\n            domainData.chainId = providerNetworkId;\n            daiDomainData.chainId = providerNetworkId;\n            fetch(\"\".concat(baseURL, \"/api/\").concat(config.version2, \"/meta-tx/systemInfo?networkId=\").concat(providerNetworkId)).then(function (response) {\n              return response.json();\n            }).then(function (systemInfo) {\n              if (systemInfo) {\n                domainType = systemInfo.domainType;\n                forwarderDomainType = systemInfo.forwarderDomainType;\n                metaInfoType = systemInfo.metaInfoType;\n                relayerPaymentType = systemInfo.relayerPaymentType;\n                metaTransactionType = systemInfo.metaTransactionType;\n                loginDomainType = systemInfo.loginDomainType;\n                loginMessageType = systemInfo.loginMessageType;\n                loginDomainData = systemInfo.loginDomainData;\n                forwardRequestType = systemInfo.forwardRequestType;\n                forwarderDomainData = systemInfo.forwarderDomainData;\n                trustedForwarderOverhead = systemInfo.overHeadEIP712Sign;\n                daiPermitOverhead = systemInfo.overHeadDaiPermit;\n                eip2612PermitOverhead = systemInfo.overHeadEIP2612Permit;\n                engine.forwarderAddress = systemInfo.biconomyForwarderAddress;\n                engine.erc20ForwarderAddress = systemInfo.erc20ForwarderAddress;\n                engine.transferHandlerAddress = systemInfo.transferHandlerAddress;\n                engine.daiTokenAddress = systemInfo.daiTokenAddress;\n                engine.usdtTokenAddress = systemInfo.usdtTokenAddress;\n                engine.usdcTokenAddress = systemInfo.usdcTokenAddress;\n                engine.TRUSTED_FORWARDER = systemInfo.trustedForwarderMetaTransaction;\n                engine.ERC20_FORWARDER = systemInfo.erc20ForwarderMetaTransaction;\n                engine.DEFAULT = systemInfo.defaultMetaTransaction;\n                engine.EIP712_SIGN = systemInfo.eip712Sign;\n                engine.PERSONAL_SIGN = systemInfo.personalSign;\n                engine.tokenGasPriceV1SupportedNetworks = systemInfo.tokenGasPriceV1SupportedNetworks;\n                daiDomainData.verifyingContract = engine.daiTokenAddress;\n\n                if (systemInfo.relayHubAddress) {\n                  domainData.verifyingContract = systemInfo.relayHubAddress;\n                }\n              } else {\n                return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.INVALID_DATA, \"Could not get signature types from server. Contact Biconomy Team\"));\n              } // check if Valid trusted forwarder address is present from system info\n\n\n              if (engine.forwarderAddress && engine.forwarderAddress != \"\") {\n                biconomyForwarder = new ethers.Contract(engine.forwarderAddress, biconomyForwarderAbi, engine.ethersProvider);\n              } // Get dapps smart contract data from biconomy servers\n\n\n              var getDAppInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/smart-contract\");\n              fetch(getDAppInfoAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                if (!result && result.flag != 143) {\n                  return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Error getting smart contract for dappId \".concat(dappId)));\n                }\n\n                var smartContractList = result.smartContracts;\n\n                if (smartContractList && smartContractList.length > 0) {\n                  smartContractList.forEach(function (contract) {\n                    var abiDecoder = require(\"abi-decoder\");\n\n                    if (contract.type === config.SCW) {\n                      smartContractMetaTransactionMap[config.SCW] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[config.SCW] = abiDecoder;\n                      smartContractMap[config.SCW] = contract.abi;\n                    } else {\n                      smartContractMetaTransactionMap[contract.address.toLowerCase()] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[contract.address.toLowerCase()] = abiDecoder;\n                      smartContractMap[contract.address.toLowerCase()] = contract.abi;\n                    }\n                  });\n\n                  _logMessage(smartContractMetaTransactionMap);\n\n                  _checkUserLogin(engine, dappId);\n                } else {\n                  if (engine.strictMode) {\n                    engine.status = STATUS.NO_DATA;\n                    eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"No smart contract registered for dappId \".concat(dappId, \" on Mexa Dashboard\")));\n                  } else {\n                    _checkUserLogin(engine, dappId);\n                  }\n                }\n              })[\"catch\"](function (error) {\n                eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n              });\n            });\n\n          case 10:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _checkUserLogin(_x25, _x26) {\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nfunction _checkUserLogin2() {\n  _checkUserLogin2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(engine, dappId) {\n    return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            eventEmitter.emit(EVENTS.SMART_CONTRACT_DATA_READY, dappId, engine);\n\n          case 1:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nBiconomy.prototype.isReady = function () {\n  return this.status === STATUS.BICONOMY_READY;\n};\n\nBiconomy.prototype.getUserAccount = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _getUserAccount(this);\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, this);\n}));\n\nfunction getFetchOptions(method, apiKey) {\n  return {\n    method: method,\n    headers: {\n      \"x-api-key\": apiKey,\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  };\n}\n\nfunction formatMessage(code, message) {\n  return {\n    code: code,\n    message: message\n  };\n}\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nvar scientificToDecimal = function scientificToDecimal(num) {\n  var result;\n  var nsign = Math.sign(num); // remove the sign\n\n  num = Math.abs(num); // if the number is in scientific notation remove it\n\n  if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n    var zero = \"0\",\n        parts = String(num).toLowerCase().split(\"e\"),\n        // split into coeff and exponent\n    e = parts.pop(),\n        // store the exponential part\n    l = Math.abs(e),\n        // get the number of zeros\n    sign = e / l,\n        coeff_array = parts[0].split(\".\");\n\n    if (sign === -1) {\n      l = l - coeff_array[0].length;\n\n      if (l < 0) {\n        num = coeff_array[0].slice(0, l) + \".\" + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : \"\");\n      } else {\n        num = zero + \".\" + new Array(l + 1).join(zero) + coeff_array.join(\"\");\n      }\n    } else {\n      var dec = coeff_array[1];\n      if (dec) l = l - dec.length;\n\n      if (l < 0) {\n        num = coeff_array[0] + dec.slice(0, l) + \".\" + dec.slice(l);\n      } else {\n        num = coeff_array.join(\"\") + new Array(l + 1).join(zero);\n      }\n    }\n  }\n\n  result = nsign < 0 ? \"-\" + num : num;\n  return result.toString();\n};\n\nmodule.exports = Biconomy;","map":{"version":3,"sources":["/home/ivan/Documents/projects/Biconomy-test/new/metatx-standard-playground/example/react-ui/node_modules/@biconomy/mexa/common-js/Biconomy.js"],"names":["_interopRequireDefault","require","_typeof2","_regenerator","_asyncToGenerator2","Promise","ethers","txDecoder","abi","_require","toJSONRPCPayload","_require2","config","RESPONSE_CODES","EVENTS","BICONOMY_RESPONSE_CODES","STATUS","DEFAULT_PAYLOAD_ID","baseURL","JSON_RPC_VERSION","NATIVE_META_TX_URL","nativeMetaTxUrl","PermitClient","ERC20ForwarderClient","_require3","buildForwardTxRequest","getDomainSeperator","_require4","erc20ForwarderAbi","oracleAggregatorAbi","feeManagerAbi","biconomyForwarderAbi","transferHandlerAbi","fetch","decoderMap","smartContractMap","smartContractMetaTransactionMap","biconomyForwarder","events","eventEmitter","EventEmitter","trustedForwarderOverhead","daiPermitOverhead","eip2612PermitOverhead","domainType","forwarderDomainType","metaInfoType","relayerPaymentType","metaTransactionType","forwardRequestType","domainData","name","eip712DomainName","version","eip712SigVersion","verifyingContract","eip712VerifyingContract","daiDomainData","daiDomainName","daiVersion","forwarderDomainData","loginDomainType","loginMessageType","loginDomainData","Biconomy","provider","options","_validate","isBiconomy","status","INIT","apiKey","isLogin","dappAPIMap","strictMode","providerId","readViaContract","READY","BICONOMY_READY","LOGIN_CONFIRMATION","ERROR","BICONOMY_ERROR","pendingLoginTransactions","jsonRPC","messageId","originalProvider","isEthersProviderPresent","canSignMessages","debug","logsEnabled","walletProvider","isEthersProvider","Error","providers","Web3Provider","ethersProvider","_init","proto","Object","getPrototypeOf","keys","getOwnPropertyNames","i","length","key","self","send","payload","cb","_this","id","jsonrpc","method","params","resolve","reject","handleSendTransaction","error","result","response","_createJsonRpcResponse","sendSignedTransaction","request","args","_logMessage","_ref","mark","_callee","jsonRPCPaylod","localResult","wrap","_callee$","_context","prev","next","sent","t0","err","stop","_x","_x2","apply","arguments","sendAsync","prototype","getSignerByAddress","userAddress","getEthersProvider","signer","getSigner","connectUnchecked","getAddress","_callee2","_callee2$","_context2","abrupt","getForwardRequestAndMessageToSign","rawTransaction","tokenAddress","engine","_ref3","_callee3","decodedTx","to","methodInfo","methodName","token","api","metaTxApproach","contractAddr","_error","paramArray","parsedTransaction","account","gasLimit","gasLimitNum","contractABI","_contract$estimateGas","contract","_error2","cost","buildTxResponse","_error3","eip712DataToSign","hashToSign","dataToSign","_error4","_callee3$","_context3","decodeTx","data","value","toLowerCase","decodeMethod","formatMessage","DASHBOARD_DATA_MISMATCH","concat","daiTokenAddress","undefined","SCW","contractAddress","API_NOT_FOUND","push","_getParamValue","utils","parseTransaction","from","parseInt","Contract","JSON","parse","estimateGas","BigNumber","toString","add","toNumber","ERROR_RESPONSE","end","TRUSTED_FORWARDER","ERC20_FORWARDER","erc20ForwarderClient","buildTx","txGas","INVALID_OPERATION","types","EIP712Domain","ERC20ForwardRequest","domain","primaryType","message","soliditySHA3","tokenGasPrice","batchId","batchNonce","deadline","keccak256","eip712Format","personalSignatureFormat","BICONOMY_NOT_INITIALIZED","_x3","_x4","onEvent","type","callback","on","EVENT_NOT_SUPPORTED","isHexString","_x5","_x6","_x7","_sendSignedTransaction","_callee7","signature","signatureType","_error5","_error6","forwardedData","paramArrayForGasCalculation","_contract$estimateGas2","domainSeparator","_data","_i","_data2","relayerPayment","_data3","_error7","_error8","_error9","_error10","_callee7$","_context7","forwardRequest","callDefaultProvider","url","DEFAULT","EIP712_SIGN","apiId","_sendTransaction","DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS","amount","DEFAULT_RELAYER_PAYMENT_AMOUNT","rawTx","hexValue","nonceBatchId","NONCE_BATCH_ID","expiry","EXPIRY","baseGas","BASE_GAS","INVALID_PAYLOAD","stringify","emit","_x8","_x9","_x10","_handleSendTransaction","_callee8","_error11","_error12","signatureFromPayload","_contract$estimateGas3","_error13","signatureEIP712","signaturePersonal","_i2","_data4","_error14","_error15","_error16","_callee8$","_context8","code","WRONG_ABI","gas","SMART_CONTRACT_NOT_FOUND","getSignatureEIP712","getSignaturePersonal","errorMessage","targetProvider","_getEIP712ForwardMessageToSign","_getPersonalForwardMessageToSign","getTargetProvider","promise","_ref4","_callee4","_callee4$","_context4","res","_x11","_x12","_x13","_x14","_getSignaturePersonal","_callee10","req","_callee10$","_context10","_ref8","_callee9","_callee9$","_context9","signMessage","arrayify","_x27","_x28","SMART_CONTRACT_DATA_READY","dappId","getAPIInfoAPI","getFetchOptions","then","json","listApis","apiList","DAPP_API_DATA_READY","HELPER_CLENTS_READY","_ref5","_callee5","biconomyAttributes","signerOrProvider","isSignerWithAccounts","erc20ForwarderAddress","transferHandlerAddress","erc20Forwarder","oracleAggregatorAddress","feeManagerAddress","forwarderAddress","oracleAggregator","feeManager","forwarder","transferHandler","tokenGasPriceV1SupportedNetworks","_callee5$","_context5","signType","PERSONAL_SIGN","permitClient","forwarderClientOptions","networkId","t1","_x15","_getUserAccount","paramObj","match","input","val","j","scientificToDecimal","toHexString","_x16","_x17","_x18","_x19","_x20","_sendTransaction2","_callee11","fetchOption","_callee11$","_context11","body","txHash","flag","ACTION_COMPLETE","SUCCESS","USER_CONTRACT_NOT_FOUND","log","_x21","_x22","_init2","_callee13","getDappAPI","_callee13$","_context13","_ref9","_callee12","dappResponse","dappNetworkId","getNetworkIdOption","providerNetworkId","_callee12$","_context12","dapp","_id","onNetworkId","NETWORK_ID_NOT_FOUND","networkResponse","_providerNetworkId","DAPP_NOT_FOUND","_x29","Provider","isProvider","_x23","_x24","_onNetworkId","_callee14","_ref6","_callee14$","_context14","NETWORK_ID_MISMATCH","chainId","version2","systemInfo","overHeadEIP712Sign","overHeadDaiPermit","overHeadEIP2612Permit","biconomyForwarderAddress","usdtTokenAddress","usdcTokenAddress","trustedForwarderMetaTransaction","erc20ForwarderMetaTransaction","defaultMetaTransaction","eip712Sign","personalSign","relayHubAddress","INVALID_DATA","getDAppInfoAPI","smartContractList","smartContracts","forEach","abiDecoder","addABI","address","_checkUserLogin","NO_DATA","_x25","_x26","_checkUserLogin2","_callee15","_callee15$","_context15","isReady","getUserAccount","_callee6","_callee6$","_context6","headers","console","num","nsign","Math","sign","abs","test","zero","parts","String","split","e","pop","l","coeff_array","slice","Array","join","dec","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar Promise = require(\"promise\");\n\nvar ethers = require(\"ethers\");\n\nvar txDecoder = require(\"ethereum-tx-decoder\");\n\nvar abi = require(\"ethereumjs-abi\");\n\nvar _require = require(\"./util\"),\n    toJSONRPCPayload = _require.toJSONRPCPayload;\n\nvar _require2 = require(\"./config\"),\n    config = _require2.config,\n    RESPONSE_CODES = _require2.RESPONSE_CODES,\n    EVENTS = _require2.EVENTS,\n    BICONOMY_RESPONSE_CODES = _require2.BICONOMY_RESPONSE_CODES,\n    STATUS = _require2.STATUS;\n\nvar DEFAULT_PAYLOAD_ID = \"99999999\";\nvar baseURL = config.baseURL;\nvar JSON_RPC_VERSION = config.JSON_RPC_VERSION;\nvar NATIVE_META_TX_URL = config.nativeMetaTxUrl;\n\nvar PermitClient = require(\"./PermitClient\");\n\nvar ERC20ForwarderClient = require(\"./ERC20ForwarderClient\");\n\nvar _require3 = require(\"./biconomyforwarder\"),\n    buildForwardTxRequest = _require3.buildForwardTxRequest,\n    getDomainSeperator = _require3.getDomainSeperator;\n\nvar _require4 = require(\"./abis\"),\n    erc20ForwarderAbi = _require4.erc20ForwarderAbi,\n    oracleAggregatorAbi = _require4.oracleAggregatorAbi,\n    feeManagerAbi = _require4.feeManagerAbi,\n    biconomyForwarderAbi = _require4.biconomyForwarderAbi,\n    transferHandlerAbi = _require4.transferHandlerAbi;\n\nvar fetch = require(\"node-fetch\");\n\nvar decoderMap = {},\n    smartContractMap = {},\n    // contract addresss -> contract attributes(metaTransactionType)\n// could be contract address -> contract object\nsmartContractMetaTransactionMap = {};\nvar biconomyForwarder;\n\nvar events = require(\"events\");\n\nvar eventEmitter = new events.EventEmitter();\nvar trustedForwarderOverhead;\nvar daiPermitOverhead;\nvar eip2612PermitOverhead;\nvar domainType, forwarderDomainType, metaInfoType, relayerPaymentType, metaTransactionType, forwardRequestType;\nvar domainData = {\n  name: config.eip712DomainName,\n  version: config.eip712SigVersion,\n  verifyingContract: config.eip712VerifyingContract\n};\nvar daiDomainData = {\n  name: config.daiDomainName,\n  version: config.daiVersion\n};\nvar forwarderDomainData; // EIP712 format data for login\n\nvar loginDomainType, loginMessageType, loginDomainData;\n\nfunction Biconomy(provider, options) {\n  _validate(options);\n\n  this.isBiconomy = true;\n  this.status = STATUS.INIT;\n  this.options = options;\n  this.apiKey = options.apiKey;\n  this.isLogin = false;\n  this.dappAPIMap = {};\n  this.strictMode = options.strictMode || false;\n  this.providerId = options.providerId || 0;\n  this.readViaContract = options.readViaContract || false;\n  this.READY = STATUS.BICONOMY_READY;\n  this.LOGIN_CONFIRMATION = EVENTS.LOGIN_CONFIRMATION;\n  this.ERROR = EVENTS.BICONOMY_ERROR;\n  this.pendingLoginTransactions = {};\n  this.jsonRPC = {\n    messageId: 0\n  };\n  this.originalProvider = provider;\n  this.isEthersProviderPresent = false;\n  this.canSignMessages = false;\n\n  if (options.debug) {\n    config.logsEnabled = true;\n  }\n\n  if (options.walletProvider) {\n    if (isEthersProvider(options.walletProvider)) {\n      throw new Error(\"Wallet Provider in options can't be an ethers provider. Please pass the provider you get from your wallet directly.\");\n    }\n\n    this.walletProvider = new ethers.providers.Web3Provider(options.walletProvider);\n  }\n\n  if (provider) {\n    if (isEthersProvider(provider)) {\n      this.ethersProvider = provider;\n      this.isEthersProviderPresent = true;\n    } else {\n      this.ethersProvider = new ethers.providers.Web3Provider(provider);\n    }\n\n    _init(this.apiKey, this);\n\n    var proto = Object.getPrototypeOf(provider);\n    var keys = Object.getOwnPropertyNames(proto);\n\n    for (var i = 0; i < keys.length; i++) {\n      this[keys[i]] = provider[keys[i]];\n    }\n\n    for (var key in provider) {\n      if (!this[key]) {\n        this[key] = provider[key];\n      }\n    }\n\n    var self = this;\n\n    this.send = function (payload, cb) {\n      var _this = this;\n\n      if (typeof payload === \"string\") {\n        // Ethers provider is being used to call methods, so payload is actually method, and cb is params\n        payload = {\n          id: 1,\n          jsonrpc: \"2.0\",\n          method: payload,\n          params: cb\n        };\n      }\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(_this, payload, function (error, result) {\n            var response = _this._createJsonRpcResponse(payload, error, result);\n\n            if (cb && !self.isEthersProviderPresent) {\n              cb(error, response);\n            }\n\n            if (response.error) {\n              reject(response.error);\n            } else {\n              resolve(response.result);\n            }\n          });\n        });\n      } else {\n        if (self.isEthersProviderPresent) {\n          return self.originalProvider.send(payload.method, payload.params);\n        } else {\n          self.originalProvider.send(payload, cb);\n        }\n      }\n    };\n\n    this.request = function (args, cb) {\n      var payload = {\n        method: args.method,\n        params: args.params\n      };\n\n      if (payload.method == \"eth_sendTransaction\") {\n        return new Promise(function (resolve, reject) {\n          handleSendTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else if (payload.method == \"eth_sendRawTransaction\") {\n        return new Promise(function (resolve, reject) {\n          sendSignedTransaction(self, payload, function (error, result) {\n            if (error) {\n              return reject(error);\n            }\n\n            if (result.result) {\n              resolve(result.result);\n\n              _logMessage(result.result);\n            } else {\n              resolve(result);\n\n              _logMessage(result);\n            }\n\n            if (cb) {\n              cb(error, result);\n            }\n          });\n        });\n      } else {\n        if (self.originalProvider.request) {\n          return self.originalProvider.request(args, cb);\n        } else if (self.originalProvider.send) {\n          return new Promise( /*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(resolve, reject) {\n              var jsonRPCPaylod, localResult;\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      jsonRPCPaylod = toJSONRPCPayload(self, payload.method, payload.params);\n\n                      if (!self.isEthersProviderPresent) {\n                        _context.next = 14;\n                        break;\n                      }\n\n                      _context.prev = 2;\n                      _context.next = 5;\n                      return self.originalProvider.send(jsonRPCPaylod.method, jsonRPCPaylod.params);\n\n                    case 5:\n                      localResult = _context.sent;\n                      resolve(localResult);\n                      _context.next = 12;\n                      break;\n\n                    case 9:\n                      _context.prev = 9;\n                      _context.t0 = _context[\"catch\"](2);\n                      reject(_context.t0);\n\n                    case 12:\n                      _context.next = 15;\n                      break;\n\n                    case 14:\n                      self.originalProvider.send(jsonRPCPaylod, function (err, response) {\n                        if (err) {\n                          return reject(err);\n                        }\n\n                        if (response.result) {\n                          resolve(response.result);\n                        } else {\n                          resolve(response);\n                        }\n                      });\n\n                    case 15:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[2, 9]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        } else {\n          return Promise.reject(\"Invalid provider object passed to Biconomy as it doesn't support request or send method\");\n        }\n      }\n    };\n\n    this.sendAsync = this.send;\n  } else {\n    throw new Error(\"Please pass a provider to Biconomy.\");\n  }\n}\n\nBiconomy.prototype.getSignerByAddress = function (userAddress) {\n  var provider = this.getEthersProvider();\n  var signer = provider.getSigner();\n  signer = signer.connectUnchecked();\n  signer.getAddress = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", userAddress);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return signer;\n};\n\nBiconomy.prototype.getEthersProvider = function () {\n  return new ethers.providers.Web3Provider(this);\n};\n\nBiconomy.prototype.getForwardRequestAndMessageToSign = function (rawTransaction, tokenAddress, cb) {\n  var engine = this;\n  return new Promise( /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(resolve, reject) {\n      var decodedTx, to, methodInfo, error, methodName, token, api, metaTxApproach, contractAddr, _error, params, paramArray, i, parsedTransaction, account, gasLimit, gasLimitNum, contractABI, _contract$estimateGas, contract, _error2, request, cost, buildTxResponse, _error3, eip712DataToSign, hashToSign, dataToSign, _error4;\n\n      return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!rawTransaction) {\n                _context3.next = 70;\n                break;\n              }\n\n              decodedTx = txDecoder.decodeTx(rawTransaction);\n\n              if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n                _context3.next = 67;\n                break;\n              }\n\n              to = decodedTx.to.toLowerCase();\n              methodInfo = decodeMethod(to, decodedTx.data);\n\n              if (methodInfo) {\n                _context3.next = 9;\n                break;\n              }\n\n              error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"Smart Contract address registered on dashboard is different than what is sent(\".concat(decodedTx.to, \") in current transaction\"));\n              if (cb) cb(error);\n              return _context3.abrupt(\"return\", reject(error));\n\n            case 9:\n              methodName = methodInfo.name; //token address needs to be passed otherwise fees will be charged in DAI by default, given DAI permit is given\n\n              token = tokenAddress ? tokenAddress : engine.daiTokenAddress;\n\n              _logMessage(tokenAddress);\n\n              api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n              if (!api) {\n                api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n                metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n              } else {\n                contractAddr = api.contractAddress.toLowerCase();\n                metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n              }\n\n              if (api) {\n                _context3.next = 19;\n                break;\n              }\n\n              _logMessage(\"API not found for method \".concat(methodName));\n\n              _error = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"No API found on dashboard for called method \".concat(methodName));\n              if (cb) cb(_error);\n              return _context3.abrupt(\"return\", reject(_error));\n\n            case 19:\n              _logMessage(\"API found\");\n\n              params = methodInfo.params;\n              paramArray = [];\n\n              for (i = 0; i < params.length; i++) {\n                paramArray.push(_getParamValue(params[i]));\n              }\n\n              parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n              account = parsedTransaction.from;\n\n              _logMessage(\"Signer is \".concat(account));\n\n              gasLimit = decodedTx.gasLimit;\n\n              if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n                _context3.next = 38;\n                break;\n              }\n\n              contractABI = smartContractMap[to];\n\n              if (!contractABI) {\n                _context3.next = 36;\n                break;\n              }\n\n              contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n              _context3.next = 33;\n              return (_contract$estimateGas = contract.estimateGas)[methodName].apply(_contract$estimateGas, paramArray.concat([{\n                from: account\n              }]));\n\n            case 33:\n              gasLimit = _context3.sent;\n              // Do not send this value in API call. only meant for txGas\n              gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n              _logMessage(\"Gas limit number \".concat(gasLimitNum));\n\n            case 36:\n              _context3.next = 39;\n              break;\n\n            case 38:\n              gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n            case 39:\n              if (account) {\n                _context3.next = 42;\n                break;\n              }\n\n              _error2 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n              return _context3.abrupt(\"return\", end(_error2));\n\n            case 42:\n              if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n                _context3.next = 48;\n                break;\n              }\n\n              _context3.next = 45;\n              return buildForwardTxRequest(account, to, gasLimitNum, decodedTx.data, biconomyForwarder);\n\n            case 45:\n              request = _context3.sent.request;\n              _context3.next = 58;\n              break;\n\n            case 48:\n              if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n                _context3.next = 55;\n                break;\n              }\n\n              _context3.next = 51;\n              return engine.erc20ForwarderClient.buildTx({\n                userAddress: account,\n                to: to,\n                txGas: gasLimitNum,\n                data: decodedTx.data,\n                token: token\n              });\n\n            case 51:\n              buildTxResponse = _context3.sent;\n\n              if (buildTxResponse) {\n                request = buildTxResponse.request;\n                cost = buildTxResponse.cost;\n              } else {\n                reject(formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Unable to build forwarder request\"));\n              }\n\n              _context3.next = 58;\n              break;\n\n            case 55:\n              _error3 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Smart contract is not registered in the dashboard for this meta transaction approach. Kindly use biconomy.getUserMessageToSign\");\n              if (cb) cb(_error3);\n              return _context3.abrupt(\"return\", reject(_error3));\n\n            case 58:\n              _logMessage(\"Forward Request is: \");\n\n              _logMessage(request);\n\n              eip712DataToSign = {\n                types: {\n                  EIP712Domain: forwarderDomainType,\n                  ERC20ForwardRequest: forwardRequestType\n                },\n                domain: forwarderDomainData,\n                primaryType: \"ERC20ForwardRequest\",\n                message: request\n              };\n              hashToSign = abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n              dataToSign = {\n                eip712Format: eip712DataToSign,\n                personalSignatureFormat: hashToSign,\n                request: request,\n                cost: cost\n              };\n              if (cb) cb(null, dataToSign);\n              return _context3.abrupt(\"return\", resolve(dataToSign));\n\n            case 67:\n              _error4 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n              if (cb) cb(_error4);\n              return _context3.abrupt(\"return\", reject(_error4));\n\n            case 70:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n};\n/**\n * Method used to listen to events emitted from the SDK\n */\n\n\nBiconomy.prototype.onEvent = function (type, callback) {\n  if (type == this.READY || type == this.ERROR || type == this.LOGIN_CONFIRMATION) {\n    eventEmitter.on(type, callback);\n    return this;\n  } else {\n    throw formatMessage(RESPONSE_CODES.EVENT_NOT_SUPPORTED, \"\".concat(type, \" event is not supported.\"));\n  }\n};\n/**\n * Create a JSON RPC response from the given error and result parameter.\n **/\n\n\nBiconomy.prototype._createJsonRpcResponse = function (payload, error, result) {\n  var response = {};\n  response.id = payload.id;\n  response.jsonrpc = JSON_RPC_VERSION;\n\n  if ((!error || error == null) && !result) {\n    response.error = \"Unexpected error has occured. Please contact Biconomy Team\";\n    return response;\n  }\n\n  if (error) {\n    response.error = error;\n  } else if (result && result.error) {\n    response.error = result.error;\n  } else if (ethers.utils.isHexString(result)) {\n    response.result = result;\n  } else {\n    response = result;\n  }\n\n  return response;\n};\n\nfunction decodeMethod(to, data) {\n  if (to && data && decoderMap[to]) {\n    return decoderMap[to].decodeMethod(data);\n  }\n\n  return;\n}\n/**\n * Method used to handle transaction initiated using web3.eth.sendSignedTransaction method\n * It extracts rawTransaction from payload and decode it to get required information like from, to,\n * data, gasLimit to create the payload for biconomy meta transaction API.\n * In case of Native meta transaction, payload just contains rawTransaction\n * In case of contract based meta transaction, payload contains rawTransaction and signature wrapped\n * in a json object.\n *\n * @param {Object} engine Reference to this SDK instance\n * @param {Object} payload Payload data\n * @param {Function} end Callback function with error as first argument\n */\n\n\nfunction sendSignedTransaction(_x5, _x6, _x7) {\n  return _sendSignedTransaction.apply(this, arguments);\n}\n/**\n * Function decodes the parameter in payload and gets the user signature using eth_signTypedData_v3\n * method and send the request to biconomy for processing and call the callback method 'end'\n * with transaction hash.\n *\n * This is an internal function that is called while intercepting eth_sendTransaction RPC method call.\n **/\n\n\nfunction _sendSignedTransaction() {\n  _sendSignedTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(engine, payload, end) {\n    var data, rawTransaction, signature, request, signatureType, decodedTx, to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, _error5, params, paramArray, parsedTransaction, account, _error6, forwardedData, gasLimitNum, gasLimit, paramArrayForGasCalculation, i, contractABI, _contract$estimateGas2, contract, domainSeparator, _data, _i, _data2, relayerPayment, _data3, _error7, _error8, _error9, _error10;\n\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(payload && payload.params[0])) {\n              _context7.next = 98;\n              break;\n            }\n\n            data = payload.params[0];\n\n            // user would need to pass token address as well!\n            // OR they could pass the symbol and engine will provide the address for you..\n            // default is DAI\n            if (typeof data == \"string\") {\n              // Here user send the rawTransaction in the payload directly. Probably the case of native meta transaction\n              // Handle this scenario differently?\n              rawTransaction = data;\n            } else if ((0, _typeof2[\"default\"])(data) == \"object\") {\n              // Here user wrapped raw Transaction in json object along with signature\n              signature = data.signature;\n              rawTransaction = data.rawTransaction;\n              signatureType = data.signatureType;\n              request = data.forwardRequest;\n            }\n\n            if (!rawTransaction) {\n              _context7.next = 93;\n              break;\n            }\n\n            decodedTx = txDecoder.decodeTx(rawTransaction);\n\n            if (!(decodedTx.to && decodedTx.data && decodedTx.value)) {\n              _context7.next = 88;\n              break;\n            }\n\n            to = decodedTx.to.toLowerCase();\n            methodInfo = decodeMethod(to, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            methodInfo = decodeMethod(config.SCW, decodedTx.data);\n\n            if (methodInfo) {\n              _context7.next = 19;\n              break;\n            }\n\n            if (!engine.strictMode) {\n              _context7.next = 16;\n              break;\n            }\n\n            error = formatMessage(RESPONSE_CODES.DASHBOARD_DATA_MISMATCH, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\"));\n            return _context7.abrupt(\"return\", end(error));\n\n          case 16:\n            _logMessage(\"Strict mode is off so falling back to default provider for handling transaction\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No smart contract wallet or smart contract registered on dashboard with address (\".concat(decodedTx.to, \")\")));\n\n          case 19:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined;\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            if (api) {\n              _context7.next = 33;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context7.next = 30;\n              break;\n            }\n\n            _error5 = formatMessage(RESPONSE_CODES.API_NOT_FOUND, \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\"));\n            return _context7.abrupt(\"return\", end(_error5, null));\n\n          case 30:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            if ((0, _typeof2[\"default\"])(data) == \"object\" && data.rawTransaction) {\n              payload.params = [data.rawTransaction];\n            }\n\n            return _context7.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can not sign transactions. Make sure to register method \".concat(methodName, \" on Biconomy Dashboard\")));\n\n          case 33:\n            _logMessage(\"API found\");\n\n            params = methodInfo.params;\n            paramArray = [];\n            parsedTransaction = ethers.utils.parseTransaction(rawTransaction);\n            account = parsedTransaction ? parsedTransaction.from : undefined;\n\n            _logMessage(\"signer is \".concat(account));\n\n            if (account) {\n              _context7.next = 42;\n              break;\n            }\n\n            _error6 = formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Not able to get user account from signed transaction\");\n            return _context7.abrupt(\"return\", end(_error6));\n\n          case 42:\n            gasLimit = decodedTx.gasLimit;\n\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context7.next = 85;\n              break;\n            }\n\n            if (!(metaTxApproach != engine.DEFAULT)) {\n              _context7.next = 74;\n              break;\n            }\n\n            // forwardedData = payload.params[0].data;\n            forwardedData = decodedTx.data;\n            paramArrayForGasCalculation = [];\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n            }\n\n            if (!(!gasLimit || parseInt(gasLimit) == 0)) {\n              _context7.next = 59;\n              break;\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context7.next = 57;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            _context7.next = 54;\n            return (_contract$estimateGas2 = contract.estimateGas)[methodName].apply(_contract$estimateGas2, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 54:\n            gasLimit = _context7.sent;\n            // do not send this value in API call. only meant for txGas\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).add(ethers.BigNumber.from(5000)).toNumber();\n\n            _logMessage(\"gas limit number\" + gasLimitNum);\n\n          case 57:\n            _context7.next = 60;\n            break;\n\n          case 59:\n            gasLimitNum = ethers.BigNumber.from(gasLimit.toString()).toNumber();\n\n          case 60:\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              domainSeparator = getDomainSeperator(forwarderDomainData);\n\n              _logMessage(domainSeparator);\n\n              paramArray.push(domainSeparator);\n            }\n\n            paramArray.push(signature);\n            _data = {};\n            _data.from = account;\n            _data.apiId = api.id;\n            _data.params = paramArray;\n            _data.to = to;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              _data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context7.next = 72;\n            return _sendTransaction(engine, account, api, _data, end);\n\n          case 72:\n            _context7.next = 83;\n            break;\n\n          case 74:\n            for (_i = 0; _i < params.length; _i++) {\n              paramArray.push(_getParamValue(params[_i]));\n            }\n\n            _data2 = {};\n            _data2.from = account;\n            _data2.apiId = api.id;\n            _data2.params = paramArray;\n            _data2.gasLimit = decodedTx.gasLimit.toString(); //verify\n\n            _data2.to = decodedTx.to.toLowerCase();\n            _context7.next = 83;\n            return _sendTransaction(engine, account, api, _data2, end);\n\n          case 83:\n            _context7.next = 86;\n            break;\n\n          case 85:\n            if (signature) {\n              relayerPayment = {};\n              relayerPayment.token = config.DEFAULT_RELAYER_PAYMENT_TOKEN_ADDRESS;\n              relayerPayment.amount = config.DEFAULT_RELAYER_PAYMENT_AMOUNT;\n              _data3 = {};\n              _data3.rawTx = rawTransaction;\n              _data3.signature = signature;\n              _data3.to = to;\n              _data3.from = account;\n              _data3.apiId = api.id;\n              _data3.data = decodedTx.data;\n              _data3.value = ethers.utils.hexValue(decodedTx.value);\n              _data3.gasLimit = decodedTx.gasLimit.toString();\n              _data3.nonceBatchId = config.NONCE_BATCH_ID;\n              _data3.expiry = config.EXPIRY;\n              _data3.baseGas = config.BASE_GAS;\n              _data3.relayerPayment = {\n                token: relayerPayment.token,\n                amount: relayerPayment.amount\n              };\n\n              _sendTransaction(engine, account, api, _data3, end);\n            } else {\n              _error7 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". message and signature are required in param object\"));\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error7);\n              end(_error7);\n            }\n\n          case 86:\n            _context7.next = 91;\n            break;\n\n          case 88:\n            _error8 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Not able to deode the data in rawTransaction using ethereum-tx-decoder. Please check the data sent.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error8);\n            end(_error8);\n\n          case 91:\n            _context7.next = 96;\n            break;\n\n          case 93:\n            _error9 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \".rawTransaction is required in param object\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error9);\n            end(_error9);\n\n          case 96:\n            _context7.next = 101;\n            break;\n\n          case 98:\n            _error10 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload.params[0]), \". Non empty Array expected in params key\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error10);\n            end(_error10);\n\n          case 101:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _sendSignedTransaction.apply(this, arguments);\n}\n\nfunction handleSendTransaction(_x8, _x9, _x10) {\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction _handleSendTransaction() {\n  _handleSendTransaction = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(engine, payload, end) {\n    var to, methodInfo, error, methodName, api, metaTxApproach, contractAddr, gasLimit, signatureType, _error11, account, params, paramArray, _error12, forwardedData, gasLimitNum, signatureFromPayload, paramArrayForGasCalculation, i, contractABI, _contract$estimateGas3, contract, _error13, request, domainSeparator, signatureEIP712, signaturePersonal, data, _i2, _data4, _error14, _error15, _error16;\n\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n\n            _logMessage(\"Handle transaction with payload\");\n\n            _logMessage(payload);\n\n            if (!(payload.params && payload.params[0] && payload.params[0].to)) {\n              _context8.next = 137;\n              break;\n            }\n\n            to = payload.params[0].to.toLowerCase();\n\n            if (!(decoderMap[to] || decoderMap[config.SCW])) {\n              _context8.next = 127;\n              break;\n            }\n\n            methodInfo = decodeMethod(to, payload.params[0].data); // Check if the Smart Contract Wallet is registered on dashboard\n\n            if (!methodInfo) {\n              methodInfo = decodeMethod(config.SCW, payload.params[0].data);\n            }\n\n            if (methodInfo) {\n              _context8.next = 13;\n              break;\n            }\n\n            error = {};\n            error.code = RESPONSE_CODES.WRONG_ABI;\n            error.message = \"Can't decode method information from payload. Make sure you have uploaded correct ABI on Biconomy Dashboard\";\n            return _context8.abrupt(\"return\", end(error, null));\n\n          case 13:\n            methodName = methodInfo.name;\n            api = engine.dappAPIMap[to] ? engine.dappAPIMap[to][methodName] : undefined; // Information we get here is contractAddress, methodName, methodType, ApiId\n\n            if (!api) {\n              api = engine.dappAPIMap[config.SCW] ? engine.dappAPIMap[config.SCW][methodName] : undefined;\n              metaTxApproach = smartContractMetaTransactionMap[config.SCW];\n            } else {\n              contractAddr = api.contractAddress.toLowerCase();\n              metaTxApproach = smartContractMetaTransactionMap[contractAddr];\n            }\n\n            gasLimit = payload.params[0].gas;\n            signatureType = payload.params[0].signatureType;\n\n            _logMessage(payload.params[0]);\n\n            _logMessage(api);\n\n            _logMessage(\"gas limit : \".concat(gasLimit));\n\n            if (api) {\n              _context8.next = 33;\n              break;\n            }\n\n            _logMessage(\"API not found for method \".concat(methodName));\n\n            _logMessage(\"Strict mode \".concat(engine.strictMode));\n\n            if (!engine.strictMode) {\n              _context8.next = 31;\n              break;\n            }\n\n            _error11 = {};\n            _error11.code = RESPONSE_CODES.API_NOT_FOUND;\n            _error11.message = \"Biconomy strict mode is on. No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\");\n            return _context8.abrupt(\"return\", end(_error11, null));\n\n          case 31:\n            _logMessage(\"Falling back to default provider as strict mode is false in biconomy\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"No registered API found for method \".concat(methodName, \". Please register API from developer dashboard.\")));\n\n          case 33:\n            _logMessage(\"API found\");\n\n            _logMessage(\"Getting user account\");\n\n            account = payload.params[0].from;\n\n            if (account) {\n              _context8.next = 38;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", end(\"Not able to get user account\"));\n\n          case 38:\n            _logMessage(\"User account fetched\");\n\n            params = methodInfo.params;\n\n            _logMessage(params);\n\n            paramArray = [];\n\n            if (!(metaTxApproach == engine.ERC20_FORWARDER)) {\n              _context8.next = 46;\n              break;\n            }\n\n            _error12 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"This operation is not allowed for contracts registered on dashboard as \\\"ERC20Forwarder\\\". Use ERC20Forwarder client instead!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error12);\n            return _context8.abrupt(\"return\", end(_error12));\n\n          case 46:\n            if (!(api.url == NATIVE_META_TX_URL)) {\n              _context8.next = 122;\n              break;\n            }\n\n            if (!(metaTxApproach == engine.TRUSTED_FORWARDER)) {\n              _context8.next = 112;\n              break;\n            }\n\n            _logMessage(\"Smart contract is configured to use Trusted Forwarder as meta transaction type\");\n\n            forwardedData = payload.params[0].data;\n            signatureFromPayload = payload.params[0].signature; // Check if gas limit is present, it not calculate gas limit\n\n            paramArrayForGasCalculation = [];\n\n            for (i = 0; i < params.length; i++) {\n              paramArrayForGasCalculation.push(_getParamValue(params[i]));\n            }\n\n            contractABI = smartContractMap[to];\n\n            if (!contractABI) {\n              _context8.next = 62;\n              break;\n            }\n\n            contract = new ethers.Contract(to, JSON.parse(contractABI), engine.ethersProvider);\n            _context8.next = 58;\n            return (_contract$estimateGas3 = contract.estimateGas)[methodName].apply(_contract$estimateGas3, paramArrayForGasCalculation.concat([{\n              from: account\n            }]));\n\n          case 58:\n            gasLimitNum = _context8.sent;\n\n            _logMessage(\"Gas limit calculated for method \".concat(methodName, \" in SDK: \").concat(gasLimitNum));\n\n            _context8.next = 65;\n            break;\n\n          case 62:\n            _error13 = formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Smart contract ABI not found!\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error13);\n            end(_error13);\n\n          case 65:\n            _context8.next = 67;\n            return buildForwardTxRequest(account, to, parseInt(gasLimitNum), //txGas\n            forwardedData, biconomyForwarder);\n\n          case 67:\n            request = _context8.sent.request;\n\n            _logMessage(request);\n\n            paramArray.push(request);\n\n            if (!(signatureType && signatureType == engine.EIP712_SIGN)) {\n              _context8.next = 87;\n              break;\n            }\n\n            domainSeparator = getDomainSeperator(forwarderDomainData);\n\n            _logMessage(\"Domain separator to be used:\");\n\n            _logMessage(domainSeparator);\n\n            paramArray.push(domainSeparator);\n\n            if (!signatureFromPayload) {\n              _context8.next = 80;\n              break;\n            }\n\n            signatureEIP712 = signatureFromPayload;\n\n            _logMessage(\"EIP712 signature from payload is \".concat(signatureEIP712));\n\n            _context8.next = 84;\n            break;\n\n          case 80:\n            _context8.next = 82;\n            return getSignatureEIP712(engine, account, request);\n\n          case 82:\n            signatureEIP712 = _context8.sent;\n\n            _logMessage(\"EIP712 signature is \".concat(signatureEIP712));\n\n          case 84:\n            paramArray.push(signatureEIP712);\n            _context8.next = 101;\n            break;\n\n          case 87:\n            if (!signatureFromPayload) {\n              _context8.next = 92;\n              break;\n            }\n\n            signaturePersonal = signatureFromPayload;\n\n            _logMessage(\"Personal signature from payload is \".concat(signaturePersonal));\n\n            _context8.next = 96;\n            break;\n\n          case 92:\n            _context8.next = 94;\n            return getSignaturePersonal(engine, request);\n\n          case 94:\n            signaturePersonal = _context8.sent;\n\n            _logMessage(\"Personal signature is \".concat(signaturePersonal));\n\n          case 96:\n            if (!signaturePersonal) {\n              _context8.next = 100;\n              break;\n            }\n\n            paramArray.push(signaturePersonal);\n            _context8.next = 101;\n            break;\n\n          case 100:\n            throw new Error(\"Could not get personal signature while processing transaction in Mexa SDK. Please check the providers you have passed to Biconomy\");\n\n          case 101:\n            data = {};\n            data.from = account;\n            data.apiId = api.id;\n            data.params = paramArray;\n            data.to = to;\n            data.gasLimit = gasLimit;\n\n            if (signatureType && signatureType == engine.EIP712_SIGN) {\n              data.signatureType = engine.EIP712_SIGN;\n            }\n\n            _context8.next = 110;\n            return _sendTransaction(engine, account, api, data, end);\n\n          case 110:\n            _context8.next = 120;\n            break;\n\n          case 112:\n            for (_i2 = 0; _i2 < params.length; _i2++) {\n              paramArray.push(_getParamValue(params[_i2]));\n            }\n\n            _data4 = {};\n            _data4.from = account;\n            _data4.apiId = api.id;\n            _data4.params = paramArray;\n            _data4.gasLimit = gasLimit;\n            _data4.to = to;\n\n            _sendTransaction(engine, account, api, _data4, end);\n\n          case 120:\n            _context8.next = 125;\n            break;\n\n          case 122:\n            _error14 = formatMessage(RESPONSE_CODES.INVALID_OPERATION, \"Biconomy smart contract wallets are not supported now. On dashboard, re-register your smart contract methods with \\\"native meta tx\\\" checkbox selected.\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error14);\n            return _context8.abrupt(\"return\", end(_error14));\n\n          case 125:\n            _context8.next = 135;\n            break;\n\n          case 127:\n            if (!engine.strictMode) {\n              _context8.next = 133;\n              break;\n            }\n\n            _error15 = formatMessage(RESPONSE_CODES.BICONOMY_NOT_INITIALIZED, \"Decoders not initialized properly in mexa sdk. Make sure your have smart contracts registered on Mexa Dashboard\");\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error15);\n            end(_error15);\n            _context8.next = 135;\n            break;\n\n          case 133:\n            _logMessage(\"Smart contract not found on dashbaord. Strict mode is off, so falling back to normal transaction mode\");\n\n            return _context8.abrupt(\"return\", callDefaultProvider(engine, payload, end, \"Current provider can't send transactions and smart contract \".concat(to, \" not found on Biconomy Dashbaord\")));\n\n          case 135:\n            _context8.next = 140;\n            break;\n\n          case 137:\n            _error16 = formatMessage(RESPONSE_CODES.INVALID_PAYLOAD, \"Invalid payload data \".concat(JSON.stringify(payload), \". Expecting params key to be an array with first element having a 'to' property\"));\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, _error16);\n            end(_error16);\n\n          case 140:\n            _context8.next = 145;\n            break;\n\n          case 142:\n            _context8.prev = 142;\n            _context8.t0 = _context8[\"catch\"](0);\n            return _context8.abrupt(\"return\", end(_context8.t0));\n\n          case 145:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 142]]);\n  }));\n  return _handleSendTransaction.apply(this, arguments);\n}\n\nfunction callDefaultProvider(engine, payload, callback, errorMessage) {\n  var targetProvider = engine.originalProvider;\n\n  if (targetProvider) {\n    if (!engine.canSignMessages) {\n      throw new Error(errorMessage);\n    } else {\n      if (engine.isEthersProviderPresent) {\n        return engine.originalProvider.send(payload.method, payload.params);\n      } else {\n        return engine.originalProvider.send(payload, callback);\n      }\n    }\n  } else {\n    throw new Error(\"Original provider not present in Biconomy\");\n  }\n}\n\nfunction _getEIP712ForwardMessageToSign(request) {\n  if (!forwarderDomainType || !forwardRequestType || !forwarderDomainData) {\n    throw new Error(\"Biconomy is not properly initialized\");\n  }\n\n  var dataToSign = JSON.stringify({\n    types: {\n      EIP712Domain: forwarderDomainType,\n      ERC20ForwardRequest: forwardRequestType\n    },\n    domain: forwarderDomainData,\n    primaryType: \"ERC20ForwardRequest\",\n    message: request\n  });\n  return dataToSign;\n}\n\nfunction _getPersonalForwardMessageToSign(request) {\n  return abi.soliditySHA3([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]);\n}\n\nfunction getTargetProvider(engine) {\n  var provider;\n\n  if (engine) {\n    provider = engine.originalProvider;\n\n    if (!engine.canSignMessages) {\n      if (!engine.walletProvider) {\n        throw new Error(\"Please pass a provider connected to a wallet that can sign messages in Biconomy options.\");\n      }\n\n      provider = engine.walletProvider;\n    }\n  }\n\n  return provider;\n}\n\nfunction getSignatureEIP712(engine, account, request) {\n  var dataToSign = _getEIP712ForwardMessageToSign(request);\n\n  var targetProvider = getTargetProvider(engine);\n\n  if (!targetProvider) {\n    throw new Error(\"Unable to get provider information passed to Biconomy\");\n  }\n\n  var promise = new Promise( /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(resolve, reject) {\n      var signature;\n      return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!targetProvider) {\n                _context4.next = 18;\n                break;\n              }\n\n              if (!isEthersProvider(targetProvider)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.prev = 2;\n              _context4.next = 5;\n              return targetProvider.send(\"eth_signTypedData_v3\", [account, dataToSign]);\n\n            case 5:\n              signature = _context4.sent;\n              resolve(signature);\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](2);\n              reject(_context4.t0);\n\n            case 12:\n              _context4.next = 16;\n              break;\n\n            case 14:\n              _context4.next = 16;\n              return targetProvider.send({\n                jsonrpc: \"2.0\",\n                id: 999999999999,\n                method: \"eth_signTypedData_v3\",\n                params: [account, dataToSign]\n              }, function (error, res) {\n                if (error) {\n                  reject(error);\n                } else {\n                  resolve(res.result);\n                }\n              });\n\n            case 16:\n              _context4.next = 19;\n              break;\n\n            case 18:\n              reject(\"Could not get signature from the provider passed to Biconomy. Check if you have passed a walletProvider in Biconomy Options.\");\n\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[2, 9]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n  return promise;\n}\n\nfunction getSignaturePersonal(_x13, _x14) {\n  return _getSignaturePersonal.apply(this, arguments);\n} // On getting smart contract data get the API data also\n\n\nfunction _getSignaturePersonal() {\n  _getSignaturePersonal = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee10(engine, req) {\n    var hashToSign, signature, targetProvider, signer, promise;\n    return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            hashToSign = _getPersonalForwardMessageToSign(req);\n\n            if (!(!engine.signer && !engine.walletProvider)) {\n              _context10.next = 3;\n              break;\n            }\n\n            throw new Error(\"Can't sign messages with current provider. Did you forget to pass walletProvider in Biconomy options?\");\n\n          case 3:\n            targetProvider = getTargetProvider(engine);\n\n            if (targetProvider) {\n              _context10.next = 6;\n              break;\n            }\n\n            throw new Error(\"Unable to get provider information passed to Biconomy\");\n\n          case 6:\n            signer = targetProvider.getSigner();\n            promise = new Promise( /*#__PURE__*/function () {\n              var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(resolve, reject) {\n                return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.prev = 0;\n                        _context9.next = 3;\n                        return signer.signMessage(ethers.utils.arrayify(hashToSign));\n\n                      case 3:\n                        signature = _context9.sent;\n                        resolve(signature);\n                        _context9.next = 10;\n                        break;\n\n                      case 7:\n                        _context9.prev = 7;\n                        _context9.t0 = _context9[\"catch\"](0);\n                        reject(_context9.t0);\n\n                      case 10:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, null, [[0, 7]]);\n              }));\n\n              return function (_x27, _x28) {\n                return _ref8.apply(this, arguments);\n              };\n            }());\n            return _context10.abrupt(\"return\", promise);\n\n          case 9:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getSignaturePersonal.apply(this, arguments);\n}\n\neventEmitter.on(EVENTS.SMART_CONTRACT_DATA_READY, function (dappId, engine) {\n  // Get DApp API information from Database\n  var getAPIInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/meta-api\");\n  fetch(getAPIInfoAPI, getFetchOptions(\"GET\", engine.apiKey)).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    if (response && response.listApis) {\n      var apiList = response.listApis;\n\n      for (var i = 0; i < apiList.length; i++) {\n        var contractAddress = apiList[i].contractAddress; // TODO: In case of SCW(Smart Contract Wallet) there'll be no contract address. Save SCW as key in that case.\n\n        if (contractAddress) {\n          if (!engine.dappAPIMap[contractAddress]) {\n            engine.dappAPIMap[contractAddress] = {};\n          }\n\n          engine.dappAPIMap[contractAddress][apiList[i].method] = apiList[i];\n        } else {\n          if (!engine.dappAPIMap[config.SCW]) {\n            engine.dappAPIMap[config.SCW] = {};\n          }\n\n          engine.dappAPIMap[config.SCW][apiList[i].method] = apiList[i];\n        }\n      }\n\n      eventEmitter.emit(EVENTS.DAPP_API_DATA_READY, engine);\n    }\n  })[\"catch\"](function (error) {\n    _logMessage(error);\n  });\n});\neventEmitter.on(EVENTS.HELPER_CLENTS_READY, /*#__PURE__*/function () {\n  var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(engine) {\n    var biconomyAttributes, ethersProvider, signer, signerOrProvider, isSignerWithAccounts, erc20ForwarderAddress, transferHandlerAddress, erc20Forwarder, oracleAggregatorAddress, feeManagerAddress, forwarderAddress, oracleAggregator, feeManager, forwarder, transferHandler, tokenGasPriceV1SupportedNetworks;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            biconomyAttributes = {\n              apiKey: engine.apiKey,\n              dappAPIMap: engine.dappAPIMap,\n              decoderMap: decoderMap,\n              signType: {\n                EIP712_SIGN: engine.EIP712_SIGN,\n                PERSONAL_SIGN: engine.PERSONAL_SIGN\n              }\n            };\n\n            if (engine.isEthersProviderPresent) {\n              ethersProvider = engine.originalProvider;\n            } else {\n              ethersProvider = new ethers.providers.Web3Provider(engine.originalProvider);\n            }\n\n            signer = ethersProvider.getSigner();\n            signerOrProvider = signer;\n            isSignerWithAccounts = true;\n            _context5.prev = 6;\n            _context5.next = 9;\n            return signer.getAddress();\n\n          case 9:\n            engine.canSignMessages = true;\n            _context5.next = 18;\n            break;\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](6);\n\n            _logMessage(\"Given provider does not have accounts information\");\n\n            signerOrProvider = ethersProvider;\n            isSignerWithAccounts = false;\n            engine.canSignMessages = false;\n\n          case 18:\n            erc20ForwarderAddress = engine.options.erc20ForwarderAddress || engine.erc20ForwarderAddress;\n            transferHandlerAddress = engine.options.transferHandlerAddress || engine.transferHandlerAddress;\n\n            if (!erc20ForwarderAddress) {\n              _context5.next = 42;\n              break;\n            }\n\n            erc20Forwarder = new ethers.Contract(erc20ForwarderAddress, erc20ForwarderAbi, signerOrProvider);\n            _context5.next = 24;\n            return erc20Forwarder.oracleAggregator();\n\n          case 24:\n            oracleAggregatorAddress = _context5.sent;\n            _context5.next = 27;\n            return erc20Forwarder.feeManager();\n\n          case 27:\n            feeManagerAddress = _context5.sent;\n            _context5.next = 30;\n            return erc20Forwarder.forwarder();\n\n          case 30:\n            forwarderAddress = _context5.sent;\n            oracleAggregator = new ethers.Contract(oracleAggregatorAddress, oracleAggregatorAbi, signerOrProvider);\n            feeManager = new ethers.Contract(feeManagerAddress, feeManagerAbi, signerOrProvider); //If ERC20 Forwarder Address exits then it would have configured Forwarder \n\n            forwarder = new ethers.Contract(forwarderAddress, biconomyForwarderAbi, signerOrProvider);\n            transferHandler = new ethers.Contract(transferHandlerAddress, transferHandlerAbi, signerOrProvider);\n            tokenGasPriceV1SupportedNetworks = engine.tokenGasPriceV1SupportedNetworks;\n            engine.permitClient = new PermitClient(engine, erc20ForwarderAddress, engine.daiTokenAddress);\n            engine.erc20ForwarderClient = new ERC20ForwarderClient({\n              forwarderClientOptions: biconomyAttributes,\n              networkId: engine.networkId,\n              provider: ethersProvider,\n              forwarderDomainData: forwarderDomainData,\n              forwarderDomainType: forwarderDomainType,\n              erc20Forwarder: erc20Forwarder,\n              transferHandler: transferHandler,\n              forwarder: forwarder,\n              oracleAggregator: oracleAggregator,\n              feeManager: feeManager,\n              isSignerWithAccounts: isSignerWithAccounts,\n              tokenGasPriceV1SupportedNetworks: tokenGasPriceV1SupportedNetworks,\n              trustedForwarderOverhead: trustedForwarderOverhead,\n              daiPermitOverhead: daiPermitOverhead,\n              eip2612PermitOverhead: eip2612PermitOverhead\n            });\n\n            _logMessage(engine.permitClient);\n\n            _logMessage(engine.erc20ForwarderClient);\n\n            _context5.next = 43;\n            break;\n\n          case 42:\n            _logMessage(\"ERC20 Forwarder is not supported for this network\"); //Warning : you would not be able to use ERC20ForwarderClient and PermitClient \n\n\n          case 43:\n            engine.status = STATUS.BICONOMY_READY;\n            eventEmitter.emit(STATUS.BICONOMY_READY);\n            _context5.next = 50;\n            break;\n\n          case 47:\n            _context5.prev = 47;\n            _context5.t1 = _context5[\"catch\"](0);\n\n            _logMessage(_context5.t1);\n\n          case 50:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 47], [6, 12]]);\n  }));\n\n  return function (_x15) {\n    return _ref5.apply(this, arguments);\n  };\n}());\neventEmitter.on(EVENTS.DAPP_API_DATA_READY, function (engine) {\n  eventEmitter.emit(EVENTS.HELPER_CLENTS_READY, engine);\n});\n/**\n * Get user account from current provider using eth_accounts method.\n **/\n\nfunction _getUserAccount(engine, payload, cb) {\n  if (engine) {\n    var id = DEFAULT_PAYLOAD_ID;\n\n    if (payload) {\n      id = payload.id;\n    }\n\n    if (cb) {\n      engine.originalProvider.send({\n        jsonrpc: JSON_RPC_VERSION,\n        id: id,\n        method: \"eth_accounts\",\n        params: []\n      }, function (error, response) {\n        cb(error, response);\n      });\n    } else {\n      return new Promise(function (resolve, reject) {\n        engine.originalProvider.send({\n          jsonrpc: JSON_RPC_VERSION,\n          id: id,\n          method: \"eth_accounts\",\n          params: []\n        }, function (error, res) {\n          if (error) {\n            reject(error);\n          } else if (!res.result) {\n            reject(\"Invalid response \".concat(res));\n          } else {\n            resolve(res.result[0]);\n          }\n        });\n      });\n    }\n  }\n}\n/**\n * Validate parameters passed to biconomy object. Dapp id and api key are mandatory.\n **/\n\n\nfunction _validate(options) {\n  if (!options) {\n    throw new Error(\"Options object needs to be passed to Biconomy Object with apiKey as mandatory key\");\n  }\n\n  if (!options.apiKey) {\n    throw new Error(\"apiKey is required in options object when creating Biconomy object\");\n  }\n}\n/**\n * Get paramter value from param object based on its type.\n **/\n\n\nfunction _getParamValue(paramObj) {\n  var value;\n\n  try {\n    if (paramObj && paramObj.value) {\n      var type = paramObj.type;\n\n      switch (type) {\n        case (type.match(/^uint.*\\[\\]$/) || type.match(/^int.*\\[\\]$/) || {}).input:\n          var val = paramObj.value;\n          value = [];\n\n          for (var j = 0; j < val.length; j++) {\n            value[j] = scientificToDecimal(val[j]);\n            if (value[j]) value[j] = ethers.BigNumber.from(value[j]).toHexString();\n          }\n\n          break;\n\n        case (type.match(/^uint[0-9]*$/) || type.match(/^int[0-9]*$/) || {}).input:\n          value = scientificToDecimal(paramObj.value); //https://docs.ethers.io/v5/api/utils/bignumber/#BigNumber--notes\n\n          if (value) value = ethers.BigNumber.from(value).toHexString();\n          break;\n\n        case \"string\":\n          if ((0, _typeof2[\"default\"])(paramObj.value) === \"object\") {\n            value = paramObj.value.toString();\n          } else {\n            value = paramObj.value;\n          }\n\n          break;\n\n        default:\n          value = paramObj.value;\n          break;\n      }\n    }\n\n    return value;\n  } catch (error) {\n    _logMessage(error);\n\n    throw new Error(\"Error occured while sanitizing paramters. Please verify your method parameters or contact support\");\n  }\n}\n/**\n * Method to send the transaction to biconomy server and call the callback method\n * to pass the result of meta transaction to web3 function call.\n * @param engine Object representing biconomy provider engine\n * @param account User selected account on current wallet\n * @param api API object got from biconomy server\n * @param data Data to be sent to biconomy server having transaction data\n * @param cb Callback method to be called to pass result or send error\n **/\n\n\nfunction _sendTransaction(_x16, _x17, _x18, _x19, _x20) {\n  return _sendTransaction2.apply(this, arguments);\n}\n/**\n * Function to initialize the biconomy object with DApp information.\n * It fetches the dapp's smart contract from biconomy database and initialize the decoders for each smart\n * contract which will be used to decode information during function calls.\n * @param dappId Id for dapp whos information is to be fetched\n * @param apiKey API key used to authenticate the request at biconomy server\n * @param _this object representing biconomy provider\n **/\n\n\nfunction _sendTransaction2() {\n  _sendTransaction2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee11(engine, account, api, data, cb) {\n    var url, fetchOption;\n    return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            if (engine && account && api && data) {\n              url = api.url;\n              fetchOption = getFetchOptions(\"POST\", engine.apiKey);\n              fetchOption.body = JSON.stringify(data);\n              fetch(\"\".concat(baseURL).concat(url), fetchOption).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                _logMessage(result);\n\n                if (!result.txHash && result.flag != BICONOMY_RESPONSE_CODES.ACTION_COMPLETE && result.flag != BICONOMY_RESPONSE_CODES.SUCCESS) {\n                  var error = {};\n                  error.code = result.flag || result.code;\n\n                  if (result.flag == BICONOMY_RESPONSE_CODES.USER_CONTRACT_NOT_FOUND) {\n                    error.code = RESPONSE_CODES.USER_CONTRACT_NOT_FOUND;\n                  }\n\n                  error.message = result.log || result.message;\n                  if (cb) cb(error);\n                } else {\n                  if (cb) cb(null, result.txHash);\n                }\n              })[\"catch\"](function (error) {\n                _logMessage(error);\n\n                if (cb) cb(error);\n              });\n            } else {\n              _logMessage(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data));\n\n              if (cb) cb(\"Invalid arguments, provider: \".concat(engine, \" account: \").concat(account, \" api: \").concat(api, \" data: \").concat(data), null);\n            }\n\n          case 1:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _sendTransaction2.apply(this, arguments);\n}\n\nfunction _init(_x21, _x22) {\n  return _init2.apply(this, arguments);\n}\n\nfunction _init2() {\n  _init2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee13(apiKey, engine) {\n    var getDappAPI;\n    return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return engine.ethersProvider.getSigner();\n\n          case 3:\n            engine.signer = _context13.sent;\n            // Check current network id and dapp network id registered on dashboard\n            getDappAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/dapp\");\n            fetch(getDappAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n              return response.json();\n            }).then( /*#__PURE__*/function () {\n              var _ref9 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee12(dappResponse) {\n                var dappNetworkId, dappId, getNetworkIdOption, providerNetworkId;\n                return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        _logMessage(dappResponse);\n\n                        if (!(dappResponse && dappResponse.dapp)) {\n                          _context12.next = 20;\n                          break;\n                        }\n\n                        dappNetworkId = dappResponse.dapp.networkId;\n                        dappId = dappResponse.dapp._id;\n\n                        _logMessage(\"Network id corresponding to dapp id \".concat(dappId, \" is \").concat(dappNetworkId));\n\n                        getNetworkIdOption = {\n                          jsonrpc: JSON_RPC_VERSION,\n                          id: \"102\",\n                          method: \"net_version\",\n                          params: []\n                        };\n\n                        if (!isEthersProvider(engine.originalProvider)) {\n                          _context12.next = 17;\n                          break;\n                        }\n\n                        _context12.next = 9;\n                        return engine.originalProvider.send(\"net_version\", []);\n\n                      case 9:\n                        providerNetworkId = _context12.sent;\n\n                        if (!providerNetworkId) {\n                          _context12.next = 14;\n                          break;\n                        }\n\n                        onNetworkId(engine, {\n                          providerNetworkId: providerNetworkId,\n                          dappNetworkId: dappNetworkId,\n                          apiKey: apiKey,\n                          dappId: dappId\n                        });\n                        _context12.next = 15;\n                        break;\n\n                      case 14:\n                        return _context12.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), \"Could not get network version\"));\n\n                      case 15:\n                        _context12.next = 18;\n                        break;\n\n                      case 17:\n                        engine.originalProvider.send(getNetworkIdOption, function (error, networkResponse) {\n                          if (error || networkResponse && networkResponse.error) {\n                            return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_NOT_FOUND, \"Could not get network version\"), error || networkResponse.error);\n                          } else {\n                            var _providerNetworkId = networkResponse.result;\n                            onNetworkId(engine, {\n                              providerNetworkId: _providerNetworkId,\n                              dappNetworkId: dappNetworkId,\n                              apiKey: apiKey,\n                              dappId: dappId\n                            });\n                          }\n                        });\n\n                      case 18:\n                        _context12.next = 21;\n                        break;\n\n                      case 20:\n                        if (dappResponse.log) {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, dappResponse.log));\n                        } else {\n                          eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.DAPP_NOT_FOUND, \"No Dapp Registered with apikey \".concat(apiKey)));\n                        }\n\n                      case 21:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n\n              return function (_x29) {\n                return _ref9.apply(this, arguments);\n              };\n            }())[\"catch\"](function (error) {\n              eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n            });\n            _context13.next = 11;\n            break;\n\n          case 8:\n            _context13.prev = 8;\n            _context13.t0 = _context13[\"catch\"](0);\n            eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), _context13.t0);\n\n          case 11:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[0, 8]]);\n  }));\n  return _init2.apply(this, arguments);\n}\n\nfunction isEthersProvider(provider) {\n  return ethers.providers.Provider.isProvider(provider);\n}\n\nfunction onNetworkId(_x23, _x24) {\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _onNetworkId() {\n  _onNetworkId = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee14(engine, _ref6) {\n    var providerNetworkId, dappNetworkId, apiKey, dappId;\n    return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            providerNetworkId = _ref6.providerNetworkId, dappNetworkId = _ref6.dappNetworkId, apiKey = _ref6.apiKey, dappId = _ref6.dappId;\n            engine.networkId = providerNetworkId;\n\n            _logMessage(\"Current provider network id: \".concat(providerNetworkId));\n\n            if (!(providerNetworkId != dappNetworkId)) {\n              _context14.next = 7;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.NETWORK_ID_MISMATCH, \"Current networkId \".concat(providerNetworkId, \" is different from dapp network id registered on mexa dashboard \").concat(dappNetworkId))));\n\n          case 7:\n            domainData.chainId = providerNetworkId;\n            daiDomainData.chainId = providerNetworkId;\n            fetch(\"\".concat(baseURL, \"/api/\").concat(config.version2, \"/meta-tx/systemInfo?networkId=\").concat(providerNetworkId)).then(function (response) {\n              return response.json();\n            }).then(function (systemInfo) {\n              if (systemInfo) {\n                domainType = systemInfo.domainType;\n                forwarderDomainType = systemInfo.forwarderDomainType;\n                metaInfoType = systemInfo.metaInfoType;\n                relayerPaymentType = systemInfo.relayerPaymentType;\n                metaTransactionType = systemInfo.metaTransactionType;\n                loginDomainType = systemInfo.loginDomainType;\n                loginMessageType = systemInfo.loginMessageType;\n                loginDomainData = systemInfo.loginDomainData;\n                forwardRequestType = systemInfo.forwardRequestType;\n                forwarderDomainData = systemInfo.forwarderDomainData;\n                trustedForwarderOverhead = systemInfo.overHeadEIP712Sign;\n                daiPermitOverhead = systemInfo.overHeadDaiPermit;\n                eip2612PermitOverhead = systemInfo.overHeadEIP2612Permit;\n                engine.forwarderAddress = systemInfo.biconomyForwarderAddress;\n                engine.erc20ForwarderAddress = systemInfo.erc20ForwarderAddress;\n                engine.transferHandlerAddress = systemInfo.transferHandlerAddress;\n                engine.daiTokenAddress = systemInfo.daiTokenAddress;\n                engine.usdtTokenAddress = systemInfo.usdtTokenAddress;\n                engine.usdcTokenAddress = systemInfo.usdcTokenAddress;\n                engine.TRUSTED_FORWARDER = systemInfo.trustedForwarderMetaTransaction;\n                engine.ERC20_FORWARDER = systemInfo.erc20ForwarderMetaTransaction;\n                engine.DEFAULT = systemInfo.defaultMetaTransaction;\n                engine.EIP712_SIGN = systemInfo.eip712Sign;\n                engine.PERSONAL_SIGN = systemInfo.personalSign;\n                engine.tokenGasPriceV1SupportedNetworks = systemInfo.tokenGasPriceV1SupportedNetworks;\n                daiDomainData.verifyingContract = engine.daiTokenAddress;\n\n                if (systemInfo.relayHubAddress) {\n                  domainData.verifyingContract = systemInfo.relayHubAddress;\n                }\n              } else {\n                return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.INVALID_DATA, \"Could not get signature types from server. Contact Biconomy Team\"));\n              } // check if Valid trusted forwarder address is present from system info\n\n\n              if (engine.forwarderAddress && engine.forwarderAddress != \"\") {\n                biconomyForwarder = new ethers.Contract(engine.forwarderAddress, biconomyForwarderAbi, engine.ethersProvider);\n              } // Get dapps smart contract data from biconomy servers\n\n\n              var getDAppInfoAPI = \"\".concat(baseURL, \"/api/\").concat(config.version, \"/smart-contract\");\n              fetch(getDAppInfoAPI, getFetchOptions(\"GET\", apiKey)).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                if (!result && result.flag != 143) {\n                  return eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"Error getting smart contract for dappId \".concat(dappId)));\n                }\n\n                var smartContractList = result.smartContracts;\n\n                if (smartContractList && smartContractList.length > 0) {\n                  smartContractList.forEach(function (contract) {\n                    var abiDecoder = require(\"abi-decoder\");\n\n                    if (contract.type === config.SCW) {\n                      smartContractMetaTransactionMap[config.SCW] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[config.SCW] = abiDecoder;\n                      smartContractMap[config.SCW] = contract.abi;\n                    } else {\n                      smartContractMetaTransactionMap[contract.address.toLowerCase()] = contract.metaTransactionType;\n                      abiDecoder.addABI(JSON.parse(contract.abi));\n                      decoderMap[contract.address.toLowerCase()] = abiDecoder;\n                      smartContractMap[contract.address.toLowerCase()] = contract.abi;\n                    }\n                  });\n\n                  _logMessage(smartContractMetaTransactionMap);\n\n                  _checkUserLogin(engine, dappId);\n                } else {\n                  if (engine.strictMode) {\n                    engine.status = STATUS.NO_DATA;\n                    eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.SMART_CONTRACT_NOT_FOUND, \"No smart contract registered for dappId \".concat(dappId, \" on Mexa Dashboard\")));\n                  } else {\n                    _checkUserLogin(engine, dappId);\n                  }\n                }\n              })[\"catch\"](function (error) {\n                eventEmitter.emit(EVENTS.BICONOMY_ERROR, formatMessage(RESPONSE_CODES.ERROR_RESPONSE, \"Error while initializing Biconomy\"), error);\n              });\n            });\n\n          case 10:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _onNetworkId.apply(this, arguments);\n}\n\nfunction _checkUserLogin(_x25, _x26) {\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nfunction _checkUserLogin2() {\n  _checkUserLogin2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee15(engine, dappId) {\n    return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            eventEmitter.emit(EVENTS.SMART_CONTRACT_DATA_READY, dappId, engine);\n\n          case 1:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _checkUserLogin2.apply(this, arguments);\n}\n\nBiconomy.prototype.isReady = function () {\n  return this.status === STATUS.BICONOMY_READY;\n};\n\nBiconomy.prototype.getUserAccount = /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n  return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _getUserAccount(this);\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _callee6, this);\n}));\n\nfunction getFetchOptions(method, apiKey) {\n  return {\n    method: method,\n    headers: {\n      \"x-api-key\": apiKey,\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  };\n}\n\nfunction formatMessage(code, message) {\n  return {\n    code: code,\n    message: message\n  };\n}\n/**\n * Single method to be used for logging purpose.\n *\n * @param {string} message Message to be logged\n */\n\n\nfunction _logMessage(message) {\n  if (config && config.logsEnabled && console.log) {\n    console.log(message);\n  }\n}\n\nvar scientificToDecimal = function scientificToDecimal(num) {\n  var result;\n  var nsign = Math.sign(num); // remove the sign\n\n  num = Math.abs(num); // if the number is in scientific notation remove it\n\n  if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n    var zero = \"0\",\n        parts = String(num).toLowerCase().split(\"e\"),\n        // split into coeff and exponent\n    e = parts.pop(),\n        // store the exponential part\n    l = Math.abs(e),\n        // get the number of zeros\n    sign = e / l,\n        coeff_array = parts[0].split(\".\");\n\n    if (sign === -1) {\n      l = l - coeff_array[0].length;\n\n      if (l < 0) {\n        num = coeff_array[0].slice(0, l) + \".\" + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : \"\");\n      } else {\n        num = zero + \".\" + new Array(l + 1).join(zero) + coeff_array.join(\"\");\n      }\n    } else {\n      var dec = coeff_array[1];\n      if (dec) l = l - dec.length;\n\n      if (l < 0) {\n        num = coeff_array[0] + dec.slice(0, l) + \".\" + dec.slice(l);\n      } else {\n        num = coeff_array.join(\"\") + new Array(l + 1).join(zero);\n      }\n    }\n  }\n\n  result = nsign < 0 ? \"-\" + num : num;\n  return result.toString();\n};\n\nmodule.exports = Biconomy;"]},"metadata":{},"sourceType":"script"}