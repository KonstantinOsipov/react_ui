{"ast":null,"code":"import _regeneratorRuntime from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../App.css\";import Button from\"@material-ui/core/Button\";import{helperAttributes,getDomainSeperator,getDataToSignForPersonalSign,getDataToSignForEIP712,buildForwardTxRequest,getBiconomyForwarderConfig}from'../api-helpers/biconomyForwarderHelpers';import{NotificationContainer,NotificationManager}from\"react-notifications\";import\"react-notifications/lib/notifications.css\";import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import Web3 from\"web3\";import{Biconomy}from\"@biconomy/mexa\";import{makeStyles}from'@material-ui/core/styles';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";var sigUtil=require(\"eth-sig-util\");var config={contract:{address:\"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",abi:[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true}]},apiKey:{test:\"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",prod:\"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"},api:{test:\"https://test-api.biconomy.io\",prod:\"https://api.biconomy.io\"}};var web3,walletWeb3,biconomy;var contract;var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginLeft:theme.spacing(2)}},link:{marginLeft:\"5px\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:'#fff',opacity:'.85!important',background:'#000'}};});function App(){var _this=this;var classes=useStyles();var preventDefault=function preventDefault(event){return event.preventDefault();};var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),backdropOpen=_React$useState2[0],setBackdropOpen=_React$useState2[1];var _React$useState3=React.useState(\" Loading Application ...\"),_React$useState4=_slicedToArray(_React$useState3,2),loadingMessage=_React$useState4[0],setLoadingMessage=_React$useState4[1];var _useState=useState(\"This is a default quote\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"Default Owner Address\"),_useState4=_slicedToArray(_useState3,2),owner=_useState4[0],setOwner=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newQuote=_useState6[0],setNewQuote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedAddress=_useState8[0],setSelectedAddress=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),metaTxEnabled=_useState10[0],setMetaTxEnabled=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),transactionHash=_useState12[0],setTransactionHash=_useState12[1];useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,kovanProvider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof window.ethereum!==\"undefined\"&&window.ethereum.isMetaMask)){_context.next=12;break;}// Ethereum user detected. You can now use the provider.\nprovider=window[\"ethereum\"];_context.next=4;return provider.enable();case 4:kovanProvider=new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");setLoadingMessage(\"Initializing Biconomy ...\");biconomy=new Biconomy(kovanProvider,{walletProvider:window.ethereum,apiKey:config.apiKey.prod,debug:true});// This web3 instance is used to read normally and write to contract via meta transactions.\nweb3=new Web3(biconomy);// This web3 instance is used to get user signature from connected wallet\nwalletWeb3=new Web3(window.ethereum);biconomy.onEvent(biconomy.READY,function(){// Initialize your dapp here like getting user accounts etc\ncontract=new web3.eth.Contract(config.contract.abi,config.contract.address);setSelectedAddress(provider.selectedAddress);getQuoteFromNetwork();provider.on(\"accountsChanged\",function(accounts){setSelectedAddress(accounts[0]);});}).onEvent(biconomy.ERROR,function(error,message){// Handle error while initializing mexa\n});_context.next=13;break;case 12:showErrorMessage(\"Metamask not installed\");case 13:case\"end\":return _context.stop();}}},_callee);}));return _init.apply(this,arguments);}init();},[]);var handleClose=function handleClose(){setBackdropOpen(false);};var handleToggle=function handleToggle(){setBackdropOpen(!backdropOpen);};var onQuoteChange=function onQuoteChange(event){setNewQuote(event.target.value);};var onSubmitWithPrivateKey=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var privateKey,userAddress,txGas,functionSignature,forwarder,forwarderContract,batchNonce,to,gasLimitNum,batchId,request,messageToSign,_web3$eth$accounts$si,signature;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(newQuote!=\"\"&&contract)){_context2.next=29;break;}setTransactionHash(\"\");console.log(\"Sending meta transaction\");privateKey=\"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\";userAddress=\"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";_context2.next=7;return contract.methods.setQuote(newQuote).estimateGas({from:userAddress});case 7:txGas=_context2.sent;functionSignature=contract.methods.setQuote(newQuote).encodeABI();_context2.next=11;return getBiconomyForwarderConfig(42);case 11:forwarder=_context2.sent;forwarderContract=new web3.eth.Contract(forwarder.abi,forwarder.address);_context2.next=15;return forwarderContract.methods.getNonce(userAddress,0).call();case 15:batchNonce=_context2.sent;//const batchId = await forwarderContract.methods.getBatch(userAddress).call();\nconsole.log(batchNonce);to=config.contract.address;gasLimitNum=Number(txGas);batchId=0;_context2.next=22;return buildForwardTxRequest({account:userAddress,to:to,gasLimitNum:gasLimitNum,batchId:batchId,batchNonce:batchNonce,data:functionSignature});case 22:request=_context2.sent;console.log(request);//you do not need domain seperator in case of personal sign\n//const domainSeparator = await getDomainSeperator(42);\n//console.log(domainSeparator);\n//const dataToSign = await getDataToSignForEIP712(request, 42);\n//const sig = sigUtil.signTypedMessage(new Buffer.from(privateKey, 'hex'), { data: dataToSign }, 'V4');\nmessageToSign=getDataToSignForPersonalSign(request,42);_web3$eth$accounts$si=web3.eth.accounts.sign(\"0x\"+messageToSign.toString(\"hex\"),privateKey),signature=_web3$eth$accounts$si.signature;sendTransaction({userAddress:userAddress,request:request,sig:signature,signatureType:biconomy.PERSONAL_SIGN});//notice domain seperator is not passed here         \n_context2.next=30;break;case 29:showErrorMessage(\"Please enter the quote\");case 30:case\"end\":return _context2.stop();}}},_callee2);}));return function onSubmitWithPrivateKey(){return _ref.apply(this,arguments);};}();var onSubmitWithEIP712=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var userAddress,functionSignature,txGas,forwarder,forwarderContract,batchNonce,to,gasLimitNum,batchId,request,domainSeparator,dataToSign;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(newQuote!=\"\"&&contract)){_context3.next=38;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context3.next=34;break;}userAddress=selectedAddress;functionSignature=contract.methods.setQuote(newQuote).encodeABI();debugger;_context3.next=8;return contract.methods.setQuote(newQuote).estimateGas({from:userAddress});case 8:txGas=_context3.sent;_context3.next=11;return getBiconomyForwarderConfig(42);case 11:forwarder=_context3.sent;forwarderContract=new web3.eth.Contract(forwarder.abi,forwarder.address);_context3.next=15;return forwarderContract.methods.getNonce(userAddress,0).call();case 15:batchNonce=_context3.sent;//const batchId = await forwarderContract.methods.getBatch(userAddress).call();\nconsole.log(batchNonce);to=config.contract.address;gasLimitNum=Number(txGas);batchId=0;_context3.next=22;return buildForwardTxRequest({account:userAddress,to:to,gasLimitNum:gasLimitNum,batchId:batchId,batchNonce:batchNonce,data:functionSignature});case 22:request=_context3.sent;console.log(request);//you do not need domain seperator in case of personal sign\n_context3.next=26;return getDomainSeperator(42);case 26:domainSeparator=_context3.sent;console.log(domainSeparator);_context3.next=30;return getDataToSignForEIP712(request,42);case 30:dataToSign=_context3.sent;walletWeb3.currentProvider.send({jsonrpc:\"2.0\",id:999999999999,method:\"eth_signTypedData_v4\",params:[userAddress,dataToSign]},function(error,response){console.info(\"User signature is \".concat(response.result));if(error||response&&response.error){showErrorMessage(\"Could not get user signature\");}else if(response&&response.result){var sig=response.result;sendTransaction({userAddress:userAddress,request:request,domainSeparator:domainSeparator,sig:sig,signatureType:biconomy.EIP712_SIGN});}});_context3.next=36;break;case 34:console.log(\"Sending normal transaction\");contract.methods.setQuote(newQuote).send({from:selectedAddress}).on(\"transactionHash\",function(hash){showInfoMessage(\"Transaction sent to blockchain with hash \".concat(hash));}).once(\"confirmation\",function(confirmationNumber,receipt){setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed\");getQuoteFromNetwork();});case 36:_context3.next=39;break;case 38:showErrorMessage(\"Please enter the quote\");case 39:case\"end\":return _context3.stop();}}},_callee3);}));return function onSubmitWithEIP712(_x){return _ref2.apply(this,arguments);};}();var onSubmitWithPersonal=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event){var userAddress,functionSignature,txGas,forwarder,forwarderContract,batchNonce,to,gasLimitNum,batchId,request,hashToSign,sig;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(newQuote!=\"\"&&contract)){_context4.next=36;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context4.next=32;break;}userAddress=selectedAddress;functionSignature=contract.methods.setQuote(newQuote).encodeABI();debugger;_context4.next=8;return contract.methods.setQuote(newQuote).estimateGas({from:userAddress});case 8:txGas=_context4.sent;_context4.next=11;return getBiconomyForwarderConfig(42);case 11:forwarder=_context4.sent;forwarderContract=new web3.eth.Contract(forwarder.abi,forwarder.address);_context4.next=15;return forwarderContract.methods.getNonce(userAddress,0).call();case 15:batchNonce=_context4.sent;//const batchId = await forwarderContract.methods.getBatch(userAddress).call();\nconsole.log(batchNonce);to=config.contract.address;gasLimitNum=Number(txGas);batchId=0;_context4.next=22;return buildForwardTxRequest({account:userAddress,to:to,gasLimitNum:gasLimitNum,batchId:batchId,batchNonce:batchNonce,data:functionSignature});case 22:request=_context4.sent;console.log(request);//you do not need domain seperator in case of personal sign\n//const domainSeparator = await getDomainSeperator(42);\n//console.log(domainSeparator);\nhashToSign=getDataToSignForPersonalSign(request);_context4.next=27;return walletWeb3.eth.personal.sign(\"0x\"+hashToSign.toString(\"hex\"),userAddress);case 27:sig=_context4.sent;console.log('signature '+sig);sendTransaction({userAddress:userAddress,request:request,sig:sig,signatureType:\"PERSONAL_SIGN\"});_context4.next=34;break;case 32:console.log(\"Sending normal transaction\");contract.methods.setQuote(newQuote).send({from:selectedAddress}).on(\"transactionHash\",function(hash){showInfoMessage(\"Transaction sent to blockchain with hash \".concat(hash));}).once(\"confirmation\",function(confirmationNumber,receipt){setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed\");getQuoteFromNetwork();});case 34:_context4.next=37;break;case 36:showErrorMessage(\"Please enter the quote\");case 37:case\"end\":return _context4.stop();}}},_callee4);}));return function onSubmitWithPersonal(_x2){return _ref3.apply(this,arguments);};}();var getSignatureParameters=function getSignatureParameters(signature){if(!web3.utils.isHexStrict(signature)){throw new Error('Given value \"'.concat(signature,'\" is not a valid hex string.'));}var r=signature.slice(0,66);var s=\"0x\".concat(signature.slice(66,130));var v=\"0x\".concat(signature.slice(130,132));v=web3.utils.hexToNumber(v);if(![27,28].includes(v))v+=27;return{r:r,s:s,v:v};};var getQuoteFromNetwork=function getQuoteFromNetwork(){setLoadingMessage(\"Getting Quote from contact ...\");try{if(web3&&contract){contract.methods.getQuote().call().then(function(result){handleClose();console.log(result);if(result&&result.currentQuote!=undefined&&result.currentOwner!=undefined){if(result.currentQuote==\"\"){showErrorMessage(\"No quotes set on blockchain yet\");}else{setQuote(result.currentQuote);setOwner(result.currentOwner);}}else{showErrorMessage(\"Not able to get quote information from Network\");}});}else{handleClose();}}catch(error){handleClose();console.log(error);}};var showErrorMessage=function showErrorMessage(message){NotificationManager.error(message,\"Error\",5000);};var showSuccessMessage=function showSuccessMessage(message){NotificationManager.success(message,\"Message\",3000);};var showInfoMessage=function showInfoMessage(message){NotificationManager.info(message,\"Info\",3000);};var getTransactionReceiptMined=function getTransactionReceiptMined(txHash,interval){var self=_this;var transactionReceiptAsync=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resolve,reject){var receipt;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return web3.eth.getTransactionReceipt(txHash);case 2:receipt=_context5.sent;if(receipt==null){setTimeout(function(){return transactionReceiptAsync(resolve,reject);},interval?interval:500);}else{resolve(receipt);}case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function transactionReceiptAsync(_x3,_x4){return _ref4.apply(this,arguments);};}();if(typeof txHash===\"string\"){return new Promise(transactionReceiptAsync);}else{throw new Error(\"Invalid Type: \"+txHash);}};var sendTransaction=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref5){var userAddress,request,sig,domainSeparator,signatureType,params;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:userAddress=_ref5.userAddress,request=_ref5.request,sig=_ref5.sig,domainSeparator=_ref5.domainSeparator,signatureType=_ref5.signatureType;if(web3&&contract){if(domainSeparator){params=[request,domainSeparator,sig];}else{params=[request,sig];}try{fetch(\"\".concat(config.api.prod,\"/api/v2/meta-tx/native\"),{method:\"POST\",headers:{\"x-api-key\":config.apiKey.prod,\"Content-Type\":\"application/json;charset=utf-8\"},body:JSON.stringify({to:config.contract.address,apiId:\"34bfa8b9-57e7-4d32-b983-63c3f698cddd\",//apiId: \"ca45b2dc-0279-4952-87cd-bbc584427538\",\nparams:params,from:userAddress,signatureType:signatureType})}).then(function(response){return response.json();}).then(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(result){var receipt;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:console.log(result);showInfoMessage(\"Transaction sent by relayer with hash \".concat(result.txHash));_context6.next=4;return getTransactionReceiptMined(result.txHash,2000);case 4:receipt=_context6.sent;setTransactionHash(result.txHash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 8:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref7.apply(this,arguments);};}()).catch(function(error){console.log(error);});}catch(error){console.log(error);}}case 2:case\"end\":return _context7.stop();}}},_callee7);}));return function sendTransaction(_x5){return _ref6.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"section\",{className:\"top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Library \"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"web3.js\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Meta Transaction\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP-2771\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Signature Type\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP712 Signature\"))),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-wrap mb-style-2\"},/*#__PURE__*/React.createElement(\"blockquote\",{cite:\"http://www.gutenberg.org/ebboks/11\"},/*#__PURE__*/React.createElement(\"p\",null,quote))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-attribution\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-author\"},owner),selectedAddress.toLowerCase()===owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",{className:\"owner\"},\"You are the owner of the quote\"),selectedAddress.toLowerCase()!==owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",null,\"You are not the owner of the quote\"))),/*#__PURE__*/React.createElement(\"section\",null,transactionHash!==\"\"&&/*#__PURE__*/React.createElement(Box,{className:classes.root,mt:2,p:2},/*#__PURE__*/React.createElement(Typography,null,\"Check your transaction hash\",/*#__PURE__*/React.createElement(Link,{href:\"https://kovan.etherscan.io/tx/\".concat(transactionHash),target:\"_blank\",className:classes.link},\"here\")))),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"submit-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"submit-row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your quote\",onChange:onQuoteChange,value:newQuote}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithEIP712},\"Submit EIP712 Signature\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithPersonal},\"Submit Personal Signature\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithPrivateKey,style:{marginLeft:\"10px\"}},\"Submit (using private key)\")))),/*#__PURE__*/React.createElement(Backdrop,{className:classes.backdrop,open:backdropOpen,onClick:handleClose},/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\"}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingLeft:\"10px\"}},loadingMessage)),/*#__PURE__*/React.createElement(NotificationContainer,null));}export default App;","map":{"version":3,"sources":["/home/konstantin/Документы/react-ui-biconomy/react-ui/src/components/Web3_EIP2771_API.js"],"names":["React","useState","useEffect","Button","helperAttributes","getDomainSeperator","getDataToSignForPersonalSign","getDataToSignForEIP712","buildForwardTxRequest","getBiconomyForwarderConfig","NotificationContainer","NotificationManager","Backdrop","CircularProgress","Web3","Biconomy","makeStyles","Link","Typography","Box","sigUtil","require","config","contract","address","abi","apiKey","test","prod","api","web3","walletWeb3","biconomy","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","App","classes","preventDefault","event","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","selectedAddress","setSelectedAddress","metaTxEnabled","setMetaTxEnabled","transactionHash","setTransactionHash","init","window","ethereum","isMetaMask","provider","enable","kovanProvider","providers","HttpProvider","walletProvider","debug","onEvent","READY","eth","Contract","getQuoteFromNetwork","on","accounts","ERROR","error","message","showErrorMessage","handleClose","handleToggle","onQuoteChange","target","value","onSubmitWithPrivateKey","console","log","privateKey","userAddress","methods","estimateGas","from","txGas","functionSignature","encodeABI","forwarder","forwarderContract","getNonce","call","batchNonce","to","gasLimitNum","Number","batchId","account","data","request","messageToSign","sign","toString","signature","sendTransaction","sig","signatureType","PERSONAL_SIGN","onSubmitWithEIP712","domainSeparator","dataToSign","currentProvider","send","jsonrpc","id","method","params","response","info","result","EIP712_SIGN","hash","showInfoMessage","once","confirmationNumber","receipt","showSuccessMessage","onSubmitWithPersonal","hashToSign","personal","getSignatureParameters","utils","isHexStrict","Error","concat","r","slice","s","v","hexToNumber","includes","getQuote","then","currentQuote","undefined","currentOwner","success","getTransactionReceiptMined","txHash","interval","self","transactionReceiptAsync","resolve","reject","getTransactionReceipt","setTimeout","Promise","fetch","headers","body","JSON","stringify","apiId","json","catch","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    helperAttributes,\n    getDomainSeperator,\n    getDataToSignForPersonalSign,\n    getDataToSignForEIP712,\n    buildForwardTxRequest,\n    getBiconomyForwarderConfig\n  } from '../api-helpers/biconomyForwarderHelpers';\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Web3 from \"web3\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nlet sigUtil = require(\"eth-sig-util\");\n\n\nlet config = {\n    contract: {\n        address: \"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",\n        abi: [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"forwarder\", \"type\": \"address\" }], \"name\": \"isTrustedForwarder\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"quote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"trustedForwarder\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [{ \"internalType\": \"string\", \"name\": \"newQuote\", \"type\": \"string\" }], \"name\": \"setQuote\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getQuote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"currentQuote\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"currentOwner\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"versionRecipient\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }]\n    },\n    apiKey: {\n        test: \"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    },\n    api: {\n        test: \"https://test-api.biconomy.io\",\n        prod: \"https://api.biconomy.io\"\n    }\n}\n\nlet web3, walletWeb3, biconomy;\nlet contract;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const preventDefault = (event) => event.preventDefault();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled, setMetaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                let kovanProvider = new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                biconomy = new Biconomy(kovanProvider, {\n                    walletProvider: window.ethereum,\n                    apiKey: config.apiKey.prod,\n                    debug: true\n                });\n\n                // This web3 instance is used to read normally and write to contract via meta transactions.\n                web3 = new Web3(biconomy);\n\n                // This web3 instance is used to get user signature from connected wallet\n                walletWeb3 = new Web3(window.ethereum);\n\n                biconomy.onEvent(biconomy.READY, () => {\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new web3.eth.Contract(\n                        config.contract.abi,\n                        config.contract.address\n                    );\n                    setSelectedAddress(provider.selectedAddress);\n                    getQuoteFromNetwork();\n                    provider.on(\"accountsChanged\", function (accounts) {\n                        setSelectedAddress(accounts[0]);\n                    });\n                }).onEvent(biconomy.ERROR, (error, message) => {\n                    // Handle error while initializing mexa\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n    const handleToggle = () => {\n        setBackdropOpen(!backdropOpen);\n    };\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onSubmitWithPrivateKey = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            console.log(\"Sending meta transaction\");\n            let privateKey =\n              \"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\";\n            let userAddress = \"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";\n            let txGas = await contract.methods\n                  .setQuote(newQuote)\n                  .estimateGas({ from: userAddress });\n\n            let functionSignature = contract.methods\n              .setQuote(newQuote)\n              .encodeABI();\n            let forwarder = await getBiconomyForwarderConfig(42);\n            let forwarderContract = new web3.eth.Contract(\n              forwarder.abi,\n              forwarder.address\n            );\n\n            const batchNonce = await forwarderContract.methods\n              .getNonce(userAddress, 0)\n              .call();\n            //const batchId = await forwarderContract.methods.getBatch(userAddress).call();\n            console.log(batchNonce);\n            const to = config.contract.address;\n            const gasLimitNum = Number(txGas);\n            const batchId = 0;\n            const request = await buildForwardTxRequest({\n              account: userAddress,\n              to,\n              gasLimitNum,\n              batchId,\n              batchNonce,\n              data: functionSignature,\n            });\n            console.log(request);\n\n            //you do not need domain seperator in case of personal sign\n            //const domainSeparator = await getDomainSeperator(42);\n            //console.log(domainSeparator);\n\n            //const dataToSign = await getDataToSignForEIP712(request, 42);\n            //const sig = sigUtil.signTypedMessage(new Buffer.from(privateKey, 'hex'), { data: dataToSign }, 'V4');\n            const messageToSign = getDataToSignForPersonalSign(request, 42);\n            let {signature} = web3.eth.accounts.sign(\"0x\" + messageToSign.toString(\"hex\"), privateKey);\n           \n            sendTransaction({userAddress, request, sig:signature, signatureType:biconomy.PERSONAL_SIGN});  \n            //notice domain seperator is not passed here         \n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    }\n\n    const onSubmitWithEIP712 = async event => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n                let userAddress = selectedAddress;\n\n                let functionSignature = contract.methods\n                  .setQuote(newQuote)\n                  .encodeABI();\n\n                debugger;\n\n                let txGas = await contract.methods\n                  .setQuote(newQuote)\n                  .estimateGas({ from: userAddress });\n\n                let forwarder = await getBiconomyForwarderConfig(42);\n                let forwarderContract = new web3.eth.Contract(\n                  forwarder.abi,\n                  forwarder.address\n                );\n\n                const batchNonce = await forwarderContract.methods\n                  .getNonce(userAddress, 0)\n                  .call();\n                //const batchId = await forwarderContract.methods.getBatch(userAddress).call();\n                console.log(batchNonce);\n                const to = config.contract.address;\n                const gasLimitNum = Number(txGas);\n                const batchId = 0;\n                const request = await buildForwardTxRequest({account:userAddress,to,gasLimitNum,batchId,batchNonce,data:functionSignature});\n                console.log(request);\n\n                //you do not need domain seperator in case of personal sign\n                const domainSeparator = await getDomainSeperator(42);\n                console.log(domainSeparator);\n\n                const dataToSign = await getDataToSignForEIP712(request,42);\n\n                walletWeb3.currentProvider.send(\n                    {\n                        jsonrpc: \"2.0\",\n                        id: 999999999999,\n                        method: \"eth_signTypedData_v4\",\n                        params: [userAddress, dataToSign]\n                    },\n                    function (error, response) {\n                        console.info(`User signature is ${response.result}`);\n                        if (error || (response && response.error)) {\n                            showErrorMessage(\"Could not get user signature\");\n                        } else if (response && response.result) {\n                            let sig = response.result;\n                            sendTransaction({userAddress, request, domainSeparator, sig, signatureType:biconomy.EIP712_SIGN});\n                        }\n                    }\n                );\n\n            } else {\n                console.log(\"Sending normal transaction\");\n                contract.methods\n                    .setQuote(newQuote)\n                    .send({ from: selectedAddress })\n                    .on(\"transactionHash\", function (hash) {\n                        showInfoMessage(`Transaction sent to blockchain with hash ${hash}`);\n                    })\n                    .once(\"confirmation\", function (confirmationNumber, receipt) {\n                        setTransactionHash(receipt.transactionHash);\n                        showSuccessMessage(\"Transaction confirmed\");\n                        getQuoteFromNetwork();\n                    });\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    };\n\n    const onSubmitWithPersonal = async event => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n                let userAddress = selectedAddress;\n\n                let functionSignature = contract.methods\n                  .setQuote(newQuote)\n                  .encodeABI();\n\n                debugger;\n\n                let txGas = await contract.methods\n                  .setQuote(newQuote)\n                  .estimateGas({ from: userAddress });\n\n                let forwarder = await getBiconomyForwarderConfig(42);\n                let forwarderContract = new web3.eth.Contract(\n                  forwarder.abi,\n                  forwarder.address\n                );\n\n                const batchNonce = await forwarderContract.methods\n                  .getNonce(userAddress, 0)\n                  .call();\n                //const batchId = await forwarderContract.methods.getBatch(userAddress).call();\n                console.log(batchNonce);\n                const to = config.contract.address;\n                const gasLimitNum = Number(txGas);\n                const batchId = 0;\n                const request = await buildForwardTxRequest({account:userAddress,to,gasLimitNum,batchId,batchNonce,data:functionSignature});\n                console.log(request);\n\n                //you do not need domain seperator in case of personal sign\n                //const domainSeparator = await getDomainSeperator(42);\n                //console.log(domainSeparator);\n\n                const hashToSign =  getDataToSignForPersonalSign(request);\n\n                const sig = await walletWeb3.eth.personal.sign(\"0x\" + hashToSign.toString(\"hex\"), userAddress);\n\n                console.log('signature ' + sig);\n                sendTransaction({userAddress, request, sig, signatureType:\"PERSONAL_SIGN\"});\n\n            } else {\n                console.log(\"Sending normal transaction\");\n                contract.methods\n                    .setQuote(newQuote)\n                    .send({ from: selectedAddress })\n                    .on(\"transactionHash\", function (hash) {\n                        showInfoMessage(`Transaction sent to blockchain with hash ${hash}`);\n                    })\n                    .once(\"confirmation\", function (confirmationNumber, receipt) {\n                        setTransactionHash(receipt.transactionHash);\n                        showSuccessMessage(\"Transaction confirmed\");\n                        getQuoteFromNetwork();\n                    });\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    };\n\n    const getSignatureParameters = signature => {\n        if (!web3.utils.isHexStrict(signature)) {\n            throw new Error(\n                'Given value \"'.concat(signature, '\" is not a valid hex string.')\n            );\n        }\n        var r = signature.slice(0, 66);\n        var s = \"0x\".concat(signature.slice(66, 130));\n        var v = \"0x\".concat(signature.slice(130, 132));\n        v = web3.utils.hexToNumber(v);\n        if (![27, 28].includes(v)) v += 27;\n        return {\n            r: r,\n            s: s,\n            v: v\n        };\n    };\n\n    const getQuoteFromNetwork = () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        try {\n            if (web3 && contract) {\n                contract.methods\n                    .getQuote()\n                    .call()\n                    .then(function (result) {\n                        handleClose();\n                        console.log(result);\n                        if (\n                            result &&\n                            result.currentQuote != undefined &&\n                            result.currentOwner != undefined\n                        ) {\n                            if (result.currentQuote == \"\") {\n                                showErrorMessage(\"No quotes set on blockchain yet\");\n                            } else {\n                                setQuote(result.currentQuote);\n                                setOwner(result.currentOwner);\n                            }\n                        } else {\n                            showErrorMessage(\"Not able to get quote information from Network\");\n                        }\n                    });\n            } else {\n                handleClose();\n            }\n        } catch (error) {\n            handleClose();\n            console.log(error);\n        }\n    };\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    const getTransactionReceiptMined = (txHash, interval) => {\n        const self = this;\n        const transactionReceiptAsync = async function(resolve, reject) {\n          var receipt = await web3.eth.getTransactionReceipt(txHash);\n          if (receipt == null) {\n              setTimeout(\n                  () => transactionReceiptAsync(resolve, reject),\n                  interval ? interval : 500);\n          } else {\n              resolve(receipt);\n          }\n        };\n    \n        if (typeof txHash === \"string\") {\n            return new Promise(transactionReceiptAsync);\n        } else {\n            throw new Error(\"Invalid Type: \" + txHash);\n        }\n      };\n\n    \n    const sendTransaction = async ({userAddress, request, sig, domainSeparator, signatureType}) => {\n        if (web3 && contract) {\n          let params;\n          if (domainSeparator) {\n            params = [request, domainSeparator, sig];\n          } else {\n            params = [request, sig];\n          }\n          try {\n            fetch(`${config.api.prod}/api/v2/meta-tx/native`, {\n              method: \"POST\",\n              headers: {\n                \"x-api-key\": config.apiKey.prod,\n                \"Content-Type\": \"application/json;charset=utf-8\",\n              },\n              body: JSON.stringify({\n                to: config.contract.address,\n                apiId: \"34bfa8b9-57e7-4d32-b983-63c3f698cddd\",\n                //apiId: \"ca45b2dc-0279-4952-87cd-bbc584427538\",\n                params: params,\n                from: userAddress,\n                signatureType: signatureType\n              }),\n            })\n              .then((response) => response.json())\n              .then(async function (result) {\n                console.log(result);\n                showInfoMessage(\n                  `Transaction sent by relayer with hash ${result.txHash}`\n                );\n\n                let receipt = await getTransactionReceiptMined(\n                  result.txHash,\n                  2000\n                );\n                setTransactionHash(result.txHash);\n                showSuccessMessage(\"Transaction confirmed on chain\");\n                getQuoteFromNetwork();\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          } catch (error) {\n            console.log(error);\n          }\n        }\n    };\n\n    return (\n      <div className=\"App\">\n        <section className=\"top-row\">\n          <div className=\"top-row-item\">\n            <span className=\"label\">Library </span>\n            <span className=\"label-value\">web3.js</span>\n          </div>\n          <div className=\"top-row-item\">\n            <span className=\"label\">Meta Transaction</span>\n            <span className=\"label-value\">EIP-2771</span>\n          </div>\n          <div className=\"top-row-item\">\n            <span className=\"label\">Signature Type</span>\n            <span className=\"label-value\">EIP712 Signature</span>\n          </div>\n        </section>\n        <section className=\"main\">\n          <div className=\"mb-wrap mb-style-2\">\n            <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n              <p>{quote}</p>\n            </blockquote>\n          </div>\n\n          <div className=\"mb-attribution\">\n            <p className=\"mb-author\">{owner}</p>\n            {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n              <cite className=\"owner\">You are the owner of the quote</cite>\n            )}\n            {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n              <cite>You are not the owner of the quote</cite>\n            )}\n          </div>\n        </section>\n        <section>\n          {transactionHash !== \"\" && (\n            <Box className={classes.root} mt={2} p={2}>\n              <Typography>\n                Check your transaction hash\n                <Link\n                  href={`https://kovan.etherscan.io/tx/${transactionHash}`}\n                  target=\"_blank\"\n                  className={classes.link}\n                >\n                  here\n                </Link>\n              </Typography>\n            </Box>\n          )}\n        </section>\n        <section>\n          <div className=\"submit-container\">\n            <div className=\"submit-row\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter your quote\"\n                onChange={onQuoteChange}\n                value={newQuote}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmitWithEIP712}\n              >\n                Submit EIP712 Signature\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmitWithPersonal}\n              >\n                Submit Personal Signature\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={onSubmitWithPrivateKey}\n                style={{ marginLeft: \"10px\" }}\n              >\n                Submit (using private key)\n              </Button>\n            </div>\n          </div>\n        </section>\n        <Backdrop\n          className={classes.backdrop}\n          open={backdropOpen}\n          onClick={handleClose}\n        >\n          <CircularProgress color=\"inherit\" />\n          <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n        </Backdrop>\n        <NotificationContainer />\n      </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}