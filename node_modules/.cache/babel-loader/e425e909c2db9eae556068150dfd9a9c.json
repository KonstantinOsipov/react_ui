{"ast":null,"code":"import _regeneratorRuntime from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../App.css\";import Button from\"@material-ui/core/Button\";import{NotificationContainer,NotificationManager}from\"react-notifications\";import\"react-notifications/lib/notifications.css\";import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import{ethers}from\"ethers\";import{Biconomy}from\"@biconomy/mexa\";import{makeStyles}from'@material-ui/core/styles';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";var sigUtil=require(\"eth-sig-util\");var config={contract:{address:\"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",abi:[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]},apiKey:{test:\"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",prod:\"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"}};var walletProvider,walletSigner;var contract,contractInterface;var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginLeft:theme.spacing(2)}},link:{marginLeft:\"5px\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:'#fff',opacity:'.85!important',background:'#000'}};});var biconomy,userAddress;function App(){var classes=useStyles();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),backdropOpen=_React$useState2[0],setBackdropOpen=_React$useState2[1];var _React$useState3=React.useState(\" Loading Application ...\"),_React$useState4=_slicedToArray(_React$useState3,2),loadingMessage=_React$useState4[0],setLoadingMessage=_React$useState4[1];var _useState=useState(\"This is a default quote\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"Default Owner Address\"),_useState4=_slicedToArray(_useState3,2),owner=_useState4[0],setOwner=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newQuote=_useState6[0],setNewQuote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedAddress=_useState8[0],setSelectedAddress=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,1),metaTxEnabled=_useState10[0];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),transactionHash=_useState12[0],setTransactionHash=_useState12[1];var handleClose=function handleClose(){setBackdropOpen(false);};useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider,jsonRpcProvider;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof window.ethereum!==\"undefined\"&&window.ethereum.isMetaMask)){_context2.next=16;break;}// Ethereum user detected. You can now use the provider.\nprovider=window[\"ethereum\"];_context2.next=4;return provider.enable();case 4:setLoadingMessage(\"Initializing Biconomy ...\");// We're creating biconomy provider linked to your network of choice where your contract is deployed\njsonRpcProvider=new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");biconomy=new Biconomy(jsonRpcProvider,{walletProvider:window.ethereum,apiKey:config.apiKey.prod,debug:true});/*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */walletProvider=new ethers.providers.Web3Provider(window.ethereum);walletSigner=walletProvider.getSigner();_context2.next=11;return walletSigner.getAddress();case 11:userAddress=_context2.sent;setSelectedAddress(userAddress);biconomy.onEvent(biconomy.READY,/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Initialize your dapp here like getting user accounts etc\ncontract=new ethers.Contract(config.contract.address,config.contract.abi,biconomy.getSignerByAddress(userAddress));contractInterface=new ethers.utils.Interface(config.contract.abi);getQuoteFromNetwork();case 3:case\"end\":return _context.stop();}}},_callee);}))).onEvent(biconomy.ERROR,function(error,message){// Handle error while initializing mexa\nconsole.log(message);console.log(error);});_context2.next=17;break;case 16:showErrorMessage(\"Metamask not installed\");case 17:case\"end\":return _context2.stop();}}},_callee2);}));return _init.apply(this,arguments);}init();},[]);var onQuoteChange=function onQuoteChange(event){setNewQuote(event.target.value);};var onSubmitWithEIP712Sign=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var tx,confirmation;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(newQuote!=\"\"&&contract)){_context3.next=22;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context3.next=7;break;}showInfoMessage(\"Getting user signature\");sendTransaction(userAddress,newQuote);_context3.next=20;break;case 7:console.log(\"Sending normal transaction\");_context3.next=10;return contract.setQuote(newQuote);case 10:tx=_context3.sent;console.log(\"Transaction hash : \",tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(tx.hash));_context3.next=15;return tx.wait();case 15:confirmation=_context3.sent;console.log(confirmation);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 20:_context3.next=23;break;case 22:showErrorMessage(\"Please enter the quote\");case 23:case\"end\":return _context3.stop();}}},_callee3);}));return function onSubmitWithEIP712Sign(){return _ref2.apply(this,arguments);};}();var onSubmitWithPrivateKey=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var privateKey,_userAddress,userSigner,functionSignature,rawTx,signedTx,forwardData,signature,data,provider,txHash,receipt,tx,confirmation;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(newQuote!=\"\"&&contract)){_context4.next=54;break;}setTransactionHash(\"\");_context4.prev=2;if(!metaTxEnabled){_context4.next=33;break;}showInfoMessage(\"Getting user signature\");privateKey=\"bf096e6fb9754860c4c99eb336c0579db994a3ef7fb3f7db869ad2f1972fc755\";_userAddress=\"0xf7AB2d00f379167c339691c23B23111eB598B3fb\";userSigner=new ethers.Wallet(privateKey);functionSignature=contractInterface.encodeFunctionData(\"setQuote\",[newQuote]);rawTx={to:config.contract.address,data:functionSignature,from:_userAddress};_context4.next=12;return userSigner.signTransaction(rawTx);case 12:signedTx=_context4.sent;_context4.next=15;return biconomy.getForwardRequestAndMessageToSign(signedTx);case 15:forwardData=_context4.sent;console.log(forwardData);// optionally one can sign using sigUtil\nsignature=sigUtil.signTypedMessage(new Buffer.from(privateKey,'hex'),{data:forwardData.eip712Format},'V3');data={signature:signature,forwardRequest:forwardData.request,rawTransaction:signedTx,signatureType:biconomy.EIP712_SIGN};provider=biconomy.getEthersProvider();// send signed transaction with ethers\n// promise resolves to transaction hash                  \n_context4.next=22;return provider.send(\"eth_sendRawTransaction\",[data]);case 22:txHash=_context4.sent;showInfoMessage(\"Transaction sent. Waiting for confirmation ..\");_context4.next=26;return provider.waitForTransaction(txHash);case 26:receipt=_context4.sent;setTransactionHash(txHash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();console.log(receipt);_context4.next=46;break;case 33:console.log(\"Sending normal transaction\");_context4.next=36;return contract.setQuote(newQuote);case 36:tx=_context4.sent;console.log(\"Transaction hash : \",tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(tx.hash));_context4.next=41;return tx.wait();case 41:confirmation=_context4.sent;console.log(confirmation);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 46:_context4.next=52;break;case 48:_context4.prev=48;_context4.t0=_context4[\"catch\"](2);console.log(_context4.t0);handleClose();case 52:_context4.next=55;break;case 54:showErrorMessage(\"Please enter the quote\");case 55:case\"end\":return _context4.stop();}}},_callee4,null,[[2,48]]);}));return function onSubmitWithPrivateKey(){return _ref3.apply(this,arguments);};}();var getQuoteFromNetwork=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:setLoadingMessage(\"Getting Quote from contact ...\");_context5.next=3;return contract.getQuote();case 3:result=_context5.sent;if(result&&result.currentQuote!=undefined&&result.currentOwner!=undefined){if(result.currentQuote==\"\"){showErrorMessage(\"No quotes set on blockchain yet\");}else{setQuote(result.currentQuote);setOwner(result.currentOwner);}}else{showErrorMessage(\"Not able to get quote information from Network\");}handleClose();case 6:case\"end\":return _context5.stop();}}},_callee5);}));return function getQuoteFromNetwork(){return _ref4.apply(this,arguments);};}();var showErrorMessage=function showErrorMessage(message){NotificationManager.error(message,\"Error\",5000);};var showSuccessMessage=function showSuccessMessage(message){NotificationManager.success(message,\"Message\",3000);};var showInfoMessage=function showInfoMessage(message){NotificationManager.info(message,\"Info\",3000);};var sendTransaction=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userAddress,arg){var _yield$contract$popul,data,provider,gasLimit,txParams,tx;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!contract){_context6.next=30;break;}_context6.prev=1;_context6.next=4;return contract.populateTransaction.setQuote(arg);case 4:_yield$contract$popul=_context6.sent;data=_yield$contract$popul.data;provider=biconomy.getEthersProvider();_context6.next=9;return provider.estimateGas({to:config.contract.address,from:userAddress,data:data});case 9:gasLimit=_context6.sent;console.log(\"Gas limit : \",gasLimit);txParams={data:data,to:config.contract.address,from:userAddress,gasLimit:gasLimit,signatureType:\"EIP712_SIGN\"};_context6.prev=12;_context6.next=15;return provider.send(\"eth_sendTransaction\",[txParams]);case 15:tx=_context6.sent;_context6.next=22;break;case 18:_context6.prev=18;_context6.t0=_context6[\"catch\"](12);console.log(\"handle errors like signature denied here\");console.log(_context6.t0);case 22:console.log(\"Transaction hash : \",tx);showInfoMessage(\"Transaction sent. Waiting for confirmation ..\");//event emitter methods\nprovider.once(tx,function(transaction){// Emitted when the transaction has been mined\nshowSuccessMessage(\"Transaction confirmed on chain\");console.log(transaction);setTransactionHash(tx);getQuoteFromNetwork();});_context6.next=30;break;case 27:_context6.prev=27;_context6.t1=_context6[\"catch\"](1);console.log(_context6.t1);case 30:case\"end\":return _context6.stop();}}},_callee6,null,[[1,27],[12,18]]);}));return function sendTransaction(_x,_x2){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"section\",{className:\"top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Library \"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"ethers.js\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Meta Transaction\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP-2771\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Signature Type\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP-712 Signature\"))),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-wrap mb-style-2\"},/*#__PURE__*/React.createElement(\"blockquote\",{cite:\"http://www.gutenberg.org/ebboks/11\"},/*#__PURE__*/React.createElement(\"p\",null,quote))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-attribution\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-author\"},owner),selectedAddress.toLowerCase()===owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",{className:\"owner\"},\"You are the owner of the quote\"),selectedAddress.toLowerCase()!==owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",null,\"You are not the owner of the quote\"))),/*#__PURE__*/React.createElement(\"section\",null,transactionHash!==\"\"&&/*#__PURE__*/React.createElement(Box,{className:classes.root,mt:2,p:2},/*#__PURE__*/React.createElement(Typography,null,\"Check your transaction hash\",/*#__PURE__*/React.createElement(Link,{href:\"https://kovan.etherscan.io/tx/\".concat(transactionHash),target:\"_blank\",className:classes.link},\"here\")))),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"submit-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"submit-row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your quote\",onChange:onQuoteChange,value:newQuote}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithEIP712Sign,style:{marginLeft:\"10px\"}},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:onSubmitWithPrivateKey,style:{marginLeft:\"10px\"}},\"Submit (Private Key)\")))),/*#__PURE__*/React.createElement(Backdrop,{className:classes.backdrop,open:backdropOpen,onClick:handleClose},/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\"}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingLeft:\"10px\"}},loadingMessage)),/*#__PURE__*/React.createElement(NotificationContainer,null));}export default App;","map":{"version":3,"sources":["/home/konstantin/Документы/react-ui-biconomy/react-ui/src/components/Ethers_EIP2771_EIP712Sign.js"],"names":["React","useState","useEffect","Button","NotificationContainer","NotificationManager","Backdrop","CircularProgress","ethers","Biconomy","makeStyles","Link","Typography","Box","sigUtil","require","config","contract","address","abi","apiKey","test","prod","walletProvider","walletSigner","contractInterface","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","biconomy","userAddress","App","classes","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","selectedAddress","setSelectedAddress","metaTxEnabled","transactionHash","setTransactionHash","handleClose","init","window","ethereum","isMetaMask","provider","enable","jsonRpcProvider","providers","JsonRpcProvider","debug","Web3Provider","getSigner","getAddress","onEvent","READY","Contract","getSignerByAddress","utils","Interface","getQuoteFromNetwork","ERROR","error","message","console","log","showErrorMessage","onQuoteChange","event","target","value","onSubmitWithEIP712Sign","showInfoMessage","sendTransaction","tx","hash","wait","confirmation","showSuccessMessage","onSubmitWithPrivateKey","privateKey","userSigner","Wallet","functionSignature","encodeFunctionData","rawTx","to","data","from","signTransaction","signedTx","getForwardRequestAndMessageToSign","forwardData","signature","signTypedMessage","Buffer","eip712Format","forwardRequest","request","rawTransaction","signatureType","EIP712_SIGN","getEthersProvider","send","txHash","waitForTransaction","receipt","getQuote","result","currentQuote","undefined","currentOwner","success","info","arg","populateTransaction","estimateGas","gasLimit","txParams","once","transaction","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { ethers } from \"ethers\";\nimport { Biconomy } from \"@biconomy/mexa\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nlet sigUtil = require(\"eth-sig-util\");\n\nlet config = {\n    contract: {\n        address: \"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",\n        abi: [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_forwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n    },\n    apiKey: {\n        test: \"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    }\n}\n\nlet walletProvider, walletSigner;\nlet contract, contractInterface;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nlet biconomy, userAddress;\n\nfunction App() {\n    const classes = useStyles();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                // We're creating biconomy provider linked to your network of choice where your contract is deployed\n                let jsonRpcProvider = new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                biconomy = new Biconomy(jsonRpcProvider, {\n                    walletProvider: window.ethereum,\n                    apiKey: config.apiKey.prod,\n                    debug: true\n                });\n\n                /*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */\n                walletProvider = new ethers.providers.Web3Provider(window.ethereum);\n                walletSigner = walletProvider.getSigner();\n\n                userAddress = await walletSigner.getAddress()\n                setSelectedAddress(userAddress);\n\n                biconomy.onEvent(biconomy.READY, async () => {\n\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new ethers.Contract(\n                        config.contract.address,\n                        config.contract.abi,\n                        biconomy.getSignerByAddress(userAddress)\n                    );\n\n                    contractInterface = new ethers.utils.Interface(config.contract.abi);\n                    getQuoteFromNetwork();\n                }).onEvent(biconomy.ERROR, (error, message) => {\n                    // Handle error while initializing mexa\n                    console.log(message);\n                    console.log(error);\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onSubmitWithEIP712Sign = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n                showInfoMessage(`Getting user signature`);\n                sendTransaction(userAddress, newQuote);\n            } else {\n                console.log(\"Sending normal transaction\");\n                let tx = await contract.setQuote(newQuote);\n                console.log(\"Transaction hash : \", tx.hash);\n                showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n                let confirmation = await tx.wait();\n                console.log(confirmation);\n                setTransactionHash(tx.hash);\n\n                showSuccessMessage(\"Transaction confirmed on chain\");\n                getQuoteFromNetwork();\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    };\n\n    const onSubmitWithPrivateKey = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            try {\n                if (metaTxEnabled) {\n                    showInfoMessage(`Getting user signature`);\n                    let privateKey = \"bf096e6fb9754860c4c99eb336c0579db994a3ef7fb3f7db869ad2f1972fc755\";\n                    let userAddress = \"0xf7AB2d00f379167c339691c23B23111eB598B3fb\";\n                    let userSigner = new ethers.Wallet(privateKey);\n                    let functionSignature = contractInterface.encodeFunctionData(\"setQuote\", [newQuote]);\n\n                    let rawTx = {\n                        to: config.contract.address,\n                        data: functionSignature,\n                        from: userAddress\n                    };\n\n                    let signedTx = await userSigner.signTransaction(rawTx);\n                    // should get user message to sign for EIP712 or personal signature types\n                    const forwardData = await biconomy.getForwardRequestAndMessageToSign(signedTx);\n                    console.log(forwardData);\n\n                    // optionally one can sign using sigUtil\n                    const signature = sigUtil.signTypedMessage(new Buffer.from(privateKey, 'hex'), { data: forwardData.eip712Format }, 'V3');\n\n                    let data = {\n                        signature: signature,\n                        forwardRequest: forwardData.request,\n                        rawTransaction: signedTx,\n                        signatureType: biconomy.EIP712_SIGN,\n                    };\n\n                    let provider = biconomy.getEthersProvider();\n                    // send signed transaction with ethers\n                    // promise resolves to transaction hash                  \n                    let txHash = await provider.send(\"eth_sendRawTransaction\", [data]);\n                    showInfoMessage(`Transaction sent. Waiting for confirmation ..`)\n                    let receipt = await provider.waitForTransaction(txHash);\n                    setTransactionHash(txHash);\n                    showSuccessMessage(\"Transaction confirmed on chain\");\n                    getQuoteFromNetwork();\n                    console.log(receipt);\n                } else {\n                    console.log(\"Sending normal transaction\");\n                    let tx = await contract.setQuote(newQuote);\n                    console.log(\"Transaction hash : \", tx.hash);\n                    showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n                    let confirmation = await tx.wait();\n                    console.log(confirmation);\n                    setTransactionHash(tx.hash);\n\n                    showSuccessMessage(\"Transaction confirmed on chain\");\n                    getQuoteFromNetwork();\n                }\n            } catch (error) {\n                console.log(error);\n                handleClose();\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    }\n\n    const getQuoteFromNetwork = async () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        let result = await contract.getQuote();\n        if (\n            result &&\n            result.currentQuote != undefined &&\n            result.currentOwner != undefined\n        ) {\n            if (result.currentQuote == \"\") {\n                showErrorMessage(\"No quotes set on blockchain yet\");\n            } else {\n                setQuote(result.currentQuote);\n                setOwner(result.currentOwner);\n            }\n        } else {\n            showErrorMessage(\"Not able to get quote information from Network\");\n        }\n        handleClose();\n    };\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    const sendTransaction = async (userAddress, arg) => {\n        if (contract) {\n            try {\n                let { data } = await contract.populateTransaction.setQuote(arg);\n                let provider = biconomy.getEthersProvider();\n                let gasLimit = await provider.estimateGas({\n                    to: config.contract.address,\n                    from: userAddress,\n                    data: data\n                });\n                console.log(\"Gas limit : \", gasLimit);\n                let txParams = {\n                    data: data,\n                    to: config.contract.address,\n                    from: userAddress,\n                    gasLimit: gasLimit,\n                    signatureType: \"EIP712_SIGN\"\n                };\n                let tx;\n                try {\n                    tx = await provider.send(\"eth_sendTransaction\", [txParams])\n                }\n                catch (err) {\n                    console.log(\"handle errors like signature denied here\");\n                    console.log(err);\n                }\n\n                console.log(\"Transaction hash : \", tx);\n                showInfoMessage(`Transaction sent. Waiting for confirmation ..`)\n\n                //event emitter methods\n                provider.once(tx, (transaction) => {\n                    // Emitted when the transaction has been mined\n                    showSuccessMessage(\"Transaction confirmed on chain\");\n                    console.log(transaction);\n                    setTransactionHash(tx);\n                    getQuoteFromNetwork();\n                })\n\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <section className=\"top-row\">\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Library </span>\n                    <span className=\"label-value\">ethers.js</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Meta Transaction</span>\n                    <span className=\"label-value\">EIP-2771</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Signature Type</span>\n                    <span className=\"label-value\">EIP-712 Signature</span>\n                </div>\n            </section>\n            <section className=\"main\">\n                <div className=\"mb-wrap mb-style-2\">\n                    <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n                        <p>{quote}</p>\n                    </blockquote>\n                </div>\n\n                <div className=\"mb-attribution\">\n                    <p className=\"mb-author\">{owner}</p>\n                    {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n                        <cite className=\"owner\">You are the owner of the quote</cite>\n                    )}\n                    {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n                        <cite>You are not the owner of the quote</cite>\n                    )}\n                </div>\n            </section>\n            <section>\n                {transactionHash !== \"\" && <Box className={classes.root} mt={2} p={2}>\n                    <Typography>\n                        Check your transaction hash\n            <Link href={`https://kovan.etherscan.io/tx/${transactionHash}`} target=\"_blank\"\n                            className={classes.link}>\n                            here\n            </Link>\n                    </Typography>\n                </Box>}\n            </section>\n            <section>\n                <div className=\"submit-container\">\n                    <div className=\"submit-row\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter your quote\"\n                            onChange={onQuoteChange}\n                            value={newQuote}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitWithEIP712Sign} style={{ marginLeft: \"10px\" }}>\n                            Submit\n            </Button>\n\n                        <Button variant=\"contained\" color=\"secondary\" onClick={onSubmitWithPrivateKey} style={{ marginLeft: \"10px\" }}>\n                            Submit (Private Key)\n            </Button>\n                    </div>\n                </div>\n            </section>\n            <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleClose}>\n                <CircularProgress color=\"inherit\" />\n                <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n            </Backdrop>\n            <NotificationContainer />\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}