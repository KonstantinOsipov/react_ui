{"ast":null,"code":"import _regeneratorRuntime from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../App.css\";import Button from\"@material-ui/core/Button\";import{NotificationContainer,NotificationManager}from\"react-notifications\";import\"react-notifications/lib/notifications.css\";import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import{ethers}from\"ethers\";import{Biconomy}from\"@biconomy/mexa\";import{makeStyles}from'@material-ui/core/styles';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";import{toBuffer}from\"ethereumjs-util\";var sigUtil=require(\"eth-sig-util\");var abi=require('ethereumjs-abi');var config={contract:{address:\"0x1E1c36546F6ddD71e8e6aEDf135B82F7EEaA08b9\",abi:[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"addresspayable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]},apiKey:{test:\"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",prod:\"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"}};var salt=42;var walletProvider,walletSigner,ethersProvider;var contract,contractInterface;var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginLeft:theme.spacing(2)}},link:{marginLeft:\"5px\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:'#fff',opacity:'.85!important',background:'#000'}};});var biconomy;function App(){var classes=useStyles();var preventDefault=function preventDefault(event){return event.preventDefault();};var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),backdropOpen=_React$useState2[0],setBackdropOpen=_React$useState2[1];var _React$useState3=React.useState(\" Loading Application ...\"),_React$useState4=_slicedToArray(_React$useState3,2),loadingMessage=_React$useState4[0],setLoadingMessage=_React$useState4[1];var _useState=useState(\"This is a default quote\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"Default Owner Address\"),_useState4=_slicedToArray(_useState3,2),owner=_useState4[0],setOwner=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newQuote=_useState6[0],setNewQuote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedAddress=_useState8[0],setSelectedAddress=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),metaTxEnabled=_useState10[0],setMetaTxEnabled=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),transactionHash=_useState12[0],setTransactionHash=_useState12[1];var handleClose=function handleClose(){setBackdropOpen(false);};var handleToggle=function handleToggle(){setBackdropOpen(!backdropOpen);};useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider,jsonRpcProvider,userAddress;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof window.ethereum!==\"undefined\"&&window.ethereum.isMetaMask)){_context2.next=17;break;}// Ethereum user detected. You can now use the provider.\nprovider=window[\"ethereum\"];_context2.next=4;return provider.enable();case 4:setLoadingMessage(\"Initializing Biconomy ...\");// We're creating biconomy provider linked to your network of choice where your contract is deployed\njsonRpcProvider=new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");biconomy=new Biconomy(jsonRpcProvider,{walletProvider:window.ethereum,apiKey:config.apiKey.prod,debug:true});/*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */ethersProvider=new ethers.providers.Web3Provider(biconomy);walletProvider=new ethers.providers.Web3Provider(window.ethereum);walletSigner=walletProvider.getSigner();_context2.next=12;return walletSigner.getAddress();case 12:userAddress=_context2.sent;setSelectedAddress(userAddress);biconomy.onEvent(biconomy.READY,/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Initialize your dapp here like getting user accounts etc\ncontract=new ethers.Contract(config.contract.address,config.contract.abi,biconomy.getSignerByAddress(userAddress));contractInterface=new ethers.utils.Interface(config.contract.abi);getQuoteFromNetwork();case 3:case\"end\":return _context.stop();}}},_callee);}))).onEvent(biconomy.ERROR,function(error,message){// Handle error while initializing mexa\nconsole.log(message);console.log(error);});_context2.next=18;break;case 17:showErrorMessage(\"Metamask not installed\");case 18:case\"end\":return _context2.stop();}}},_callee2);}));return _init.apply(this,arguments);}init();},[]);var onQuoteChange=function onQuoteChange(event){setNewQuote(event.target.value);};var onSubmitWithPersonalSign=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var userAddress,nonce,functionSignature,messageToSign,signature,_getSignatureParamete,r,s,v,tx,confirmation;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(newQuote!=\"\"&&contract)){_context3.next=33;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context3.next=18;break;}showInfoMessage(\"Getting user signature\");userAddress=selectedAddress;_context3.next=7;return contract.getNonce(userAddress);case 7:nonce=_context3.sent;functionSignature=contractInterface.encodeFunctionData(\"setQuote\",[newQuote]);messageToSign=constructMetaTransactionMessage(nonce.toNumber(),salt,functionSignature,config.contract.address);_context3.next=12;return walletSigner.signMessage(messageToSign);case 12:signature=_context3.sent;console.info(\"User signature is \".concat(signature));_getSignatureParamete=getSignatureParameters(signature),r=_getSignatureParamete.r,s=_getSignatureParamete.s,v=_getSignatureParamete.v;sendSignedTransaction(userAddress,functionSignature,r,s,v);_context3.next=31;break;case 18:console.log(\"Sending normal transaction\");_context3.next=21;return contract.setQuote(newQuote);case 21:tx=_context3.sent;console.log(\"Transaction hash : \",tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(tx.hash));_context3.next=26;return tx.wait();case 26:confirmation=_context3.sent;console.log(confirmation);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 31:_context3.next=34;break;case 33:showErrorMessage(\"Please enter the quote\");case 34:case\"end\":return _context3.stop();}}},_callee3);}));return function onSubmitWithPersonalSign(_x){return _ref2.apply(this,arguments);};}();var constructMetaTransactionMessage=function constructMetaTransactionMessage(nonce,salt,functionSignature,contractAddress){return abi.soliditySHA3([\"uint256\",\"address\",\"uint256\",\"bytes\"],[nonce,contractAddress,salt,toBuffer(functionSignature)]);};var onSubmitWithPrivateKey=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event){var wallet,userAddress,nonce,functionSignature,messageToSign,signature,_getSignatureParamete2,r,s,v,rawTx,tx,_transactionHash,receipt,_receipt,_tx,confirmation;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!(newQuote!=\"\"&&contract)){_context4.next=65;break;}setTransactionHash(\"\");_context4.prev=2;if(!metaTxEnabled){_context4.next=44;break;}showInfoMessage(\"Getting user signature\");wallet=new ethers.Wallet(\"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\");userAddress=\"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";_context4.next=9;return contract.getNonce(userAddress);case 9:nonce=_context4.sent;functionSignature=contractInterface.encodeFunctionData(\"setQuote\",[newQuote]);messageToSign=constructMetaTransactionMessage(nonce.toNumber(),salt,functionSignature,config.contract.address);_context4.next=14;return wallet.signMessage(messageToSign);case 14:signature=_context4.sent;console.info(\"User signature is \".concat(signature));_getSignatureParamete2=getSignatureParameters(signature),r=_getSignatureParamete2.r,s=_getSignatureParamete2.s,v=_getSignatureParamete2.v;rawTx={to:config.contract.address,data:contractInterface.encodeFunctionData(\"executeMetaTransaction\",[userAddress,functionSignature,r,s,v]),from:userAddress};_context4.next=20;return wallet.signTransaction(rawTx);case 20:tx=_context4.sent;_context4.prev=21;_context4.next=24;return ethersProvider.sendTransaction(tx);case 24:receipt=_context4.sent;console.log(receipt);_context4.next=31;break;case 28:_context4.prev=28;_context4.t0=_context4[\"catch\"](21);// Ethers check the hash from user's signed tx and hash returned from Biconomy\n// Both hash are expected to be different as biconomy send the transaction from its relayers\nif(_context4.t0.returnedHash&&_context4.t0.expectedHash){console.log(\"Transaction hash : \",_context4.t0.returnedHash);_transactionHash=_context4.t0.returnedHash;}else{console.log(_context4.t0);showErrorMessage(\"Error while sending transaction\");}case 31:if(!_transactionHash){_context4.next=41;break;}showInfoMessage(\"Transaction sent by relayer with hash \".concat(_transactionHash));_context4.next=35;return ethersProvider.waitForTransaction(_transactionHash);case 35:_receipt=_context4.sent;console.log(_receipt);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();_context4.next=42;break;case 41:showErrorMessage(\"Could not get transaction hash\");case 42:_context4.next=57;break;case 44:console.log(\"Sending normal transaction\");_context4.next=47;return contract.setQuote(newQuote);case 47:_tx=_context4.sent;console.log(\"Transaction hash : \",_tx.hash);showInfoMessage(\"Transaction sent by relayer with hash \".concat(_tx.hash));_context4.next=52;return _tx.wait();case 52:confirmation=_context4.sent;console.log(confirmation);setTransactionHash(_tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 57:_context4.next=63;break;case 59:_context4.prev=59;_context4.t1=_context4[\"catch\"](2);console.log(_context4.t1);handleClose();case 63:_context4.next=66;break;case 65:showErrorMessage(\"Please enter the quote\");case 66:case\"end\":return _context4.stop();}}},_callee4,null,[[2,59],[21,28]]);}));return function onSubmitWithPrivateKey(_x2){return _ref3.apply(this,arguments);};}();var getSignatureParameters=function getSignatureParameters(signature){if(!ethers.utils.isHexString(signature)){throw new Error('Given value \"'.concat(signature,'\" is not a valid hex string.'));}var r=signature.slice(0,66);var s=\"0x\".concat(signature.slice(66,130));var v=\"0x\".concat(signature.slice(130,132));v=ethers.BigNumber.from(v).toNumber();if(![27,28].includes(v))v+=27;return{r:r,s:s,v:v};};var getQuoteFromNetwork=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:setLoadingMessage(\"Getting Quote from contact ...\");_context5.next=3;return contract.getQuote();case 3:result=_context5.sent;if(result&&result.currentQuote!=undefined&&result.currentOwner!=undefined){if(result.currentQuote==\"\"){showErrorMessage(\"No quotes set on blockchain yet\");}else{setQuote(result.currentQuote);setOwner(result.currentOwner);}}else{showErrorMessage(\"Not able to get quote information from Network\");}handleClose();case 6:case\"end\":return _context5.stop();}}},_callee5);}));return function getQuoteFromNetwork(){return _ref4.apply(this,arguments);};}();var showErrorMessage=function showErrorMessage(message){NotificationManager.error(message,\"Error\",5000);};var showSuccessMessage=function showSuccessMessage(message){NotificationManager.success(message,\"Message\",3000);};var showInfoMessage=function showInfoMessage(message){NotificationManager.info(message,\"Info\",3000);};var sendSignedTransaction=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userAddress,functionData,r,s,v){var tx;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;showInfoMessage(\"Sending transaction via Biconomy\");_context6.next=4;return contract.executeMetaTransaction(userAddress,functionData,r,s,v);case 4:tx=_context6.sent;showInfoMessage(\"Transaction sent. Waiting for confirmation ..\");_context6.next=8;return tx.wait(1);case 8:console.log(\"Transaction hash : \",tx.hash);//let confirmation = await tx.wait();\nconsole.log(tx);setTransactionHash(tx.hash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();_context6.next=19;break;case 15:_context6.prev=15;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);handleClose();case 19:case\"end\":return _context6.stop();}}},_callee6,null,[[0,15]]);}));return function sendSignedTransaction(_x3,_x4,_x5,_x6,_x7){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"section\",{className:\"top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Library \"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"ethers.js\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Meta Transaction\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"Custom Approach\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Signature Type\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"Personal Signature\"))),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-wrap mb-style-2\"},/*#__PURE__*/React.createElement(\"blockquote\",{cite:\"http://www.gutenberg.org/ebboks/11\"},/*#__PURE__*/React.createElement(\"p\",null,quote))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-attribution\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-author\"},owner),selectedAddress.toLowerCase()===owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",{className:\"owner\"},\"You are the owner of the quote\"),selectedAddress.toLowerCase()!==owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",null,\"You are not the owner of the quote\"))),/*#__PURE__*/React.createElement(\"section\",null,transactionHash!==\"\"&&/*#__PURE__*/React.createElement(Box,{className:classes.root,mt:2,p:2},/*#__PURE__*/React.createElement(Typography,null,\"Check your transaction hash\",/*#__PURE__*/React.createElement(Link,{href:\"https://kovan.etherscan.io/tx/\".concat(transactionHash),target:\"_blank\",className:classes.link},\"here\")))),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"submit-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"submit-row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your quote\",onChange:onQuoteChange,value:newQuote}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithPersonalSign,style:{marginLeft:\"10px\"}},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",onClick:onSubmitWithPrivateKey,style:{marginLeft:\"10px\"}},\"Submit (Private Key)\")))),/*#__PURE__*/React.createElement(Backdrop,{className:classes.backdrop,open:backdropOpen,onClick:handleClose},/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\"}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingLeft:\"10px\"}},loadingMessage)),/*#__PURE__*/React.createElement(NotificationContainer,null));}export default App;","map":{"version":3,"sources":["/home/konstantin/Документы/react-ui-biconomy/react-ui/src/components/Ethers_Custom_PersonalSign.js"],"names":["React","useState","useEffect","Button","NotificationContainer","NotificationManager","Backdrop","CircularProgress","ethers","Biconomy","makeStyles","Link","Typography","Box","toBuffer","sigUtil","require","abi","config","contract","address","apiKey","test","prod","salt","walletProvider","walletSigner","ethersProvider","contractInterface","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","biconomy","App","classes","preventDefault","event","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","selectedAddress","setSelectedAddress","metaTxEnabled","setMetaTxEnabled","transactionHash","setTransactionHash","handleClose","handleToggle","init","window","ethereum","isMetaMask","provider","enable","jsonRpcProvider","providers","JsonRpcProvider","debug","Web3Provider","getSigner","getAddress","userAddress","onEvent","READY","Contract","getSignerByAddress","utils","Interface","getQuoteFromNetwork","ERROR","error","message","console","log","showErrorMessage","onQuoteChange","target","value","onSubmitWithPersonalSign","showInfoMessage","getNonce","nonce","functionSignature","encodeFunctionData","messageToSign","constructMetaTransactionMessage","toNumber","signMessage","signature","info","getSignatureParameters","r","s","v","sendSignedTransaction","tx","hash","wait","confirmation","showSuccessMessage","contractAddress","soliditySHA3","onSubmitWithPrivateKey","wallet","Wallet","rawTx","to","data","from","signTransaction","sendTransaction","receipt","returnedHash","expectedHash","waitForTransaction","isHexString","Error","concat","slice","BigNumber","includes","getQuote","result","currentQuote","undefined","currentOwner","success","functionData","executeMetaTransaction","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { ethers } from \"ethers\";\nimport { Biconomy } from \"@biconomy/mexa\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nimport {toBuffer} from \"ethereumjs-util\";\nlet sigUtil = require(\"eth-sig-util\");\nlet abi = require('ethereumjs-abi')\n\nlet config = {\n    contract: {\n        address: \"0x1E1c36546F6ddD71e8e6aEDf135B82F7EEaA08b9\",\n        abi: [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"addresspayable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n    },\n    apiKey: {\n        test: \"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    }\n}\n\nlet salt = 42;\nlet walletProvider, walletSigner, ethersProvider;\nlet contract, contractInterface;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nlet biconomy;\n\nfunction App() {\n    const classes = useStyles();\n    const preventDefault = (event) => event.preventDefault();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled, setMetaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n    const handleToggle = () => {\n        setBackdropOpen(!backdropOpen);\n    };\n\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                // We're creating biconomy provider linked to your network of choice where your contract is deployed\n                let jsonRpcProvider = new ethers.providers.JsonRpcProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                biconomy = new Biconomy(jsonRpcProvider, {\n                    walletProvider: window.ethereum,\n                    apiKey: config.apiKey.prod,\n                    debug: true \n                });\n\n                /*\n                  This provider is linked to your wallet.\n                  If needed, substitute your wallet solution in place of window.ethereum \n                */\n                ethersProvider = new ethers.providers.Web3Provider(biconomy);\n                walletProvider = new ethers.providers.Web3Provider(window.ethereum);\n                walletSigner = walletProvider.getSigner();\n\n                let userAddress = await walletSigner.getAddress()\n                setSelectedAddress(userAddress);\n\n                biconomy.onEvent(biconomy.READY, async () => {\n\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new ethers.Contract(\n                        config.contract.address,\n                        config.contract.abi,\n                        biconomy.getSignerByAddress(userAddress)\n                    );\n\n                    contractInterface = new ethers.utils.Interface(config.contract.abi);\n                    getQuoteFromNetwork();\n                }).onEvent(biconomy.ERROR, (error, message) => {\n                    // Handle error while initializing mexa\n                    console.log(message);\n                    console.log(error);\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onSubmitWithPersonalSign = async event => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n                showInfoMessage(`Getting user signature`);\n                let userAddress = selectedAddress;\n                let nonce = await contract.getNonce(userAddress);\n                let functionSignature = contractInterface.encodeFunctionData(\"setQuote\", [newQuote]);\n                let messageToSign = constructMetaTransactionMessage(nonce.toNumber(), salt, functionSignature, config.contract.address);\n                const signature = await walletSigner.signMessage(messageToSign);\n                \n                console.info(`User signature is ${signature}`);\n                let { r, s, v } = getSignatureParameters(signature);\n                sendSignedTransaction(userAddress, functionSignature, r, s, v);\n            } else {\n                console.log(\"Sending normal transaction\");\n                let tx = await contract.setQuote(newQuote);\n                console.log(\"Transaction hash : \", tx.hash);\n                showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n                let confirmation = await tx.wait();\n                console.log(confirmation);\n                setTransactionHash(tx.hash);\n\n                showSuccessMessage(\"Transaction confirmed on chain\");\n                getQuoteFromNetwork();\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    };\n\n    const constructMetaTransactionMessage = (nonce, salt, functionSignature, contractAddress) => {\n        return abi.soliditySHA3(\n            [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n            [nonce, contractAddress, salt, toBuffer(functionSignature)]\n        );\n      }\n\n    const onSubmitWithPrivateKey = async (event) => {\n      if (newQuote != \"\" && contract) {\n        setTransactionHash(\"\");\n\n        try {\n          if (metaTxEnabled) {\n            showInfoMessage(`Getting user signature`);\n            let wallet = new ethers.Wallet(\n              \"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\"\n            );\n            let userAddress = \"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";\n            let nonce = await contract.getNonce(userAddress);\n            let functionSignature = contractInterface.encodeFunctionData(\n              \"setQuote\",\n              [newQuote]\n            );\n            let messageToSign = constructMetaTransactionMessage(\n              nonce.toNumber(),\n              salt,\n              functionSignature,\n              config.contract.address\n            );\n            const signature = await wallet.signMessage(messageToSign);\n\n            console.info(`User signature is ${signature}`);\n            let { r, s, v } = getSignatureParameters(signature);\n            let rawTx, tx;\n            rawTx = {\n              to: config.contract.address,\n              data: contractInterface.encodeFunctionData(\n                \"executeMetaTransaction\",\n                [userAddress, functionSignature, r, s, v]\n              ),\n              from: userAddress,\n            };\n            tx = await wallet.signTransaction(rawTx);\n            let transactionHash;\n            try {\n              let receipt = await ethersProvider.sendTransaction(tx);\n              console.log(receipt);\n            } catch (error) {\n              // Ethers check the hash from user's signed tx and hash returned from Biconomy\n              // Both hash are expected to be different as biconomy send the transaction from its relayers\n              if (error.returnedHash && error.expectedHash) {\n                console.log(\"Transaction hash : \", error.returnedHash);\n                transactionHash = error.returnedHash;\n              } else {\n                console.log(error);\n                showErrorMessage(\"Error while sending transaction\");\n              }\n            }\n\n            if (transactionHash) {\n              showInfoMessage(\n                `Transaction sent by relayer with hash ${transactionHash}`\n              );\n              let receipt = await ethersProvider.waitForTransaction(\n                transactionHash\n              );\n              console.log(receipt);\n              showSuccessMessage(\"Transaction confirmed on chain\");\n              getQuoteFromNetwork();\n            } else {\n              showErrorMessage(\"Could not get transaction hash\");\n            }\n          } else {\n            console.log(\"Sending normal transaction\");\n            let tx = await contract.setQuote(newQuote);\n            console.log(\"Transaction hash : \", tx.hash);\n            showInfoMessage(`Transaction sent by relayer with hash ${tx.hash}`);\n            let confirmation = await tx.wait();\n            console.log(confirmation);\n            setTransactionHash(tx.hash);\n\n            showSuccessMessage(\"Transaction confirmed on chain\");\n            getQuoteFromNetwork();\n          }\n        } catch (error) {\n          console.log(error);\n          handleClose();\n        }\n      } else {\n        showErrorMessage(\"Please enter the quote\");\n      }\n    };\n\n    const getSignatureParameters = signature => {\n        if (!ethers.utils.isHexString(signature)) {\n            throw new Error(\n                'Given value \"'.concat(signature, '\" is not a valid hex string.')\n            );\n        }\n        var r = signature.slice(0, 66);\n        var s = \"0x\".concat(signature.slice(66, 130));\n        var v = \"0x\".concat(signature.slice(130, 132));\n        v = ethers.BigNumber.from(v).toNumber();\n        if (![27, 28].includes(v)) v += 27;\n        return {\n            r: r,\n            s: s,\n            v: v\n        };\n    };\n\n    const getQuoteFromNetwork = async () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        let result = await contract.getQuote();\n        if (\n            result &&\n            result.currentQuote != undefined &&\n            result.currentOwner != undefined\n        ) {\n            if (result.currentQuote == \"\") {\n                showErrorMessage(\"No quotes set on blockchain yet\");\n            } else {\n                setQuote(result.currentQuote);\n                setOwner(result.currentOwner);\n            }\n        } else {\n            showErrorMessage(\"Not able to get quote information from Network\");\n        }\n        handleClose();\n    };\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    const sendSignedTransaction = async (userAddress, functionData, r, s, v) => {\n        try {\n            showInfoMessage(`Sending transaction via Biconomy`);\n            let tx = await contract.executeMetaTransaction(userAddress, functionData, r, s, v);\n            showInfoMessage(`Transaction sent. Waiting for confirmation ..`)\n            await tx.wait(1);\n            console.log(\"Transaction hash : \", tx.hash);\n            //let confirmation = await tx.wait();\n            console.log(tx);\n            setTransactionHash(tx.hash);\n\n            showSuccessMessage(\"Transaction confirmed on chain\");\n            getQuoteFromNetwork();\n\n        } catch (error) {\n            console.log(error);\n            handleClose();\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <section className=\"top-row\">\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Library </span>\n                    <span className=\"label-value\">ethers.js</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Meta Transaction</span>\n                    <span className=\"label-value\">Custom Approach</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Signature Type</span>\n                    <span className=\"label-value\">Personal Signature</span>\n                </div>\n            </section>\n            <section className=\"main\">\n                <div className=\"mb-wrap mb-style-2\">\n                    <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n                        <p>{quote}</p>\n                    </blockquote>\n                </div>\n\n                <div className=\"mb-attribution\">\n                    <p className=\"mb-author\">{owner}</p>\n                    {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n                        <cite className=\"owner\">You are the owner of the quote</cite>\n                    )}\n                    {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n                        <cite>You are not the owner of the quote</cite>\n                    )}\n                </div>\n            </section>\n            <section>\n                {transactionHash !== \"\" && <Box className={classes.root} mt={2} p={2}>\n                    <Typography>\n                        Check your transaction hash\n            <Link href={`https://kovan.etherscan.io/tx/${transactionHash}`} target=\"_blank\"\n                            className={classes.link}>\n                            here\n            </Link>\n                    </Typography>\n                </Box>}\n            </section>\n            <section>\n                <div className=\"submit-container\">\n                    <div className=\"submit-row\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter your quote\"\n                            onChange={onQuoteChange}\n                            value={newQuote}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitWithPersonalSign} style={{ marginLeft: \"10px\" }}>\n                            Submit\n            </Button>\n\n                        <Button variant=\"contained\" color=\"secondary\" onClick={onSubmitWithPrivateKey} style={{ marginLeft: \"10px\" }}>\n                            Submit (Private Key)\n            </Button>\n                    </div>\n                </div>\n            </section>\n            <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleClose}>\n                <CircularProgress color=\"inherit\" />\n                <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n            </Backdrop>\n            <NotificationContainer />\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}