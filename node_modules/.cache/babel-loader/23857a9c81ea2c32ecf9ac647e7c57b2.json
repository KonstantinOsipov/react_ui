{"ast":null,"code":"import _regeneratorRuntime from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../App.css\";import Button from\"@material-ui/core/Button\";import{NotificationContainer,NotificationManager}from\"react-notifications\";import\"react-notifications/lib/notifications.css\";import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import Web3 from\"web3\";import{Biconomy}from\"@biconomy/mexa\";import{makeStyles}from'@material-ui/core/styles';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";import{toBuffer}from\"ethereumjs-util\";var abi=require('ethereumjs-abi');var sigUtil=require(\"eth-sig-util\");var config={contract:{address:\"0x1E1c36546F6ddD71e8e6aEDf135B82F7EEaA08b9\",abi:[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"addresspayable\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"sigR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sigS\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]},apiKey:{test:\"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",prod:\"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"},api:{test:\"https://test-api.biconomy.io\",prod:\"https://api.biconomy.io\"}};var web3,walletWeb3;var contract;var salt=42;var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginLeft:theme.spacing(2)}},link:{marginLeft:\"5px\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:'#fff',opacity:'.85!important',background:'#000'}};});function App(){var _this=this;var classes=useStyles();var preventDefault=function preventDefault(event){return event.preventDefault();};var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),backdropOpen=_React$useState2[0],setBackdropOpen=_React$useState2[1];var _React$useState3=React.useState(\" Loading Application ...\"),_React$useState4=_slicedToArray(_React$useState3,2),loadingMessage=_React$useState4[0],setLoadingMessage=_React$useState4[1];var _useState=useState(\"This is a default quote\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"Default Owner Address\"),_useState4=_slicedToArray(_useState3,2),owner=_useState4[0],setOwner=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newQuote=_useState6[0],setNewQuote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedAddress=_useState8[0],setSelectedAddress=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),metaTxEnabled=_useState10[0],setMetaTxEnabled=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),transactionHash=_useState12[0],setTransactionHash=_useState12[1];useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,kovanProvider,biconomy;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof window.ethereum!==\"undefined\"&&window.ethereum.isMetaMask)){_context.next=12;break;}// Ethereum user detected. You can now use the provider.\nprovider=window[\"ethereum\"];_context.next=4;return provider.enable();case 4:kovanProvider=new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");setLoadingMessage(\"Initializing Biconomy ...\");biconomy=new Biconomy(kovanProvider,{apiKey:config.apiKey.prod,debug:true});// This web3 instance is used to read normally and write to contract via meta transactions.\nweb3=new Web3(biconomy);// This web3 instance is used to get user signature from connected wallet\nwalletWeb3=new Web3(window.ethereum);biconomy.onEvent(biconomy.READY,function(){// Initialize your dapp here like getting user accounts etc\ncontract=new web3.eth.Contract(config.contract.abi,config.contract.address);setSelectedAddress(provider.selectedAddress);getQuoteFromNetwork();provider.on(\"accountsChanged\",function(accounts){setSelectedAddress(accounts[0]);});}).onEvent(biconomy.ERROR,function(error,message){// Handle error while initializing mexa\n});_context.next=13;break;case 12:showErrorMessage(\"Metamask not installed\");case 13:case\"end\":return _context.stop();}}},_callee);}));return _init.apply(this,arguments);}init();},[]);var handleClose=function handleClose(){setBackdropOpen(false);};var handleToggle=function handleToggle(){setBackdropOpen(!backdropOpen);};var onQuoteChange=function onQuoteChange(event){setNewQuote(event.target.value);};var onSubmitWithPrivateKey=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var privateKey,userAddress,nonce,functionSignature,messageToSign,_web3$eth$accounts$si,signature,_getSignatureParamete,r,s,v;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(newQuote!=\"\"&&contract)){_context2.next=20;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context2.next=16;break;}console.log(\"Sending meta transaction\");privateKey=\"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\";userAddress=\"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";_context2.next=8;return contract.methods.getNonce(userAddress).call();case 8:nonce=_context2.sent;functionSignature=contract.methods.setQuote(newQuote).encodeABI();messageToSign=constructMetaTransactionMessage(nonce,salt,functionSignature,config.contract.address);_web3$eth$accounts$si=web3.eth.accounts.sign(\"0x\"+messageToSign.toString(\"hex\"),privateKey),signature=_web3$eth$accounts$si.signature;_getSignatureParamete=getSignatureParameters(signature),r=_getSignatureParamete.r,s=_getSignatureParamete.s,v=_getSignatureParamete.v;sendTransaction(userAddress,functionSignature,r,s,v);_context2.next=18;break;case 16:console.log(\"Sending normal transaction\");contract.methods.setQuote(newQuote).send({from:selectedAddress}).on(\"transactionHash\",function(hash){showInfoMessage(\"Transaction sent to blockchain with hash \".concat(hash));}).once(\"confirmation\",function(confirmationNumber,receipt){setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed\");getQuoteFromNetwork();});case 18:_context2.next=21;break;case 20:showErrorMessage(\"Please enter the quote\");case 21:case\"end\":return _context2.stop();}}},_callee2);}));return function onSubmitWithPrivateKey(){return _ref.apply(this,arguments);};}();var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var userAddress,nonce,functionSignature,messageToSign,signature,_getSignatureParamete2,r,s,v;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(newQuote!=\"\"&&contract)){_context3.next=21;break;}setTransactionHash(\"\");if(!metaTxEnabled){_context3.next=17;break;}console.log(\"Sending meta transaction\");userAddress=selectedAddress;_context3.next=7;return contract.methods.getNonce(userAddress).call();case 7:nonce=_context3.sent;functionSignature=contract.methods.setQuote(newQuote).encodeABI();messageToSign=constructMetaTransactionMessage(nonce,salt,functionSignature,config.contract.address);// NOTE: We are using walletWeb3 here to get signature from connected wallet\n_context3.next=12;return walletWeb3.eth.personal.sign(\"0x\"+messageToSign.toString(\"hex\"),userAddress);case 12:signature=_context3.sent;_getSignatureParamete2=getSignatureParameters(signature),r=_getSignatureParamete2.r,s=_getSignatureParamete2.s,v=_getSignatureParamete2.v;sendTransaction(userAddress,functionSignature,r,s,v);_context3.next=19;break;case 17:console.log(\"Sending normal transaction\");contract.methods.setQuote(newQuote).send({from:selectedAddress}).on(\"transactionHash\",function(hash){showInfoMessage(\"Transaction sent to blockchain with hash \".concat(hash));}).once(\"confirmation\",function(confirmationNumber,receipt){setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed\");getQuoteFromNetwork();});case 19:_context3.next=22;break;case 21:showErrorMessage(\"Please enter the quote\");case 22:case\"end\":return _context3.stop();}}},_callee3);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();var getSignatureParameters=function getSignatureParameters(signature){if(!web3.utils.isHexStrict(signature)){throw new Error('Given value \"'.concat(signature,'\" is not a valid hex string.'));}var r=signature.slice(0,66);var s=\"0x\".concat(signature.slice(66,130));var v=\"0x\".concat(signature.slice(130,132));v=web3.utils.hexToNumber(v);if(![27,28].includes(v))v+=27;return{r:r,s:s,v:v};};var getQuoteFromNetwork=function getQuoteFromNetwork(){setLoadingMessage(\"Getting Quote from contact ...\");try{if(web3&&contract){contract.methods.getQuote().call().then(function(result){handleClose();console.log(result);if(result&&result.currentQuote!=undefined&&result.currentOwner!=undefined){if(result.currentQuote==\"\"){showErrorMessage(\"No quotes set on blockchain yet\");}else{setQuote(result.currentQuote);setOwner(result.currentOwner);}}else{showErrorMessage(\"Not able to get quote information from Network\");}});}else{handleClose();}}catch(error){handleClose();console.log(error);}};var constructMetaTransactionMessage=function constructMetaTransactionMessage(nonce,salt,functionSignature,contractAddress){return abi.soliditySHA3([\"uint256\",\"address\",\"uint256\",\"bytes\"],[nonce,contractAddress,salt,toBuffer(functionSignature)]);};var showErrorMessage=function showErrorMessage(message){NotificationManager.error(message,\"Error\",5000);};var showSuccessMessage=function showSuccessMessage(message){NotificationManager.success(message,\"Message\",3000);};var showInfoMessage=function showInfoMessage(message){NotificationManager.info(message,\"Info\",3000);};var getTransactionReceiptMined=function getTransactionReceiptMined(txHash,interval){var self=_this;var transactionReceiptAsync=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resolve,reject){var receipt;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return web3.eth.getTransactionReceipt(txHash);case 2:receipt=_context4.sent;if(receipt==null){setTimeout(function(){return transactionReceiptAsync(resolve,reject);},interval?interval:500);}else{resolve(receipt);}case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function transactionReceiptAsync(_x2,_x3){return _ref3.apply(this,arguments);};}();if(typeof txHash===\"string\"){return new Promise(transactionReceiptAsync);}else{throw new Error(\"Invalid Type: \"+txHash);}};var sendTransaction=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(userAddress,functionData,r,s,v){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(web3&&contract){try{fetch(\"\".concat(config.api.prod,\"/api/v2/meta-tx/native\"),{method:\"POST\",headers:{\"x-api-key\":config.apiKey.prod,'Content-Type':'application/json;charset=utf-8'},body:JSON.stringify({\"to\":config.contract.address,\"apiId\":\"2ad00362-b370-4a65-9b70-59c5197bf961\",//\"apiId\": \"9bde7ec7-ef8f-485a-b655-ec88476fb548\",\n\"params\":[userAddress,functionData,r,s,v],\"from\":userAddress})}).then(function(response){return response.json();}).then(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(result){var receipt;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:console.log(result);showInfoMessage(\"Transaction sent by relayer with hash \".concat(result.txHash));_context5.next=4;return getTransactionReceiptMined(result.txHash,2000);case 4:receipt=_context5.sent;setTransactionHash(result.txHash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();case 8:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x9){return _ref5.apply(this,arguments);};}()).catch(function(error){console.log(error);});}catch(error){console.log(error);}}case 1:case\"end\":return _context6.stop();}}},_callee6);}));return function sendTransaction(_x4,_x5,_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"section\",{className:\"top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Library \"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"web3.js\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Meta Transaction\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"Custom Approach\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Signature Type\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP712 Signature\"))),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-wrap mb-style-2\"},/*#__PURE__*/React.createElement(\"blockquote\",{cite:\"http://www.gutenberg.org/ebboks/11\"},/*#__PURE__*/React.createElement(\"p\",null,quote))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-attribution\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-author\"},owner),selectedAddress.toLowerCase()===owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",{className:\"owner\"},\"You are the owner of the quote\"),selectedAddress.toLowerCase()!==owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",null,\"You are not the owner of the quote\"))),/*#__PURE__*/React.createElement(\"section\",null,transactionHash!==\"\"&&/*#__PURE__*/React.createElement(Box,{className:classes.root,mt:2,p:2},/*#__PURE__*/React.createElement(Typography,null,\"Check your transaction hash\",/*#__PURE__*/React.createElement(Link,{href:\"https://kovan.etherscan.io/tx/\".concat(transactionHash),target:\"_blank\",className:classes.link},\"here\")))),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"submit-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"submit-row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your quote\",onChange:onQuoteChange,value:newQuote}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmit},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithPrivateKey,style:{marginLeft:\"10px\"}},\"Submit (using private key)\")))),/*#__PURE__*/React.createElement(Backdrop,{className:classes.backdrop,open:backdropOpen,onClick:handleClose},/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\"}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingLeft:\"10px\"}},loadingMessage)),/*#__PURE__*/React.createElement(NotificationContainer,null));}export default App;","map":{"version":3,"sources":["/home/konstantin/Документы/react-ui-biconomy/react-ui/src/components/Web3_Custom_PersonalSign_API.js"],"names":["React","useState","useEffect","Button","NotificationContainer","NotificationManager","Backdrop","CircularProgress","Web3","Biconomy","makeStyles","Link","Typography","Box","toBuffer","abi","require","sigUtil","config","contract","address","apiKey","test","prod","api","web3","walletWeb3","salt","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","App","classes","preventDefault","event","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","selectedAddress","setSelectedAddress","metaTxEnabled","setMetaTxEnabled","transactionHash","setTransactionHash","init","window","ethereum","isMetaMask","provider","enable","kovanProvider","providers","HttpProvider","biconomy","debug","onEvent","READY","eth","Contract","getQuoteFromNetwork","on","accounts","ERROR","error","message","showErrorMessage","handleClose","handleToggle","onQuoteChange","target","value","onSubmitWithPrivateKey","console","log","privateKey","userAddress","methods","getNonce","call","nonce","functionSignature","encodeABI","messageToSign","constructMetaTransactionMessage","sign","toString","signature","getSignatureParameters","r","s","v","sendTransaction","send","from","hash","showInfoMessage","once","confirmationNumber","receipt","showSuccessMessage","onSubmit","personal","utils","isHexStrict","Error","concat","slice","hexToNumber","includes","getQuote","then","result","currentQuote","undefined","currentOwner","contractAddress","soliditySHA3","success","info","getTransactionReceiptMined","txHash","interval","self","transactionReceiptAsync","resolve","reject","getTransactionReceipt","setTimeout","Promise","functionData","fetch","method","headers","body","JSON","stringify","response","json","catch","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Web3 from \"web3\";\nimport {Biconomy} from \"@biconomy/mexa\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nimport {toBuffer} from \"ethereumjs-util\";\nlet abi = require('ethereumjs-abi')\nlet sigUtil = require(\"eth-sig-util\");\n\nlet config = {\n    contract: {\n        address: \"0x1E1c36546F6ddD71e8e6aEDf135B82F7EEaA08b9\",\n        abi: [{ \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"addresspayable\", \"name\": \"relayerAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"functionSignature\", \"type\": \"bytes\" }], \"name\": \"MetaTransactionExecuted\", \"type\": \"event\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" }, { \"internalType\": \"bytes\", \"name\": \"functionSignature\", \"type\": \"bytes\" }, { \"internalType\": \"bytes32\", \"name\": \"sigR\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"sigS\", \"type\": \"bytes32\" }, { \"internalType\": \"uint8\", \"name\": \"sigV\", \"type\": \"uint8\" }], \"name\": \"executeMetaTransaction\", \"outputs\": [{ \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" }], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"internalType\": \"address\", \"name\": \"user\", \"type\": \"address\" }], \"name\": \"getNonce\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"nonce\", \"type\": \"uint256\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"quote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"internalType\": \"string\", \"name\": \"newQuote\", \"type\": \"string\" }], \"name\": \"setQuote\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"getQuote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"currentQuote\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"currentOwner\", \"type\": \"address\" }], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }]\n    },\n    apiKey: {\n        test: \"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    },\n    api: {\n        test: \"https://test-api.biconomy.io\",\n        prod: \"https://api.biconomy.io\"\n    }\n}\n\nlet web3, walletWeb3;\nlet contract;\nlet salt = 42;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const preventDefault = (event) => event.preventDefault();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled, setMetaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                let kovanProvider = new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                const biconomy = new Biconomy(kovanProvider, { apiKey: config.apiKey.prod, debug: true });\n\n                // This web3 instance is used to read normally and write to contract via meta transactions.\n                web3 = new Web3(biconomy);\n\n                // This web3 instance is used to get user signature from connected wallet\n                walletWeb3 = new Web3(window.ethereum);\n\n                biconomy.onEvent(biconomy.READY, () => {\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new web3.eth.Contract(\n                        config.contract.abi,\n                        config.contract.address\n                    );\n                    setSelectedAddress(provider.selectedAddress);\n                    getQuoteFromNetwork();\n                    provider.on(\"accountsChanged\", function (accounts) {\n                        setSelectedAddress(accounts[0]);\n                    });\n                }).onEvent(biconomy.ERROR, (error, message) => {\n                    // Handle error while initializing mexa\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n    const handleToggle = () => {\n        setBackdropOpen(!backdropOpen);\n    };\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onSubmitWithPrivateKey = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n                console.log(\"Sending meta transaction\");\n                let privateKey = \"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\";\n                let userAddress = \"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";\n                let nonce = await contract.methods.getNonce(userAddress).call();\n                let functionSignature = contract.methods.setQuote(newQuote).encodeABI();\n                let messageToSign = constructMetaTransactionMessage(nonce, salt, functionSignature, config.contract.address);\n                \n                let {signature} = web3.eth.accounts.sign(\"0x\" + messageToSign.toString(\"hex\"), privateKey);\n                let { r, s, v } = getSignatureParameters(signature);\n                sendTransaction(userAddress, functionSignature, r, s, v);\n            } else {\n                console.log(\"Sending normal transaction\");\n                contract.methods\n                    .setQuote(newQuote)\n                    .send({ from: selectedAddress })\n                    .on(\"transactionHash\", function (hash) {\n                        showInfoMessage(`Transaction sent to blockchain with hash ${hash}`);\n                    })\n                    .once(\"confirmation\", function (confirmationNumber, receipt) {\n                        setTransactionHash(receipt.transactionHash);\n                        showSuccessMessage(\"Transaction confirmed\");\n                        getQuoteFromNetwork();\n                    });\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    }\n\n    const onSubmit = async event => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n                console.log(\"Sending meta transaction\");\n                let userAddress = selectedAddress;\n                let nonce = await contract.methods.getNonce(userAddress).call();\n                let functionSignature = contract.methods.setQuote(newQuote).encodeABI();\n                let messageToSign = constructMetaTransactionMessage(nonce, salt, functionSignature, config.contract.address);\n                \n                // NOTE: We are using walletWeb3 here to get signature from connected wallet\n                const signature = await walletWeb3.eth.personal.sign(\n                \"0x\" + messageToSign.toString(\"hex\"),\n                userAddress\n                );\n                let { r, s, v } = getSignatureParameters(signature);\n                sendTransaction(userAddress, functionSignature, r, s, v);\n            } else {\n                console.log(\"Sending normal transaction\");\n                contract.methods\n                    .setQuote(newQuote)\n                    .send({ from: selectedAddress })\n                    .on(\"transactionHash\", function (hash) {\n                        showInfoMessage(`Transaction sent to blockchain with hash ${hash}`);\n                    })\n                    .once(\"confirmation\", function (confirmationNumber, receipt) {\n                        setTransactionHash(receipt.transactionHash);\n                        showSuccessMessage(\"Transaction confirmed\");\n                        getQuoteFromNetwork();\n                    });\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    };\n\n    const getSignatureParameters = signature => {\n        if (!web3.utils.isHexStrict(signature)) {\n            throw new Error(\n                'Given value \"'.concat(signature, '\" is not a valid hex string.')\n            );\n        }\n        var r = signature.slice(0, 66);\n        var s = \"0x\".concat(signature.slice(66, 130));\n        var v = \"0x\".concat(signature.slice(130, 132));\n        v = web3.utils.hexToNumber(v);\n        if (![27, 28].includes(v)) v += 27;\n        return {\n            r: r,\n            s: s,\n            v: v\n        };\n    };\n\n    const getQuoteFromNetwork = () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        try {\n            if (web3 && contract) {\n                contract.methods\n                    .getQuote()\n                    .call()\n                    .then(function (result) {\n                        handleClose();\n                        console.log(result);\n                        if (\n                            result &&\n                            result.currentQuote != undefined &&\n                            result.currentOwner != undefined\n                        ) {\n                            if (result.currentQuote == \"\") {\n                                showErrorMessage(\"No quotes set on blockchain yet\");\n                            } else {\n                                setQuote(result.currentQuote);\n                                setOwner(result.currentOwner);\n                            }\n                        } else {\n                            showErrorMessage(\"Not able to get quote information from Network\");\n                        }\n                    });\n            } else {\n                handleClose();\n            }\n        } catch(error) {\n            handleClose();\n            console.log(error);\n        }\n    };\n\n    const constructMetaTransactionMessage = (nonce, salt, functionSignature, contractAddress) => {\n        return abi.soliditySHA3(\n            [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n            [nonce, contractAddress, salt, toBuffer(functionSignature)]\n        );\n    }\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n    const getTransactionReceiptMined = (txHash, interval) => {\n        const self = this;\n        const transactionReceiptAsync = async function(resolve, reject) {\n          var receipt = await web3.eth.getTransactionReceipt(txHash);\n          if (receipt == null) {\n              setTimeout(\n                  () => transactionReceiptAsync(resolve, reject),\n                  interval ? interval : 500);\n          } else {\n              resolve(receipt);\n          }\n        };\n    \n        if (typeof txHash === \"string\") {\n            return new Promise(transactionReceiptAsync);\n        } else {\n            throw new Error(\"Invalid Type: \" + txHash);\n        }\n      };\n\n    const sendTransaction = async (userAddress, functionData, r, s, v) => {\n        if (web3 && contract) {\n            try {\n                fetch(`${config.api.prod}/api/v2/meta-tx/native`, {\n                    method: \"POST\",\n                    headers: {\n                      \"x-api-key\" : config.apiKey.prod,\n                      'Content-Type': 'application/json;charset=utf-8'\n                    },\n                    body: JSON.stringify({\n                      \"to\": config.contract.address,\n                      \"apiId\": \"2ad00362-b370-4a65-9b70-59c5197bf961\",\n                      //\"apiId\": \"9bde7ec7-ef8f-485a-b655-ec88476fb548\",\n                      \"params\": [userAddress, functionData, r, s, v],\n                      \"from\": userAddress\n                    })\n                  })\n                  .then(response=>response.json())\n                  .then(async function(result) {\n                    console.log(result);\n                    showInfoMessage(`Transaction sent by relayer with hash ${result.txHash}`);\n          \n                    let receipt = await getTransactionReceiptMined(result.txHash, 2000);\n                    setTransactionHash(result.txHash);\n                    showSuccessMessage(\"Transaction confirmed on chain\");\n                    getQuoteFromNetwork();\n                  }).catch(function(error) {\n                      console.log(error)\n                    });\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <section className=\"top-row\">\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Library </span>\n                    <span className=\"label-value\">web3.js</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Meta Transaction</span>\n                    <span className=\"label-value\">Custom Approach</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Signature Type</span>\n                    <span className=\"label-value\">EIP712 Signature</span>\n                </div>\n            </section>\n            <section className=\"main\">\n                <div className=\"mb-wrap mb-style-2\">\n                    <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n                        <p>{quote}</p>\n                    </blockquote>\n                </div>\n\n                <div className=\"mb-attribution\">\n                    <p className=\"mb-author\">{owner}</p>\n                    {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n                        <cite className=\"owner\">You are the owner of the quote</cite>\n                    )}\n                    {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n                        <cite>You are not the owner of the quote</cite>\n                    )}\n                </div>\n            </section>\n            <section>\n                {transactionHash !== \"\" && <Box className={classes.root} mt={2} p={2}>\n                    <Typography>\n                        Check your transaction hash\n            <Link href={`https://kovan.etherscan.io/tx/${transactionHash}`} target=\"_blank\"\n                            className={classes.link}>\n                            here\n            </Link>\n                    </Typography>\n                </Box>}\n            </section>\n            <section>\n                <div className=\"submit-container\">\n                    <div className=\"submit-row\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter your quote\"\n                            onChange={onQuoteChange}\n                            value={newQuote}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n                            Submit\n            </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitWithPrivateKey} style={{ marginLeft: \"10px\" }}>\n                            Submit (using private key)\n            </Button>\n                    </div>\n                </div>\n            </section>\n            <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleClose}>\n                <CircularProgress color=\"inherit\" />\n                <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n            </Backdrop>\n            <NotificationContainer />\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}