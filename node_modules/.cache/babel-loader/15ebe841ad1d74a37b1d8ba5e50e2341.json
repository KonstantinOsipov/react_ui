{"ast":null,"code":"import _regeneratorRuntime from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/konstantin/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/react-ui-biconomy/react-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../App.css\";import Button from\"@material-ui/core/Button\";import{NotificationContainer,NotificationManager}from\"react-notifications\";import\"react-notifications/lib/notifications.css\";import Backdrop from'@material-ui/core/Backdrop';import CircularProgress from'@material-ui/core/CircularProgress';import Web3 from\"web3\";import{Biconomy}from\"@biconomy/mexa\";import{makeStyles}from'@material-ui/core/styles';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{Box}from\"@material-ui/core\";var sigUtil=require(\"eth-sig-util\");var config={contract:{address:\"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",abi:[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newQuote\",\"type\":\"string\"}],\"name\":\"setQuote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentQuote\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"currentOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true}]},apiKey:{test:\"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",prod:\"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"}};var web3,biconomy;var contract;var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginLeft:theme.spacing(2)}},link:{marginLeft:\"5px\"},backdrop:{zIndex:theme.zIndex.drawer+1,color:'#fff',opacity:'.85!important',background:'#000'}};});function App(){var classes=useStyles();var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),backdropOpen=_React$useState2[0],setBackdropOpen=_React$useState2[1];var _React$useState3=React.useState(\" Loading Application ...\"),_React$useState4=_slicedToArray(_React$useState3,2),loadingMessage=_React$useState4[0],setLoadingMessage=_React$useState4[1];var _useState=useState(\"This is a default quote\"),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setQuote=_useState2[1];var _useState3=useState(\"Default Owner Address\"),_useState4=_slicedToArray(_useState3,2),owner=_useState4[0],setOwner=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newQuote=_useState6[0],setNewQuote=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedAddress=_useState8[0],setSelectedAddress=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,1),metaTxEnabled=_useState10[0];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),transactionHash=_useState12[0],setTransactionHash=_useState12[1];useEffect(function(){function init(){return _init.apply(this,arguments);}function _init(){_init=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,kovanProvider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof window.ethereum!==\"undefined\"&&window.ethereum.isMetaMask)){_context.next=11;break;}// Ethereum user detected. You can now use the provider.\nprovider=window[\"ethereum\"];_context.next=4;return provider.enable();case 4:kovanProvider=new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");setLoadingMessage(\"Initializing Biconomy ...\");biconomy=new Biconomy(kovanProvider,{walletProvider:window.ethereum,apiKey:config.apiKey.prod,debug:true});// This web3 instance is used to read normally and write to contract via meta transactions.\nweb3=new Web3(biconomy);biconomy.onEvent(biconomy.READY,function(){// Initialize your dapp here like getting user accounts etc\ncontract=new web3.eth.Contract(config.contract.abi,config.contract.address);setSelectedAddress(provider.selectedAddress);getQuoteFromNetwork();provider.on(\"accountsChanged\",function(accounts){setSelectedAddress(accounts[0]);});}).onEvent(biconomy.ERROR,function(){// Handle error while initializing mexa\n});_context.next=12;break;case 11:showErrorMessage(\"Metamask not installed\");case 12:case\"end\":return _context.stop();}}},_callee);}));return _init.apply(this,arguments);}init();},[]);var handleClose=function handleClose(){setBackdropOpen(false);};var onQuoteChange=function onQuoteChange(event){setNewQuote(event.target.value);};var onSubmitWithPrivateKey=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var privateKey,userAddress,txParams,signedTx,forwardData,_web3$eth$accounts$si,signature,rawTransaction,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(newQuote!=\"\"&&contract)){_context2.next=20;break;}setTransactionHash(\"\");console.log(\"Sending meta transaction\");privateKey=\"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\";userAddress=\"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";txParams={\"from\":userAddress,\"to\":config.contract.address,\"data\":contract.methods.setQuote(newQuote).encodeABI(),\"gasLimit\":web3.utils.toHex(300000)};_context2.next=8;return web3.eth.accounts.signTransaction(txParams,\"0x\".concat(privateKey));case 8:signedTx=_context2.sent;_context2.next=11;return biconomy.getForwardRequestAndMessageToSign(signedTx.rawTransaction);case 11:forwardData=_context2.sent;console.log(forwardData);console.log(privateKey);// const signature = sigUtil.personalSign(new Buffer.from(privateKey, 'hex'), { data: forwardData.personalSignatureFormat });\n_web3$eth$accounts$si=web3.eth.accounts.sign(\"0x\"+forwardData.personalSignatureFormat.toString(\"hex\"),privateKey),signature=_web3$eth$accounts$si.signature;rawTransaction=signedTx.rawTransaction;data={signature:signature,forwardRequest:forwardData.request,rawTransaction:rawTransaction,signatureType:biconomy.PERSONAL_SIGN};web3.eth.sendSignedTransaction(data).on('transactionHash',function(hash){console.log(\"Transaction hash is \".concat(hash));showInfoMessage(\"Transaction sent via Biconomy. Waiting for confirmation.\");}).once('confirmation',function(confirmation,receipt){console.log(\"Transaction Confirmed.\");console.log(receipt);setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed\");getQuoteFromNetwork();});_context2.next=21;break;case 20:showErrorMessage(\"Please enter the quote\");case 21:case\"end\":return _context2.stop();}}},_callee2);}));return function onSubmitWithPrivateKey(){return _ref.apply(this,arguments);};}();var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var tx;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(newQuote!=\"\"&&contract){setTransactionHash(\"\");if(metaTxEnabled){try{tx=contract.methods.setQuote(newQuote).send({from:selectedAddress,signatureType:biconomy.PERSONAL_SIGN});tx.on(\"transactionHash\",function(hash){console.log(\"Transaction hash is \".concat(hash));showInfoMessage(\"Transaction sent. Waiting for confirmation ..\");}).once(\"confirmation\",function(confirmationNumber,receipt){console.log(receipt);setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed on chain\");getQuoteFromNetwork();}).on('error',function(error,receipt){console.log(error);});}catch(err){console.log(\"handle errors like signature denied here\");console.log(err);}}else{console.log(\"Sending normal transaction\");contract.methods.setQuote(newQuote).send({from:selectedAddress}).on(\"transactionHash\",function(hash){showInfoMessage(\"Transaction sent to blockchain with hash \".concat(hash));}).once(\"confirmation\",function(confirmationNumber,receipt){setTransactionHash(receipt.transactionHash);showSuccessMessage(\"Transaction confirmed\");getQuoteFromNetwork();});}}else{showErrorMessage(\"Please enter the quote\");}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function onSubmit(){return _ref2.apply(this,arguments);};}();var getQuoteFromNetwork=function getQuoteFromNetwork(){setLoadingMessage(\"Getting Quote from contact ...\");try{if(web3&&contract){contract.methods.getQuote().call().then(function(result){handleClose();console.log(result);if(result&&result.currentQuote!=undefined&&result.currentOwner!=undefined){if(result.currentQuote==\"\"){showErrorMessage(\"No quotes set on blockchain yet\");}else{setQuote(result.currentQuote);setOwner(result.currentOwner);}}else{showErrorMessage(\"Not able to get quote information from Network\");}});}else{handleClose();}}catch(error){handleClose();console.log(error);}};var showErrorMessage=function showErrorMessage(message){NotificationManager.error(message,\"Error\",5000);};var showSuccessMessage=function showSuccessMessage(message){NotificationManager.success(message,\"Message\",3000);};var showInfoMessage=function showInfoMessage(message){NotificationManager.info(message,\"Info\",3000);};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"section\",{className:\"top-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Library \"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"web3.js\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Meta Transaction\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"EIP-2771\")),/*#__PURE__*/React.createElement(\"div\",{className:\"top-row-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Signature Type\"),/*#__PURE__*/React.createElement(\"span\",{className:\"label-value\"},\"Personal Signature\"))),/*#__PURE__*/React.createElement(\"section\",{className:\"main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mb-wrap mb-style-2\"},/*#__PURE__*/React.createElement(\"blockquote\",{cite:\"http://www.gutenberg.org/ebboks/11\"},/*#__PURE__*/React.createElement(\"p\",null,quote))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-attribution\"},/*#__PURE__*/React.createElement(\"p\",{className:\"mb-author\"},owner),selectedAddress.toLowerCase()===owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",{className:\"owner\"},\"You are the owner of the quote\"),selectedAddress.toLowerCase()!==owner.toLowerCase()&&/*#__PURE__*/React.createElement(\"cite\",null,\"You are not the owner of the quote\"))),/*#__PURE__*/React.createElement(\"section\",null,transactionHash!==\"\"&&/*#__PURE__*/React.createElement(Box,{className:classes.root,mt:2,p:2},/*#__PURE__*/React.createElement(Typography,null,\"Check your transaction hash\",/*#__PURE__*/React.createElement(Link,{href:\"https://kovan.etherscan.io/tx/\".concat(transactionHash),target:\"_blank\",className:classes.link},\"here\")))),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"submit-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"submit-row\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter your quote\",onChange:onQuoteChange,value:newQuote}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmit},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:onSubmitWithPrivateKey,style:{marginLeft:\"10px\"}},\"Submit (using private key)\")))),/*#__PURE__*/React.createElement(Backdrop,{className:classes.backdrop,open:backdropOpen,onClick:handleClose},/*#__PURE__*/React.createElement(CircularProgress,{color:\"inherit\"}),/*#__PURE__*/React.createElement(\"div\",{style:{paddingLeft:\"10px\"}},loadingMessage)),/*#__PURE__*/React.createElement(NotificationContainer,null));}export default App;","map":{"version":3,"sources":["/home/konstantin/Документы/react-ui-biconomy/react-ui/src/components/Web3_EIP2771_PersonalSign.js"],"names":["React","useState","useEffect","Button","NotificationContainer","NotificationManager","Backdrop","CircularProgress","Web3","Biconomy","makeStyles","Link","Typography","Box","sigUtil","require","config","contract","address","abi","apiKey","test","prod","web3","biconomy","useStyles","theme","root","marginLeft","spacing","link","backdrop","zIndex","drawer","color","opacity","background","App","classes","backdropOpen","setBackdropOpen","loadingMessage","setLoadingMessage","quote","setQuote","owner","setOwner","newQuote","setNewQuote","selectedAddress","setSelectedAddress","metaTxEnabled","transactionHash","setTransactionHash","init","window","ethereum","isMetaMask","provider","enable","kovanProvider","providers","HttpProvider","walletProvider","debug","onEvent","READY","eth","Contract","getQuoteFromNetwork","on","accounts","ERROR","showErrorMessage","handleClose","onQuoteChange","event","target","value","onSubmitWithPrivateKey","console","log","privateKey","userAddress","txParams","methods","encodeABI","utils","toHex","signTransaction","signedTx","getForwardRequestAndMessageToSign","rawTransaction","forwardData","sign","personalSignatureFormat","toString","signature","data","forwardRequest","request","signatureType","PERSONAL_SIGN","sendSignedTransaction","hash","showInfoMessage","once","confirmation","receipt","showSuccessMessage","onSubmit","tx","send","from","confirmationNumber","error","err","getQuote","call","then","result","currentQuote","undefined","currentOwner","message","success","info","toLowerCase","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n    NotificationContainer,\n    NotificationManager\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Web3 from \"web3\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from \"@material-ui/core\";\nlet sigUtil = require(\"eth-sig-util\");\nlet config = {\n    contract: {\n        address: \"0x880176EDA9f1608A2Bf182385379bDcC1a65Dfcf\",\n        abi: [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"forwarder\", \"type\": \"address\" }], \"name\": \"isTrustedForwarder\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"owner\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"quote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"trustedForwarder\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [{ \"internalType\": \"string\", \"name\": \"newQuote\", \"type\": \"string\" }], \"name\": \"setQuote\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getQuote\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"currentQuote\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"currentOwner\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }, { \"inputs\": [], \"name\": \"versionRecipient\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\", \"constant\": true }]\n    },\n    apiKey: {\n        test: \"cNWqZcoBb.4e4c0990-26a8-4a45-b98e-08101f754119\",\n        prod: \"8nvA_lM_Q.0424c54e-b4b2-4550-98c5-8b437d3118a9\"\n    }\n}\n\n\n\n\nlet web3, biconomy;\nlet contract;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > * + *': {\n            marginLeft: theme.spacing(2),\n        },\n    },\n    link: {\n        marginLeft: \"5px\"\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n        opacity: '.85!important',\n        background: '#000'\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [backdropOpen, setBackdropOpen] = React.useState(true);\n    const [loadingMessage, setLoadingMessage] = React.useState(\" Loading Application ...\");\n    const [quote, setQuote] = useState(\"This is a default quote\");\n    const [owner, setOwner] = useState(\"Default Owner Address\");\n    const [newQuote, setNewQuote] = useState(\"\");\n    const [selectedAddress, setSelectedAddress] = useState(\"\");\n    const [metaTxEnabled] = useState(true);\n    const [transactionHash, setTransactionHash] = useState(\"\");\n\n    useEffect(() => {\n        async function init() {\n            if (\n                typeof window.ethereum !== \"undefined\" &&\n                window.ethereum.isMetaMask\n            ) {\n                // Ethereum user detected. You can now use the provider.\n                const provider = window[\"ethereum\"];\n                await provider.enable();\n                let kovanProvider = new Web3.providers.HttpProvider(\"https://kovan.infura.io/v3/d126f392798444609246423b06116c77\");\n                setLoadingMessage(\"Initializing Biconomy ...\");\n                biconomy = new Biconomy(kovanProvider, {\n                    walletProvider: window.ethereum,\n                    apiKey: config.apiKey.prod,\n                    debug: true\n                });\n\n                // This web3 instance is used to read normally and write to contract via meta transactions.\n                web3 = new Web3(biconomy);\n\n\n                biconomy.onEvent(biconomy.READY, () => {\n                    // Initialize your dapp here like getting user accounts etc\n                    contract = new web3.eth.Contract(\n                        config.contract.abi,\n                        config.contract.address\n                    );\n                    setSelectedAddress(provider.selectedAddress);\n                    getQuoteFromNetwork();\n                    provider.on(\"accountsChanged\", function (accounts) {\n                        setSelectedAddress(accounts[0]);\n                    });\n                }).onEvent(biconomy.ERROR, () => {\n                    // Handle error while initializing mexa\n                });\n            } else {\n                showErrorMessage(\"Metamask not installed\");\n            }\n        }\n        init();\n    }, []);\n\n    const handleClose = () => {\n        setBackdropOpen(false);\n    };\n\n\n    const onQuoteChange = event => {\n        setNewQuote(event.target.value);\n    };\n\n    const onSubmitWithPrivateKey = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            console.log(\"Sending meta transaction\");\n            let privateKey = \"2ef295b86aa9d40ff8835a9fe852942ccea0b7c757fad5602dfa429bcdaea910\";\n            let userAddress = \"0xE1E763551A85F04B4687f0035885E7F710A46aA6\";\n            let txParams = {\n                \"from\": userAddress,\n                \"to\": config.contract.address,\n                \"data\": contract.methods.setQuote(newQuote).encodeABI(),\n                \"gasLimit\": web3.utils.toHex(300000),\n            };\n            const signedTx = await web3.eth.accounts.signTransaction(txParams, `0x${privateKey}`);\n            const forwardData = await biconomy.getForwardRequestAndMessageToSign(signedTx.rawTransaction);\n\n            console.log(forwardData);\n            console.log(privateKey);\n            // const signature = sigUtil.personalSign(new Buffer.from(privateKey, 'hex'), { data: forwardData.personalSignatureFormat });\n            let {signature} = web3.eth.accounts.sign(\"0x\" + forwardData.personalSignatureFormat.toString(\"hex\"), privateKey);\n            \n            let rawTransaction = signedTx.rawTransaction;\n            let data = {\n                signature: signature,\n                forwardRequest: forwardData.request,\n                rawTransaction: rawTransaction,\n                signatureType: biconomy.PERSONAL_SIGN\n            };\n\n            web3.eth.sendSignedTransaction(data)\n                .on('transactionHash', (hash) => {\n                    console.log(`Transaction hash is ${hash}`)\n                    showInfoMessage(`Transaction sent via Biconomy. Waiting for confirmation.`);\n                })\n                .once('confirmation', (confirmation, receipt) => {\n                    console.log(`Transaction Confirmed.`);\n                    console.log(receipt);\n                    setTransactionHash(receipt.transactionHash);\n                    showSuccessMessage(\"Transaction confirmed\");\n                    getQuoteFromNetwork();\n                });\n\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    }\n\n    const onSubmit = async () => {\n        if (newQuote != \"\" && contract) {\n            setTransactionHash(\"\");\n            if (metaTxEnabled) {\n             try{\n                let tx = contract.methods.setQuote(newQuote).send({\n                    from: selectedAddress,\n                    signatureType: biconomy.PERSONAL_SIGN\n                });\n\n                tx.on(\"transactionHash\", function (hash) {\n                    console.log(`Transaction hash is ${hash}`);\n                    showInfoMessage(`Transaction sent. Waiting for confirmation ..`);\n                }).once(\"confirmation\", function (confirmationNumber, receipt) {\n                    console.log(receipt);\n                    setTransactionHash(receipt.transactionHash);\n                    showSuccessMessage(\"Transaction confirmed on chain\");\n                    getQuoteFromNetwork();\n                }).on('error', function(error,receipt) {\n                    console.log(error);\n                });\n            } catch (err) {\n                console.log(\"handle errors like signature denied here\");\n                console.log(err);\n            }\n            } else {\n                console.log(\"Sending normal transaction\");\n                contract.methods\n                    .setQuote(newQuote)\n                    .send({ from: selectedAddress })\n                    .on(\"transactionHash\", function (hash) {\n                        showInfoMessage(`Transaction sent to blockchain with hash ${hash}`);\n                    })\n                    .once(\"confirmation\", function (confirmationNumber, receipt) {\n                        setTransactionHash(receipt.transactionHash);\n                        showSuccessMessage(\"Transaction confirmed\");\n                        getQuoteFromNetwork();\n                    });\n            }\n        } else {\n            showErrorMessage(\"Please enter the quote\");\n        }\n    };\n\n\n    const getQuoteFromNetwork = () => {\n        setLoadingMessage(\"Getting Quote from contact ...\");\n        try {\n            if (web3 && contract) {\n                contract.methods\n                    .getQuote()\n                    .call()\n                    .then(function (result) {\n                        handleClose();\n                        console.log(result);\n                        if (\n                            result &&\n                            result.currentQuote != undefined &&\n                            result.currentOwner != undefined\n                        ) {\n                            if (result.currentQuote == \"\") {\n                                showErrorMessage(\"No quotes set on blockchain yet\");\n                            } else {\n                                setQuote(result.currentQuote);\n                                setOwner(result.currentOwner);\n                            }\n                        } else {\n                            showErrorMessage(\"Not able to get quote information from Network\");\n                        }\n                    });\n            } else {\n                handleClose();\n            }\n        } catch (error) {\n            handleClose();\n            console.log(error);\n        }\n    };\n\n    const showErrorMessage = message => {\n        NotificationManager.error(message, \"Error\", 5000);\n    };\n\n    const showSuccessMessage = message => {\n        NotificationManager.success(message, \"Message\", 3000);\n    };\n\n    const showInfoMessage = message => {\n        NotificationManager.info(message, \"Info\", 3000);\n    };\n\n\n    return (\n        <div className=\"App\">\n            <section className=\"top-row\">\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Library </span>\n                    <span className=\"label-value\">web3.js</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Meta Transaction</span>\n                    <span className=\"label-value\">EIP-2771</span>\n                </div>\n                <div className=\"top-row-item\">\n                    <span className=\"label\">Signature Type</span>\n                    <span className=\"label-value\">Personal Signature</span>\n                </div>\n            </section>\n            <section className=\"main\">\n                <div className=\"mb-wrap mb-style-2\">\n                    <blockquote cite=\"http://www.gutenberg.org/ebboks/11\">\n                        <p>{quote}</p>\n                    </blockquote>\n                </div>\n\n                <div className=\"mb-attribution\">\n                    <p className=\"mb-author\">{owner}</p>\n                    {selectedAddress.toLowerCase() === owner.toLowerCase() && (\n                        <cite className=\"owner\">You are the owner of the quote</cite>\n                    )}\n                    {selectedAddress.toLowerCase() !== owner.toLowerCase() && (\n                        <cite>You are not the owner of the quote</cite>\n                    )}\n                </div>\n            </section>\n            <section>\n                {transactionHash !== \"\" && <Box className={classes.root} mt={2} p={2}>\n                    <Typography>\n                        Check your transaction hash\n            <Link href={`https://kovan.etherscan.io/tx/${transactionHash}`} target=\"_blank\"\n                            className={classes.link}>\n                            here\n            </Link>\n                    </Typography>\n                </Box>}\n            </section>\n            <section>\n                <div className=\"submit-container\">\n                    <div className=\"submit-row\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter your quote\"\n                            onChange={onQuoteChange}\n                            value={newQuote}\n                        />\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n                            Submit\n            </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onSubmitWithPrivateKey} style={{ marginLeft: \"10px\" }}>\n                            Submit (using private key)\n            </Button>\n                    </div>\n                </div>\n            </section>\n            <Backdrop className={classes.backdrop} open={backdropOpen} onClick={handleClose}>\n                <CircularProgress color=\"inherit\" />\n                <div style={{ paddingLeft: \"10px\" }}>{loadingMessage}</div>\n            </Backdrop>\n            <NotificationContainer />\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}